// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_commonmessages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dota_commonmessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CDOTAMsg_LocationPing_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CDOTAMsg_LocationPing_reflection_ = NULL;
const ::google::protobuf::Descriptor* CDOTAMsg_ItemAlert_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CDOTAMsg_ItemAlert_reflection_ = NULL;
const ::google::protobuf::Descriptor* CDOTAMsg_MapLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CDOTAMsg_MapLine_reflection_ = NULL;
const ::google::protobuf::Descriptor* CDOTAMsg_WorldLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CDOTAMsg_WorldLine_reflection_ = NULL;
const ::google::protobuf::Descriptor* CDOTAMsg_SendStatPopup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CDOTAMsg_SendStatPopup_reflection_ = NULL;
const ::google::protobuf::Descriptor* CDOTAMsg_CoachHUDPing_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CDOTAMsg_CoachHUDPing_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EDOTAChatWheelMessage_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EDOTAStatPopupTypes_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* dotaunitorder_t_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_dota_5fcommonmessages_2eproto() {
  protobuf_AddDesc_dota_5fcommonmessages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dota_commonmessages.proto");
  GOOGLE_CHECK(file != NULL);
  CDOTAMsg_LocationPing_descriptor_ = file->message_type(0);
  static const int CDOTAMsg_LocationPing_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_LocationPing, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_LocationPing, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_LocationPing, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_LocationPing, direct_ping_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_LocationPing, type_),
  };
  CDOTAMsg_LocationPing_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CDOTAMsg_LocationPing_descriptor_,
      CDOTAMsg_LocationPing::default_instance_,
      CDOTAMsg_LocationPing_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_LocationPing, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_LocationPing, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CDOTAMsg_LocationPing));
  CDOTAMsg_ItemAlert_descriptor_ = file->message_type(1);
  static const int CDOTAMsg_ItemAlert_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_ItemAlert, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_ItemAlert, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_ItemAlert, itemid_),
  };
  CDOTAMsg_ItemAlert_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CDOTAMsg_ItemAlert_descriptor_,
      CDOTAMsg_ItemAlert::default_instance_,
      CDOTAMsg_ItemAlert_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_ItemAlert, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_ItemAlert, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CDOTAMsg_ItemAlert));
  CDOTAMsg_MapLine_descriptor_ = file->message_type(2);
  static const int CDOTAMsg_MapLine_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_MapLine, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_MapLine, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_MapLine, initial_),
  };
  CDOTAMsg_MapLine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CDOTAMsg_MapLine_descriptor_,
      CDOTAMsg_MapLine::default_instance_,
      CDOTAMsg_MapLine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_MapLine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_MapLine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CDOTAMsg_MapLine));
  CDOTAMsg_WorldLine_descriptor_ = file->message_type(3);
  static const int CDOTAMsg_WorldLine_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_WorldLine, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_WorldLine, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_WorldLine, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_WorldLine, initial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_WorldLine, end_),
  };
  CDOTAMsg_WorldLine_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CDOTAMsg_WorldLine_descriptor_,
      CDOTAMsg_WorldLine::default_instance_,
      CDOTAMsg_WorldLine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_WorldLine, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_WorldLine, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CDOTAMsg_WorldLine));
  CDOTAMsg_SendStatPopup_descriptor_ = file->message_type(4);
  static const int CDOTAMsg_SendStatPopup_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_SendStatPopup, style_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_SendStatPopup, stat_strings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_SendStatPopup, stat_images_),
  };
  CDOTAMsg_SendStatPopup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CDOTAMsg_SendStatPopup_descriptor_,
      CDOTAMsg_SendStatPopup::default_instance_,
      CDOTAMsg_SendStatPopup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_SendStatPopup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_SendStatPopup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CDOTAMsg_SendStatPopup));
  CDOTAMsg_CoachHUDPing_descriptor_ = file->message_type(5);
  static const int CDOTAMsg_CoachHUDPing_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_CoachHUDPing, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_CoachHUDPing, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_CoachHUDPing, tgtpath_),
  };
  CDOTAMsg_CoachHUDPing_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CDOTAMsg_CoachHUDPing_descriptor_,
      CDOTAMsg_CoachHUDPing::default_instance_,
      CDOTAMsg_CoachHUDPing_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_CoachHUDPing, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAMsg_CoachHUDPing, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CDOTAMsg_CoachHUDPing));
  EDOTAChatWheelMessage_descriptor_ = file->enum_type(0);
  EDOTAStatPopupTypes_descriptor_ = file->enum_type(1);
  dotaunitorder_t_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dota_5fcommonmessages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CDOTAMsg_LocationPing_descriptor_, &CDOTAMsg_LocationPing::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CDOTAMsg_ItemAlert_descriptor_, &CDOTAMsg_ItemAlert::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CDOTAMsg_MapLine_descriptor_, &CDOTAMsg_MapLine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CDOTAMsg_WorldLine_descriptor_, &CDOTAMsg_WorldLine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CDOTAMsg_SendStatPopup_descriptor_, &CDOTAMsg_SendStatPopup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CDOTAMsg_CoachHUDPing_descriptor_, &CDOTAMsg_CoachHUDPing::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dota_5fcommonmessages_2eproto() {
  delete CDOTAMsg_LocationPing::default_instance_;
  delete CDOTAMsg_LocationPing_reflection_;
  delete CDOTAMsg_ItemAlert::default_instance_;
  delete CDOTAMsg_ItemAlert_reflection_;
  delete CDOTAMsg_MapLine::default_instance_;
  delete CDOTAMsg_MapLine_reflection_;
  delete CDOTAMsg_WorldLine::default_instance_;
  delete CDOTAMsg_WorldLine_reflection_;
  delete CDOTAMsg_SendStatPopup::default_instance_;
  delete CDOTAMsg_SendStatPopup_reflection_;
  delete CDOTAMsg_CoachHUDPing::default_instance_;
  delete CDOTAMsg_CoachHUDPing_reflection_;
}

void protobuf_AddDesc_dota_5fcommonmessages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031dota_commonmessages.proto\"`\n\025CDOTAMsg_"
    "LocationPing\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\016\n\006ta"
    "rget\030\003 \001(\005\022\023\n\013direct_ping\030\004 \001(\010\022\014\n\004type\030"
    "\005 \001(\005\":\n\022CDOTAMsg_ItemAlert\022\t\n\001x\030\001 \001(\005\022\t"
    "\n\001y\030\002 \001(\005\022\016\n\006itemid\030\003 \001(\005\"9\n\020CDOTAMsg_Ma"
    "pLine\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\017\n\007initial\030\003"
    " \001(\010\"S\n\022CDOTAMsg_WorldLine\022\t\n\001x\030\001 \001(\005\022\t\n"
    "\001y\030\002 \001(\005\022\t\n\001z\030\003 \001(\005\022\017\n\007initial\030\004 \001(\010\022\013\n\003"
    "end\030\005 \001(\010\"~\n\026CDOTAMsg_SendStatPopup\0229\n\005s"
    "tyle\030\001 \001(\0162\024.EDOTAStatPopupTypes:\024k_EDOT"
    "A_SPT_Textline\022\024\n\014stat_strings\030\002 \003(\t\022\023\n\013"
    "stat_images\030\003 \003(\005\">\n\025CDOTAMsg_CoachHUDPi"
    "ng\022\t\n\001x\030\001 \001(\r\022\t\n\001y\030\002 \001(\r\022\017\n\007tgtpath\030\003 \001("
    "\t*\305\021\n\025EDOTAChatWheelMessage\022\021\n\rk_EDOTA_C"
    "W_Ok\020\000\022\023\n\017k_EDOTA_CW_Care\020\001\022\026\n\022k_EDOTA_C"
    "W_GetBack\020\002\022\030\n\024k_EDOTA_CW_NeedWards\020\003\022\023\n"
    "\017k_EDOTA_CW_Stun\020\004\022\023\n\017k_EDOTA_CW_Help\020\005\022"
    "\023\n\017k_EDOTA_CW_Push\020\006\022\026\n\022k_EDOTA_CW_GoodJ"
    "ob\020\007\022\026\n\022k_EDOTA_CW_Missing\020\010\022\032\n\026k_EDOTA_"
    "CW_Missing_Top\020\t\022\032\n\026k_EDOTA_CW_Missing_M"
    "id\020\n\022\035\n\031k_EDOTA_CW_Missing_Bottom\020\013\022\021\n\rk"
    "_EDOTA_CW_Go\020\014\022\027\n\023k_EDOTA_CW_Initiate\020\r\022"
    "\025\n\021k_EDOTA_CW_Follow\020\016\022\027\n\023k_EDOTA_CW_Gro"
    "up_Up\020\017\022\031\n\025k_EDOTA_CW_Spread_Out\020\020\022\031\n\025k_"
    "EDOTA_CW_Split_Farm\020\021\022\025\n\021k_EDOTA_CW_Atta"
    "ck\020\022\022\022\n\016k_EDOTA_CW_BRB\020\023\022\023\n\017k_EDOTA_CW_D"
    "ive\020\024\022\022\n\016k_EDOTA_CW_OMW\020\025\022\030\n\024k_EDOTA_CW_"
    "Get_Ready\020\026\022\023\n\017k_EDOTA_CW_Bait\020\027\022\023\n\017k_ED"
    "OTA_CW_Heal\020\030\022\023\n\017k_EDOTA_CW_Mana\020\031\022\022\n\016k_"
    "EDOTA_CW_OOM\020\032\022\035\n\031k_EDOTA_CW_Skill_Coold"
    "own\020\033\022\031\n\025k_EDOTA_CW_Ulti_Ready\020\034\022\035\n\031k_ED"
    "OTA_CW_Enemy_Returned\020\035\022\032\n\026k_EDOTA_CW_Al"
    "l_Missing\020\036\022\035\n\031k_EDOTA_CW_Enemy_Incoming"
    "\020\037\022\032\n\026k_EDOTA_CW_Invis_Enemy\020 \022\035\n\031k_EDOT"
    "A_CW_Enemy_Had_Rune\020!\022\031\n\025k_EDOTA_CW_Spli"
    "t_Push\020\"\022\035\n\031k_EDOTA_CW_Coming_To_Gank\020#\022"
    "\033\n\027k_EDOTA_CW_Request_Gank\020$\022 \n\034k_EDOTA_"
    "CW_Fight_Under_Tower\020%\022\031\n\025k_EDOTA_CW_Den"
    "y_Tower\020&\022\032\n\026k_EDOTA_CW_Buy_Courier\020\'\022\036\n"
    "\032k_EDOTA_CW_Upgrade_Courier\020(\022\035\n\031k_EDOTA"
    "_CW_Need_Detection\020)\022\"\n\036k_EDOTA_CW_They_"
    "Have_Detection\020*\022\025\n\021k_EDOTA_CW_Buy_TP\020+\022"
    "\034\n\030k_EDOTA_CW_Reuse_Courier\020,\022\025\n\021k_EDOTA"
    "_CW_Deward\020-\022\033\n\027k_EDOTA_CW_Building_Mek\020"
    ".\022\034\n\030k_EDOTA_CW_Building_Pipe\020/\022\035\n\031k_EDO"
    "TA_CW_Stack_And_Pull\0200\022\023\n\017k_EDOTA_CW_Pul"
    "l\0201\022\026\n\022k_EDOTA_CW_Pulling\0202\022\024\n\020k_EDOTA_C"
    "W_Stack\0203\022\027\n\023k_EDOTA_CW_Jungling\0204\022\025\n\021k_"
    "EDOTA_CW_Roshan\0205\022\032\n\026k_EDOTA_CW_Affirmat"
    "ive\0206\022\023\n\017k_EDOTA_CW_Wait\0207\022\024\n\020k_EDOTA_CW"
    "_Pause\0208\022\033\n\027k_EDOTA_CW_Current_Time\0209\022\032\n"
    "\026k_EDOTA_CW_Check_Runes\020:\022\031\n\025k_EDOTA_CW_"
    "Smoke_Gank\020;\022\023\n\017k_EDOTA_CW_GLHF\020<\022\023\n\017k_E"
    "DOTA_CW_Nice\020=\022\025\n\021k_EDOTA_CW_Thanks\020>\022\024\n"
    "\020k_EDOTA_CW_Sorry\020\?\022\031\n\025k_EDOTA_CW_No_Giv"
    "e_Up\020@\022\034\n\030k_EDOTA_CW_Just_Happened\020A\022\033\n\027"
    "k_EDOTA_CW_Game_Is_Hard\020B\022\027\n\023k_EDOTA_CW_"
    "New_Meta\020C\022\025\n\021k_EDOTA_CW_My_Bad\020D\022\025\n\021k_E"
    "DOTA_CW_Regret\020E\022\024\n\020k_EDOTA_CW_Relax\020F\022\032"
    "\n\026k_EDOTA_CW_MissingHero\020G\022\033\n\027k_EDOTA_CW"
    "_ReturnedHero\020H\022\021\n\rk_EDOTA_CW_GG\020I\022\023\n\017k_"
    "EDOTA_CW_GGWP\020J\022\025\n\021k_EDOTA_CW_All_GG\020K\022\027"
    "\n\023k_EDOTA_CW_All_GGWP\020L\022\032\n\026k_EDOTA_CW_Wh"
    "at_To_Buy\020M\022\034\n\030k_EDOTA_CW_Im_Retreating\020"
    "N\022\034\n\030k_EDOTA_CW_Space_Created\020O\022\025\n\021k_EDO"
    "TA_CW_Whoops\020P\022\036\n\032k_EDOTA_CW_Tower_then_"
    "Back\020Q\022!\n\035k_EDOTA_CW_Barracks_then_Back\020"
    "R\022\037\n\033k_EDOTA_CW_Ward_Bottom_Rune\020S\022\034\n\030k_"
    "EDOTA_CW_Ward_Top_Rune\020T\022\027\n\023k_EDOTA_CW_Z"
    "eus_Ult\020U*r\n\023EDOTAStatPopupTypes\022\030\n\024k_ED"
    "OTA_SPT_Textline\020\000\022\025\n\021k_EDOTA_SPT_Basic\020"
    "\001\022\024\n\020k_EDOTA_SPT_Poll\020\002\022\024\n\020k_EDOTA_SPT_G"
    "rid\020\003*\333\007\n\017dotaunitorder_t\022\030\n\024DOTA_UNIT_O"
    "RDER_NONE\020\000\022$\n DOTA_UNIT_ORDER_MOVE_TO_P"
    "OSITION\020\001\022\"\n\036DOTA_UNIT_ORDER_MOVE_TO_TAR"
    "GET\020\002\022\037\n\033DOTA_UNIT_ORDER_ATTACK_MOVE\020\003\022!"
    "\n\035DOTA_UNIT_ORDER_ATTACK_TARGET\020\004\022!\n\035DOT"
    "A_UNIT_ORDER_CAST_POSITION\020\005\022\037\n\033DOTA_UNI"
    "T_ORDER_CAST_TARGET\020\006\022$\n DOTA_UNIT_ORDER"
    "_CAST_TARGET_TREE\020\007\022\"\n\036DOTA_UNIT_ORDER_C"
    "AST_NO_TARGET\020\010\022\037\n\033DOTA_UNIT_ORDER_CAST_"
    "TOGGLE\020\t\022!\n\035DOTA_UNIT_ORDER_HOLD_POSITIO"
    "N\020\n\022!\n\035DOTA_UNIT_ORDER_TRAIN_ABILITY\020\013\022\035"
    "\n\031DOTA_UNIT_ORDER_DROP_ITEM\020\014\022\035\n\031DOTA_UN"
    "IT_ORDER_GIVE_ITEM\020\r\022\037\n\033DOTA_UNIT_ORDER_"
    "PICKUP_ITEM\020\016\022\037\n\033DOTA_UNIT_ORDER_PICKUP_"
    "RUNE\020\017\022!\n\035DOTA_UNIT_ORDER_PURCHASE_ITEM\020"
    "\020\022\035\n\031DOTA_UNIT_ORDER_SELL_ITEM\020\021\022$\n DOTA"
    "_UNIT_ORDER_DISASSEMBLE_ITEM\020\022\022\035\n\031DOTA_U"
    "NIT_ORDER_MOVE_ITEM\020\023\022$\n DOTA_UNIT_ORDER"
    "_CAST_TOGGLE_AUTO\020\024\022\030\n\024DOTA_UNIT_ORDER_S"
    "TOP\020\025\022\031\n\025DOTA_UNIT_ORDER_TAUNT\020\026\022\033\n\027DOTA"
    "_UNIT_ORDER_BUYBACK\020\027\022\031\n\025DOTA_UNIT_ORDER"
    "_GLYPH\020\030\022)\n%DOTA_UNIT_ORDER_EJECT_ITEM_F"
    "ROM_STASH\020\031\022\035\n\031DOTA_UNIT_ORDER_CAST_RUNE"
    "\020\032\022 \n\034DOTA_UNIT_ORDER_PING_ABILITY\020\033\022%\n!"
    "DOTA_UNIT_ORDER_MOVE_TO_DIRECTION\020\034B\005H\001\200"
    "\001\000", 3882);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dota_commonmessages.proto", &protobuf_RegisterTypes);
  CDOTAMsg_LocationPing::default_instance_ = new CDOTAMsg_LocationPing();
  CDOTAMsg_ItemAlert::default_instance_ = new CDOTAMsg_ItemAlert();
  CDOTAMsg_MapLine::default_instance_ = new CDOTAMsg_MapLine();
  CDOTAMsg_WorldLine::default_instance_ = new CDOTAMsg_WorldLine();
  CDOTAMsg_SendStatPopup::default_instance_ = new CDOTAMsg_SendStatPopup();
  CDOTAMsg_CoachHUDPing::default_instance_ = new CDOTAMsg_CoachHUDPing();
  CDOTAMsg_LocationPing::default_instance_->InitAsDefaultInstance();
  CDOTAMsg_ItemAlert::default_instance_->InitAsDefaultInstance();
  CDOTAMsg_MapLine::default_instance_->InitAsDefaultInstance();
  CDOTAMsg_WorldLine::default_instance_->InitAsDefaultInstance();
  CDOTAMsg_SendStatPopup::default_instance_->InitAsDefaultInstance();
  CDOTAMsg_CoachHUDPing::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dota_5fcommonmessages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dota_5fcommonmessages_2eproto {
  StaticDescriptorInitializer_dota_5fcommonmessages_2eproto() {
    protobuf_AddDesc_dota_5fcommonmessages_2eproto();
  }
} static_descriptor_initializer_dota_5fcommonmessages_2eproto_;
const ::google::protobuf::EnumDescriptor* EDOTAChatWheelMessage_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EDOTAChatWheelMessage_descriptor_;
}
bool EDOTAChatWheelMessage_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EDOTAStatPopupTypes_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EDOTAStatPopupTypes_descriptor_;
}
bool EDOTAStatPopupTypes_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* dotaunitorder_t_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return dotaunitorder_t_descriptor_;
}
bool dotaunitorder_t_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int CDOTAMsg_LocationPing::kXFieldNumber;
const int CDOTAMsg_LocationPing::kYFieldNumber;
const int CDOTAMsg_LocationPing::kTargetFieldNumber;
const int CDOTAMsg_LocationPing::kDirectPingFieldNumber;
const int CDOTAMsg_LocationPing::kTypeFieldNumber;
#endif  // !_MSC_VER

CDOTAMsg_LocationPing::CDOTAMsg_LocationPing()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAMsg_LocationPing)
}

void CDOTAMsg_LocationPing::InitAsDefaultInstance() {
}

CDOTAMsg_LocationPing::CDOTAMsg_LocationPing(const CDOTAMsg_LocationPing& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CDOTAMsg_LocationPing)
}

void CDOTAMsg_LocationPing::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  target_ = 0;
  direct_ping_ = false;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CDOTAMsg_LocationPing::~CDOTAMsg_LocationPing() {
  // @@protoc_insertion_point(destructor:CDOTAMsg_LocationPing)
  SharedDtor();
}

void CDOTAMsg_LocationPing::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CDOTAMsg_LocationPing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CDOTAMsg_LocationPing::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CDOTAMsg_LocationPing_descriptor_;
}

const CDOTAMsg_LocationPing& CDOTAMsg_LocationPing::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dota_5fcommonmessages_2eproto();
  return *default_instance_;
}

CDOTAMsg_LocationPing* CDOTAMsg_LocationPing::default_instance_ = NULL;

CDOTAMsg_LocationPing* CDOTAMsg_LocationPing::New() const {
  return new CDOTAMsg_LocationPing;
}

void CDOTAMsg_LocationPing::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CDOTAMsg_LocationPing*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(x_, type_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CDOTAMsg_LocationPing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAMsg_LocationPing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_y;
        break;
      }

      // optional int32 y = 2;
      case 2: {
        if (tag == 16) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_target;
        break;
      }

      // optional int32 target = 3;
      case 3: {
        if (tag == 24) {
         parse_target:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_)));
          set_has_target();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_direct_ping;
        break;
      }

      // optional bool direct_ping = 4;
      case 4: {
        if (tag == 32) {
         parse_direct_ping:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &direct_ping_)));
          set_has_direct_ping();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional int32 type = 5;
      case 5: {
        if (tag == 40) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAMsg_LocationPing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAMsg_LocationPing)
  return false;
#undef DO_
}

void CDOTAMsg_LocationPing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAMsg_LocationPing)
  // optional int32 x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // optional int32 target = 3;
  if (has_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->target(), output);
  }

  // optional bool direct_ping = 4;
  if (has_direct_ping()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->direct_ping(), output);
  }

  // optional int32 type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAMsg_LocationPing)
}

::google::protobuf::uint8* CDOTAMsg_LocationPing::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAMsg_LocationPing)
  // optional int32 x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // optional int32 target = 3;
  if (has_target()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->target(), target);
  }

  // optional bool direct_ping = 4;
  if (has_direct_ping()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->direct_ping(), target);
  }

  // optional int32 type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAMsg_LocationPing)
  return target;
}

int CDOTAMsg_LocationPing::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional int32 target = 3;
    if (has_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target());
    }

    // optional bool direct_ping = 4;
    if (has_direct_ping()) {
      total_size += 1 + 1;
    }

    // optional int32 type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CDOTAMsg_LocationPing::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CDOTAMsg_LocationPing* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CDOTAMsg_LocationPing*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CDOTAMsg_LocationPing::MergeFrom(const CDOTAMsg_LocationPing& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_target()) {
      set_target(from.target());
    }
    if (from.has_direct_ping()) {
      set_direct_ping(from.direct_ping());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CDOTAMsg_LocationPing::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAMsg_LocationPing::CopyFrom(const CDOTAMsg_LocationPing& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAMsg_LocationPing::IsInitialized() const {

  return true;
}

void CDOTAMsg_LocationPing::Swap(CDOTAMsg_LocationPing* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(target_, other->target_);
    std::swap(direct_ping_, other->direct_ping_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CDOTAMsg_LocationPing::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CDOTAMsg_LocationPing_descriptor_;
  metadata.reflection = CDOTAMsg_LocationPing_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CDOTAMsg_ItemAlert::kXFieldNumber;
const int CDOTAMsg_ItemAlert::kYFieldNumber;
const int CDOTAMsg_ItemAlert::kItemidFieldNumber;
#endif  // !_MSC_VER

CDOTAMsg_ItemAlert::CDOTAMsg_ItemAlert()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAMsg_ItemAlert)
}

void CDOTAMsg_ItemAlert::InitAsDefaultInstance() {
}

CDOTAMsg_ItemAlert::CDOTAMsg_ItemAlert(const CDOTAMsg_ItemAlert& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CDOTAMsg_ItemAlert)
}

void CDOTAMsg_ItemAlert::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  itemid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CDOTAMsg_ItemAlert::~CDOTAMsg_ItemAlert() {
  // @@protoc_insertion_point(destructor:CDOTAMsg_ItemAlert)
  SharedDtor();
}

void CDOTAMsg_ItemAlert::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CDOTAMsg_ItemAlert::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CDOTAMsg_ItemAlert::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CDOTAMsg_ItemAlert_descriptor_;
}

const CDOTAMsg_ItemAlert& CDOTAMsg_ItemAlert::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dota_5fcommonmessages_2eproto();
  return *default_instance_;
}

CDOTAMsg_ItemAlert* CDOTAMsg_ItemAlert::default_instance_ = NULL;

CDOTAMsg_ItemAlert* CDOTAMsg_ItemAlert::New() const {
  return new CDOTAMsg_ItemAlert;
}

void CDOTAMsg_ItemAlert::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CDOTAMsg_ItemAlert*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(x_, itemid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CDOTAMsg_ItemAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAMsg_ItemAlert)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_y;
        break;
      }

      // optional int32 y = 2;
      case 2: {
        if (tag == 16) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_itemid;
        break;
      }

      // optional int32 itemid = 3;
      case 3: {
        if (tag == 24) {
         parse_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAMsg_ItemAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAMsg_ItemAlert)
  return false;
#undef DO_
}

void CDOTAMsg_ItemAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAMsg_ItemAlert)
  // optional int32 x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // optional int32 itemid = 3;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAMsg_ItemAlert)
}

::google::protobuf::uint8* CDOTAMsg_ItemAlert::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAMsg_ItemAlert)
  // optional int32 x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // optional int32 itemid = 3;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAMsg_ItemAlert)
  return target;
}

int CDOTAMsg_ItemAlert::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional int32 itemid = 3;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CDOTAMsg_ItemAlert::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CDOTAMsg_ItemAlert* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CDOTAMsg_ItemAlert*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CDOTAMsg_ItemAlert::MergeFrom(const CDOTAMsg_ItemAlert& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CDOTAMsg_ItemAlert::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAMsg_ItemAlert::CopyFrom(const CDOTAMsg_ItemAlert& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAMsg_ItemAlert::IsInitialized() const {

  return true;
}

void CDOTAMsg_ItemAlert::Swap(CDOTAMsg_ItemAlert* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CDOTAMsg_ItemAlert::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CDOTAMsg_ItemAlert_descriptor_;
  metadata.reflection = CDOTAMsg_ItemAlert_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CDOTAMsg_MapLine::kXFieldNumber;
const int CDOTAMsg_MapLine::kYFieldNumber;
const int CDOTAMsg_MapLine::kInitialFieldNumber;
#endif  // !_MSC_VER

CDOTAMsg_MapLine::CDOTAMsg_MapLine()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAMsg_MapLine)
}

void CDOTAMsg_MapLine::InitAsDefaultInstance() {
}

CDOTAMsg_MapLine::CDOTAMsg_MapLine(const CDOTAMsg_MapLine& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CDOTAMsg_MapLine)
}

void CDOTAMsg_MapLine::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  initial_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CDOTAMsg_MapLine::~CDOTAMsg_MapLine() {
  // @@protoc_insertion_point(destructor:CDOTAMsg_MapLine)
  SharedDtor();
}

void CDOTAMsg_MapLine::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CDOTAMsg_MapLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CDOTAMsg_MapLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CDOTAMsg_MapLine_descriptor_;
}

const CDOTAMsg_MapLine& CDOTAMsg_MapLine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dota_5fcommonmessages_2eproto();
  return *default_instance_;
}

CDOTAMsg_MapLine* CDOTAMsg_MapLine::default_instance_ = NULL;

CDOTAMsg_MapLine* CDOTAMsg_MapLine::New() const {
  return new CDOTAMsg_MapLine;
}

void CDOTAMsg_MapLine::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CDOTAMsg_MapLine*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(x_, initial_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CDOTAMsg_MapLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAMsg_MapLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_y;
        break;
      }

      // optional int32 y = 2;
      case 2: {
        if (tag == 16) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_initial;
        break;
      }

      // optional bool initial = 3;
      case 3: {
        if (tag == 24) {
         parse_initial:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &initial_)));
          set_has_initial();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAMsg_MapLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAMsg_MapLine)
  return false;
#undef DO_
}

void CDOTAMsg_MapLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAMsg_MapLine)
  // optional int32 x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // optional bool initial = 3;
  if (has_initial()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->initial(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAMsg_MapLine)
}

::google::protobuf::uint8* CDOTAMsg_MapLine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAMsg_MapLine)
  // optional int32 x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // optional bool initial = 3;
  if (has_initial()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->initial(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAMsg_MapLine)
  return target;
}

int CDOTAMsg_MapLine::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional bool initial = 3;
    if (has_initial()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CDOTAMsg_MapLine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CDOTAMsg_MapLine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CDOTAMsg_MapLine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CDOTAMsg_MapLine::MergeFrom(const CDOTAMsg_MapLine& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_initial()) {
      set_initial(from.initial());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CDOTAMsg_MapLine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAMsg_MapLine::CopyFrom(const CDOTAMsg_MapLine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAMsg_MapLine::IsInitialized() const {

  return true;
}

void CDOTAMsg_MapLine::Swap(CDOTAMsg_MapLine* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(initial_, other->initial_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CDOTAMsg_MapLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CDOTAMsg_MapLine_descriptor_;
  metadata.reflection = CDOTAMsg_MapLine_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CDOTAMsg_WorldLine::kXFieldNumber;
const int CDOTAMsg_WorldLine::kYFieldNumber;
const int CDOTAMsg_WorldLine::kZFieldNumber;
const int CDOTAMsg_WorldLine::kInitialFieldNumber;
const int CDOTAMsg_WorldLine::kEndFieldNumber;
#endif  // !_MSC_VER

CDOTAMsg_WorldLine::CDOTAMsg_WorldLine()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAMsg_WorldLine)
}

void CDOTAMsg_WorldLine::InitAsDefaultInstance() {
}

CDOTAMsg_WorldLine::CDOTAMsg_WorldLine(const CDOTAMsg_WorldLine& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CDOTAMsg_WorldLine)
}

void CDOTAMsg_WorldLine::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  initial_ = false;
  end_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CDOTAMsg_WorldLine::~CDOTAMsg_WorldLine() {
  // @@protoc_insertion_point(destructor:CDOTAMsg_WorldLine)
  SharedDtor();
}

void CDOTAMsg_WorldLine::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CDOTAMsg_WorldLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CDOTAMsg_WorldLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CDOTAMsg_WorldLine_descriptor_;
}

const CDOTAMsg_WorldLine& CDOTAMsg_WorldLine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dota_5fcommonmessages_2eproto();
  return *default_instance_;
}

CDOTAMsg_WorldLine* CDOTAMsg_WorldLine::default_instance_ = NULL;

CDOTAMsg_WorldLine* CDOTAMsg_WorldLine::New() const {
  return new CDOTAMsg_WorldLine;
}

void CDOTAMsg_WorldLine::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CDOTAMsg_WorldLine*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(x_, end_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CDOTAMsg_WorldLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAMsg_WorldLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_y;
        break;
      }

      // optional int32 y = 2;
      case 2: {
        if (tag == 16) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_z;
        break;
      }

      // optional int32 z = 3;
      case 3: {
        if (tag == 24) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_initial;
        break;
      }

      // optional bool initial = 4;
      case 4: {
        if (tag == 32) {
         parse_initial:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &initial_)));
          set_has_initial();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_end;
        break;
      }

      // optional bool end = 5;
      case 5: {
        if (tag == 40) {
         parse_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &end_)));
          set_has_end();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAMsg_WorldLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAMsg_WorldLine)
  return false;
#undef DO_
}

void CDOTAMsg_WorldLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAMsg_WorldLine)
  // optional int32 x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // optional int32 z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->z(), output);
  }

  // optional bool initial = 4;
  if (has_initial()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->initial(), output);
  }

  // optional bool end = 5;
  if (has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->end(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAMsg_WorldLine)
}

::google::protobuf::uint8* CDOTAMsg_WorldLine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAMsg_WorldLine)
  // optional int32 x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // optional int32 z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->z(), target);
  }

  // optional bool initial = 4;
  if (has_initial()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->initial(), target);
  }

  // optional bool end = 5;
  if (has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->end(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAMsg_WorldLine)
  return target;
}

int CDOTAMsg_WorldLine::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional int32 z = 3;
    if (has_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->z());
    }

    // optional bool initial = 4;
    if (has_initial()) {
      total_size += 1 + 1;
    }

    // optional bool end = 5;
    if (has_end()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CDOTAMsg_WorldLine::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CDOTAMsg_WorldLine* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CDOTAMsg_WorldLine*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CDOTAMsg_WorldLine::MergeFrom(const CDOTAMsg_WorldLine& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
    if (from.has_initial()) {
      set_initial(from.initial());
    }
    if (from.has_end()) {
      set_end(from.end());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CDOTAMsg_WorldLine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAMsg_WorldLine::CopyFrom(const CDOTAMsg_WorldLine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAMsg_WorldLine::IsInitialized() const {

  return true;
}

void CDOTAMsg_WorldLine::Swap(CDOTAMsg_WorldLine* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(initial_, other->initial_);
    std::swap(end_, other->end_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CDOTAMsg_WorldLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CDOTAMsg_WorldLine_descriptor_;
  metadata.reflection = CDOTAMsg_WorldLine_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CDOTAMsg_SendStatPopup::kStyleFieldNumber;
const int CDOTAMsg_SendStatPopup::kStatStringsFieldNumber;
const int CDOTAMsg_SendStatPopup::kStatImagesFieldNumber;
#endif  // !_MSC_VER

CDOTAMsg_SendStatPopup::CDOTAMsg_SendStatPopup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAMsg_SendStatPopup)
}

void CDOTAMsg_SendStatPopup::InitAsDefaultInstance() {
}

CDOTAMsg_SendStatPopup::CDOTAMsg_SendStatPopup(const CDOTAMsg_SendStatPopup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CDOTAMsg_SendStatPopup)
}

void CDOTAMsg_SendStatPopup::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  style_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CDOTAMsg_SendStatPopup::~CDOTAMsg_SendStatPopup() {
  // @@protoc_insertion_point(destructor:CDOTAMsg_SendStatPopup)
  SharedDtor();
}

void CDOTAMsg_SendStatPopup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CDOTAMsg_SendStatPopup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CDOTAMsg_SendStatPopup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CDOTAMsg_SendStatPopup_descriptor_;
}

const CDOTAMsg_SendStatPopup& CDOTAMsg_SendStatPopup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dota_5fcommonmessages_2eproto();
  return *default_instance_;
}

CDOTAMsg_SendStatPopup* CDOTAMsg_SendStatPopup::default_instance_ = NULL;

CDOTAMsg_SendStatPopup* CDOTAMsg_SendStatPopup::New() const {
  return new CDOTAMsg_SendStatPopup;
}

void CDOTAMsg_SendStatPopup::Clear() {
  style_ = 0;
  stat_strings_.Clear();
  stat_images_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CDOTAMsg_SendStatPopup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAMsg_SendStatPopup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .EDOTAStatPopupTypes style = 1 [default = k_EDOTA_SPT_Textline];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EDOTAStatPopupTypes_IsValid(value)) {
            set_style(static_cast< ::EDOTAStatPopupTypes >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_stat_strings;
        break;
      }

      // repeated string stat_strings = 2;
      case 2: {
        if (tag == 18) {
         parse_stat_strings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stat_strings()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stat_strings(this->stat_strings_size() - 1).data(),
            this->stat_strings(this->stat_strings_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stat_strings");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_stat_strings;
        if (input->ExpectTag(24)) goto parse_stat_images;
        break;
      }

      // repeated int32 stat_images = 3;
      case 3: {
        if (tag == 24) {
         parse_stat_images:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_stat_images())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_stat_images())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_stat_images;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAMsg_SendStatPopup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAMsg_SendStatPopup)
  return false;
#undef DO_
}

void CDOTAMsg_SendStatPopup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAMsg_SendStatPopup)
  // optional .EDOTAStatPopupTypes style = 1 [default = k_EDOTA_SPT_Textline];
  if (has_style()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->style(), output);
  }

  // repeated string stat_strings = 2;
  for (int i = 0; i < this->stat_strings_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->stat_strings(i).data(), this->stat_strings(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "stat_strings");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->stat_strings(i), output);
  }

  // repeated int32 stat_images = 3;
  for (int i = 0; i < this->stat_images_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->stat_images(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAMsg_SendStatPopup)
}

::google::protobuf::uint8* CDOTAMsg_SendStatPopup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAMsg_SendStatPopup)
  // optional .EDOTAStatPopupTypes style = 1 [default = k_EDOTA_SPT_Textline];
  if (has_style()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->style(), target);
  }

  // repeated string stat_strings = 2;
  for (int i = 0; i < this->stat_strings_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stat_strings(i).data(), this->stat_strings(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stat_strings");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->stat_strings(i), target);
  }

  // repeated int32 stat_images = 3;
  for (int i = 0; i < this->stat_images_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->stat_images(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAMsg_SendStatPopup)
  return target;
}

int CDOTAMsg_SendStatPopup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .EDOTAStatPopupTypes style = 1 [default = k_EDOTA_SPT_Textline];
    if (has_style()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->style());
    }

  }
  // repeated string stat_strings = 2;
  total_size += 1 * this->stat_strings_size();
  for (int i = 0; i < this->stat_strings_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stat_strings(i));
  }

  // repeated int32 stat_images = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->stat_images_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->stat_images(i));
    }
    total_size += 1 * this->stat_images_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CDOTAMsg_SendStatPopup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CDOTAMsg_SendStatPopup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CDOTAMsg_SendStatPopup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CDOTAMsg_SendStatPopup::MergeFrom(const CDOTAMsg_SendStatPopup& from) {
  GOOGLE_CHECK_NE(&from, this);
  stat_strings_.MergeFrom(from.stat_strings_);
  stat_images_.MergeFrom(from.stat_images_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_style()) {
      set_style(from.style());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CDOTAMsg_SendStatPopup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAMsg_SendStatPopup::CopyFrom(const CDOTAMsg_SendStatPopup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAMsg_SendStatPopup::IsInitialized() const {

  return true;
}

void CDOTAMsg_SendStatPopup::Swap(CDOTAMsg_SendStatPopup* other) {
  if (other != this) {
    std::swap(style_, other->style_);
    stat_strings_.Swap(&other->stat_strings_);
    stat_images_.Swap(&other->stat_images_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CDOTAMsg_SendStatPopup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CDOTAMsg_SendStatPopup_descriptor_;
  metadata.reflection = CDOTAMsg_SendStatPopup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CDOTAMsg_CoachHUDPing::kXFieldNumber;
const int CDOTAMsg_CoachHUDPing::kYFieldNumber;
const int CDOTAMsg_CoachHUDPing::kTgtpathFieldNumber;
#endif  // !_MSC_VER

CDOTAMsg_CoachHUDPing::CDOTAMsg_CoachHUDPing()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAMsg_CoachHUDPing)
}

void CDOTAMsg_CoachHUDPing::InitAsDefaultInstance() {
}

CDOTAMsg_CoachHUDPing::CDOTAMsg_CoachHUDPing(const CDOTAMsg_CoachHUDPing& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CDOTAMsg_CoachHUDPing)
}

void CDOTAMsg_CoachHUDPing::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  x_ = 0u;
  y_ = 0u;
  tgtpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CDOTAMsg_CoachHUDPing::~CDOTAMsg_CoachHUDPing() {
  // @@protoc_insertion_point(destructor:CDOTAMsg_CoachHUDPing)
  SharedDtor();
}

void CDOTAMsg_CoachHUDPing::SharedDtor() {
  if (tgtpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tgtpath_;
  }
  if (this != default_instance_) {
  }
}

void CDOTAMsg_CoachHUDPing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CDOTAMsg_CoachHUDPing::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CDOTAMsg_CoachHUDPing_descriptor_;
}

const CDOTAMsg_CoachHUDPing& CDOTAMsg_CoachHUDPing::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dota_5fcommonmessages_2eproto();
  return *default_instance_;
}

CDOTAMsg_CoachHUDPing* CDOTAMsg_CoachHUDPing::default_instance_ = NULL;

CDOTAMsg_CoachHUDPing* CDOTAMsg_CoachHUDPing::New() const {
  return new CDOTAMsg_CoachHUDPing;
}

void CDOTAMsg_CoachHUDPing::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CDOTAMsg_CoachHUDPing*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(x_, y_);
    if (has_tgtpath()) {
      if (tgtpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        tgtpath_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CDOTAMsg_CoachHUDPing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAMsg_CoachHUDPing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 x = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_y;
        break;
      }

      // optional uint32 y = 2;
      case 2: {
        if (tag == 16) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tgtpath;
        break;
      }

      // optional string tgtpath = 3;
      case 3: {
        if (tag == 26) {
         parse_tgtpath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tgtpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tgtpath().data(), this->tgtpath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tgtpath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAMsg_CoachHUDPing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAMsg_CoachHUDPing)
  return false;
#undef DO_
}

void CDOTAMsg_CoachHUDPing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAMsg_CoachHUDPing)
  // optional uint32 x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->x(), output);
  }

  // optional uint32 y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->y(), output);
  }

  // optional string tgtpath = 3;
  if (has_tgtpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tgtpath().data(), this->tgtpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tgtpath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tgtpath(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAMsg_CoachHUDPing)
}

::google::protobuf::uint8* CDOTAMsg_CoachHUDPing::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAMsg_CoachHUDPing)
  // optional uint32 x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->x(), target);
  }

  // optional uint32 y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->y(), target);
  }

  // optional string tgtpath = 3;
  if (has_tgtpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tgtpath().data(), this->tgtpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tgtpath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tgtpath(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAMsg_CoachHUDPing)
  return target;
}

int CDOTAMsg_CoachHUDPing::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x());
    }

    // optional uint32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y());
    }

    // optional string tgtpath = 3;
    if (has_tgtpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tgtpath());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CDOTAMsg_CoachHUDPing::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CDOTAMsg_CoachHUDPing* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CDOTAMsg_CoachHUDPing*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CDOTAMsg_CoachHUDPing::MergeFrom(const CDOTAMsg_CoachHUDPing& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_tgtpath()) {
      set_tgtpath(from.tgtpath());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CDOTAMsg_CoachHUDPing::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAMsg_CoachHUDPing::CopyFrom(const CDOTAMsg_CoachHUDPing& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAMsg_CoachHUDPing::IsInitialized() const {

  return true;
}

void CDOTAMsg_CoachHUDPing::Swap(CDOTAMsg_CoachHUDPing* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(tgtpath_, other->tgtpath_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CDOTAMsg_CoachHUDPing::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CDOTAMsg_CoachHUDPing_descriptor_;
  metadata.reflection = CDOTAMsg_CoachHUDPing_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
