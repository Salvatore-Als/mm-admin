// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netmessages.proto

#ifndef PROTOBUF_netmessages_2eproto__INCLUDED
#define PROTOBUF_netmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "networkbasetypes.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_netmessages_2eproto();
void protobuf_AssignDesc_netmessages_2eproto();
void protobuf_ShutdownFile_netmessages_2eproto();

class CCLCMsg_ClientInfo;
class CCLCMsg_Move;
class CMsgVoiceAudio;
class CCLCMsg_VoiceData;
class CCLCMsg_BaselineAck;
class CCLCMsg_ListenEvents;
class CCLCMsg_RespondCvarValue;
class CCLCMsg_FileCRCCheck;
class CCLCMsg_LoadingProgress;
class CCLCMsg_SplitPlayerConnect;
class CCLCMsg_ClientMessage;
class CCLCMsg_SplitPlayerDisconnect;
class CCLCMsg_ServerStatus;
class CCLCMsg_ServerPing;
class CCLCMsg_RequestPause;
class CCLCMsg_CmdKeyValues;
class CSVCMsg_ServerInfo;
class CSVCMsg_ClassInfo;
class CSVCMsg_ClassInfo_class_t;
class CSVCMsg_SetPause;
class CSVCMsg_VoiceInit;
class CSVCMsg_Print;
class CSVCMsg_Sounds;
class CSVCMsg_Sounds_sounddata_t;
class CSVCMsg_Prefetch;
class CSVCMsg_SetView;
class CSVCMsg_FixAngle;
class CSVCMsg_CrosshairAngle;
class CSVCMsg_BSPDecal;
class CSVCMsg_SplitScreen;
class CSVCMsg_GetCvarValue;
class CSVCMsg_Menu;
class CSVCMsg_SendTable;
class CSVCMsg_SendTable_sendprop_t;
class CSVCMsg_GameEventList;
class CSVCMsg_GameEventList_key_t;
class CSVCMsg_GameEventList_descriptor_t;
class CSVCMsg_PacketEntities;
class CSVCMsg_TempEntities;
class CSVCMsg_CreateStringTable;
class CSVCMsg_UpdateStringTable;
class CSVCMsg_VoiceData;
class CSVCMsg_PacketReliable;
class CSVCMsg_FullFrameSplit;
class CSVCMsg_CmdKeyValues;
class CMsgIPCAddress;
class CMsgServerPeer;
class CSVCMsg_PeerList;
class CSVCMsg_ClearAllStringTables;
class ProtoFlattenedSerializerField_t;
class ProtoFlattenedSerializer_t;
class CSVCMsg_FlattenedSerializer;
class CSVCMsg_StopSound;
class CBidirMsg_RebroadcastGameEvent;
class CBidirMsg_RebroadcastSource;
class SerializedNetAddress_t;
class CBidirMsg_RelayInfo;
class SignedPayload_t;
class CBidirMsg_RelayPacket;
class CBidirMsg_RelayPacket_SignedDestinationAddress_t;

enum CBidirMsg_RelayInfo_Operation_t {
  CBidirMsg_RelayInfo_Operation_t_RIO_REQUEST_RELAY = 0,
  CBidirMsg_RelayInfo_Operation_t_RIO_WILL_RELAY = 1,
  CBidirMsg_RelayInfo_Operation_t_RIO_NO_ROUTE = 2,
  CBidirMsg_RelayInfo_Operation_t_RIO_REJECT_RELAY = 3,
  CBidirMsg_RelayInfo_Operation_t_RIO_ESTABLISH_CONNECTION = 4
};
bool CBidirMsg_RelayInfo_Operation_t_IsValid(int value);
const CBidirMsg_RelayInfo_Operation_t CBidirMsg_RelayInfo_Operation_t_Operation_t_MIN = CBidirMsg_RelayInfo_Operation_t_RIO_REQUEST_RELAY;
const CBidirMsg_RelayInfo_Operation_t CBidirMsg_RelayInfo_Operation_t_Operation_t_MAX = CBidirMsg_RelayInfo_Operation_t_RIO_ESTABLISH_CONNECTION;
const int CBidirMsg_RelayInfo_Operation_t_Operation_t_ARRAYSIZE = CBidirMsg_RelayInfo_Operation_t_Operation_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* CBidirMsg_RelayInfo_Operation_t_descriptor();
inline const ::std::string& CBidirMsg_RelayInfo_Operation_t_Name(CBidirMsg_RelayInfo_Operation_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    CBidirMsg_RelayInfo_Operation_t_descriptor(), value);
}
inline bool CBidirMsg_RelayInfo_Operation_t_Parse(
    const ::std::string& name, CBidirMsg_RelayInfo_Operation_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CBidirMsg_RelayInfo_Operation_t>(
    CBidirMsg_RelayInfo_Operation_t_descriptor(), name, value);
}
enum CLC_Messages {
  clc_ClientInfo = 20,
  clc_Move = 21,
  clc_VoiceData = 22,
  clc_BaselineAck = 23,
  clc_ListenEvents = 24,
  clc_RespondCvarValue = 25,
  clc_FileCRCCheck = 26,
  clc_LoadingProgress = 27,
  clc_SplitPlayerConnect = 28,
  clc_ClientMessage = 29,
  clc_SplitPlayerDisconnect = 30,
  clc_ServerStatus = 31,
  clc_ServerPing = 32,
  clc_RequestPause = 33,
  clc_CmdKeyValues = 34
};
bool CLC_Messages_IsValid(int value);
const CLC_Messages CLC_Messages_MIN = clc_ClientInfo;
const CLC_Messages CLC_Messages_MAX = clc_CmdKeyValues;
const int CLC_Messages_ARRAYSIZE = CLC_Messages_MAX + 1;

const ::google::protobuf::EnumDescriptor* CLC_Messages_descriptor();
inline const ::std::string& CLC_Messages_Name(CLC_Messages value) {
  return ::google::protobuf::internal::NameOfEnum(
    CLC_Messages_descriptor(), value);
}
inline bool CLC_Messages_Parse(
    const ::std::string& name, CLC_Messages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CLC_Messages>(
    CLC_Messages_descriptor(), name, value);
}
enum SVC_Messages {
  svc_ServerInfo = 40,
  svc_FlattenedSerializer = 41,
  svc_ClassInfo = 42,
  svc_SetPause = 43,
  svc_CreateStringTable = 44,
  svc_UpdateStringTable = 45,
  svc_VoiceInit = 46,
  svc_VoiceData = 47,
  svc_Print = 48,
  svc_Sounds = 49,
  svc_SetView = 50,
  svc_ClearAllStringTables = 51,
  svc_CmdKeyValues = 52,
  svc_BSPDecal = 53,
  svc_SplitScreen = 54,
  svc_PacketEntities = 55,
  svc_Prefetch = 56,
  svc_Menu = 57,
  svc_GetCvarValue = 58,
  svc_StopSound = 59,
  svc_PeerList = 60,
  svc_PacketReliable = 61,
  svc_UserMessage = 62,
  svc_SendTable = 63,
  svc_GameEvent = 67,
  svc_TempEntities = 68,
  svc_GameEventList = 69,
  svc_FullFrameSplit = 70
};
bool SVC_Messages_IsValid(int value);
const SVC_Messages SVC_Messages_MIN = svc_ServerInfo;
const SVC_Messages SVC_Messages_MAX = svc_FullFrameSplit;
const int SVC_Messages_ARRAYSIZE = SVC_Messages_MAX + 1;

const ::google::protobuf::EnumDescriptor* SVC_Messages_descriptor();
inline const ::std::string& SVC_Messages_Name(SVC_Messages value) {
  return ::google::protobuf::internal::NameOfEnum(
    SVC_Messages_descriptor(), value);
}
inline bool SVC_Messages_Parse(
    const ::std::string& name, SVC_Messages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SVC_Messages>(
    SVC_Messages_descriptor(), name, value);
}
enum VoiceDataFormat_t {
  VOICEDATA_FORMAT_STEAM = 0,
  VOICEDATA_FORMAT_ENGINE = 1
};
bool VoiceDataFormat_t_IsValid(int value);
const VoiceDataFormat_t VoiceDataFormat_t_MIN = VOICEDATA_FORMAT_STEAM;
const VoiceDataFormat_t VoiceDataFormat_t_MAX = VOICEDATA_FORMAT_ENGINE;
const int VoiceDataFormat_t_ARRAYSIZE = VoiceDataFormat_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* VoiceDataFormat_t_descriptor();
inline const ::std::string& VoiceDataFormat_t_Name(VoiceDataFormat_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    VoiceDataFormat_t_descriptor(), value);
}
inline bool VoiceDataFormat_t_Parse(
    const ::std::string& name, VoiceDataFormat_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VoiceDataFormat_t>(
    VoiceDataFormat_t_descriptor(), name, value);
}
enum RequestPause_t {
  RP_PAUSE = 0,
  RP_UNPAUSE = 1,
  RP_TOGGLEPAUSE = 2
};
bool RequestPause_t_IsValid(int value);
const RequestPause_t RequestPause_t_MIN = RP_PAUSE;
const RequestPause_t RequestPause_t_MAX = RP_TOGGLEPAUSE;
const int RequestPause_t_ARRAYSIZE = RequestPause_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestPause_t_descriptor();
inline const ::std::string& RequestPause_t_Name(RequestPause_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestPause_t_descriptor(), value);
}
inline bool RequestPause_t_Parse(
    const ::std::string& name, RequestPause_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestPause_t>(
    RequestPause_t_descriptor(), name, value);
}
enum PrefetchType {
  PFT_SOUND = 0
};
bool PrefetchType_IsValid(int value);
const PrefetchType PrefetchType_MIN = PFT_SOUND;
const PrefetchType PrefetchType_MAX = PFT_SOUND;
const int PrefetchType_ARRAYSIZE = PrefetchType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PrefetchType_descriptor();
inline const ::std::string& PrefetchType_Name(PrefetchType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PrefetchType_descriptor(), value);
}
inline bool PrefetchType_Parse(
    const ::std::string& name, PrefetchType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PrefetchType>(
    PrefetchType_descriptor(), name, value);
}
enum ESplitScreenMessageType {
  MSG_SPLITSCREEN_ADDUSER = 0,
  MSG_SPLITSCREEN_REMOVEUSER = 1
};
bool ESplitScreenMessageType_IsValid(int value);
const ESplitScreenMessageType ESplitScreenMessageType_MIN = MSG_SPLITSCREEN_ADDUSER;
const ESplitScreenMessageType ESplitScreenMessageType_MAX = MSG_SPLITSCREEN_REMOVEUSER;
const int ESplitScreenMessageType_ARRAYSIZE = ESplitScreenMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESplitScreenMessageType_descriptor();
inline const ::std::string& ESplitScreenMessageType_Name(ESplitScreenMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESplitScreenMessageType_descriptor(), value);
}
inline bool ESplitScreenMessageType_Parse(
    const ::std::string& name, ESplitScreenMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESplitScreenMessageType>(
    ESplitScreenMessageType_descriptor(), name, value);
}
enum EQueryCvarValueStatus {
  eQueryCvarValueStatus_ValueIntact = 0,
  eQueryCvarValueStatus_CvarNotFound = 1,
  eQueryCvarValueStatus_NotACvar = 2,
  eQueryCvarValueStatus_CvarProtected = 3
};
bool EQueryCvarValueStatus_IsValid(int value);
const EQueryCvarValueStatus EQueryCvarValueStatus_MIN = eQueryCvarValueStatus_ValueIntact;
const EQueryCvarValueStatus EQueryCvarValueStatus_MAX = eQueryCvarValueStatus_CvarProtected;
const int EQueryCvarValueStatus_ARRAYSIZE = EQueryCvarValueStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* EQueryCvarValueStatus_descriptor();
inline const ::std::string& EQueryCvarValueStatus_Name(EQueryCvarValueStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    EQueryCvarValueStatus_descriptor(), value);
}
inline bool EQueryCvarValueStatus_Parse(
    const ::std::string& name, EQueryCvarValueStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EQueryCvarValueStatus>(
    EQueryCvarValueStatus_descriptor(), name, value);
}
enum DIALOG_TYPE {
  DIALOG_MSG = 0,
  DIALOG_MENU = 1,
  DIALOG_TEXT = 2,
  DIALOG_ENTRY = 3,
  DIALOG_ASKCONNECT = 4
};
bool DIALOG_TYPE_IsValid(int value);
const DIALOG_TYPE DIALOG_TYPE_MIN = DIALOG_MSG;
const DIALOG_TYPE DIALOG_TYPE_MAX = DIALOG_ASKCONNECT;
const int DIALOG_TYPE_ARRAYSIZE = DIALOG_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DIALOG_TYPE_descriptor();
inline const ::std::string& DIALOG_TYPE_Name(DIALOG_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DIALOG_TYPE_descriptor(), value);
}
inline bool DIALOG_TYPE_Parse(
    const ::std::string& name, DIALOG_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DIALOG_TYPE>(
    DIALOG_TYPE_descriptor(), name, value);
}
enum SVC_Messages_LowFrequency {
  svc_dummy = 600
};
bool SVC_Messages_LowFrequency_IsValid(int value);
const SVC_Messages_LowFrequency SVC_Messages_LowFrequency_MIN = svc_dummy;
const SVC_Messages_LowFrequency SVC_Messages_LowFrequency_MAX = svc_dummy;
const int SVC_Messages_LowFrequency_ARRAYSIZE = SVC_Messages_LowFrequency_MAX + 1;

const ::google::protobuf::EnumDescriptor* SVC_Messages_LowFrequency_descriptor();
inline const ::std::string& SVC_Messages_LowFrequency_Name(SVC_Messages_LowFrequency value) {
  return ::google::protobuf::internal::NameOfEnum(
    SVC_Messages_LowFrequency_descriptor(), value);
}
inline bool SVC_Messages_LowFrequency_Parse(
    const ::std::string& name, SVC_Messages_LowFrequency* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SVC_Messages_LowFrequency>(
    SVC_Messages_LowFrequency_descriptor(), name, value);
}
enum Bidirectional_Messages {
  bi_RebroadcastGameEvent = 16,
  bi_RebroadcastSource = 17,
  bi_GameEvent = 18
};
bool Bidirectional_Messages_IsValid(int value);
const Bidirectional_Messages Bidirectional_Messages_MIN = bi_RebroadcastGameEvent;
const Bidirectional_Messages Bidirectional_Messages_MAX = bi_GameEvent;
const int Bidirectional_Messages_ARRAYSIZE = Bidirectional_Messages_MAX + 1;

const ::google::protobuf::EnumDescriptor* Bidirectional_Messages_descriptor();
inline const ::std::string& Bidirectional_Messages_Name(Bidirectional_Messages value) {
  return ::google::protobuf::internal::NameOfEnum(
    Bidirectional_Messages_descriptor(), value);
}
inline bool Bidirectional_Messages_Parse(
    const ::std::string& name, Bidirectional_Messages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Bidirectional_Messages>(
    Bidirectional_Messages_descriptor(), name, value);
}
enum Bidirectional_Messages_LowFrequency {
  bi_RelayInfo = 700,
  bi_RelayPacket = 701
};
bool Bidirectional_Messages_LowFrequency_IsValid(int value);
const Bidirectional_Messages_LowFrequency Bidirectional_Messages_LowFrequency_MIN = bi_RelayInfo;
const Bidirectional_Messages_LowFrequency Bidirectional_Messages_LowFrequency_MAX = bi_RelayPacket;
const int Bidirectional_Messages_LowFrequency_ARRAYSIZE = Bidirectional_Messages_LowFrequency_MAX + 1;

const ::google::protobuf::EnumDescriptor* Bidirectional_Messages_LowFrequency_descriptor();
inline const ::std::string& Bidirectional_Messages_LowFrequency_Name(Bidirectional_Messages_LowFrequency value) {
  return ::google::protobuf::internal::NameOfEnum(
    Bidirectional_Messages_LowFrequency_descriptor(), value);
}
inline bool Bidirectional_Messages_LowFrequency_Parse(
    const ::std::string& name, Bidirectional_Messages_LowFrequency* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Bidirectional_Messages_LowFrequency>(
    Bidirectional_Messages_LowFrequency_descriptor(), name, value);
}
// ===================================================================

class CCLCMsg_ClientInfo : public ::google::protobuf::Message {
 public:
  CCLCMsg_ClientInfo();
  virtual ~CCLCMsg_ClientInfo();

  CCLCMsg_ClientInfo(const CCLCMsg_ClientInfo& from);

  inline CCLCMsg_ClientInfo& operator=(const CCLCMsg_ClientInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_ClientInfo& default_instance();

  void Swap(CCLCMsg_ClientInfo* other);

  // implements Message ----------------------------------------------

  CCLCMsg_ClientInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCLCMsg_ClientInfo& from);
  void MergeFrom(const CCLCMsg_ClientInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 send_table_crc = 1;
  inline bool has_send_table_crc() const;
  inline void clear_send_table_crc();
  static const int kSendTableCrcFieldNumber = 1;
  inline ::google::protobuf::uint32 send_table_crc() const;
  inline void set_send_table_crc(::google::protobuf::uint32 value);

  // optional uint32 server_count = 2;
  inline bool has_server_count() const;
  inline void clear_server_count();
  static const int kServerCountFieldNumber = 2;
  inline ::google::protobuf::uint32 server_count() const;
  inline void set_server_count(::google::protobuf::uint32 value);

  // optional bool is_hltv = 3;
  inline bool has_is_hltv() const;
  inline void clear_is_hltv();
  static const int kIsHltvFieldNumber = 3;
  inline bool is_hltv() const;
  inline void set_is_hltv(bool value);

  // optional bool is_replay = 4;
  inline bool has_is_replay() const;
  inline void clear_is_replay();
  static const int kIsReplayFieldNumber = 4;
  inline bool is_replay() const;
  inline void set_is_replay(bool value);

  // optional uint32 friends_id = 5;
  inline bool has_friends_id() const;
  inline void clear_friends_id();
  static const int kFriendsIdFieldNumber = 5;
  inline ::google::protobuf::uint32 friends_id() const;
  inline void set_friends_id(::google::protobuf::uint32 value);

  // optional string friends_name = 6;
  inline bool has_friends_name() const;
  inline void clear_friends_name();
  static const int kFriendsNameFieldNumber = 6;
  inline const ::std::string& friends_name() const;
  inline void set_friends_name(const ::std::string& value);
  inline void set_friends_name(const char* value);
  inline void set_friends_name(const char* value, size_t size);
  inline ::std::string* mutable_friends_name();
  inline ::std::string* release_friends_name();
  inline void set_allocated_friends_name(::std::string* friends_name);

  // repeated fixed32 custom_files = 7;
  inline int custom_files_size() const;
  inline void clear_custom_files();
  static const int kCustomFilesFieldNumber = 7;
  inline ::google::protobuf::uint32 custom_files(int index) const;
  inline void set_custom_files(int index, ::google::protobuf::uint32 value);
  inline void add_custom_files(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      custom_files() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_custom_files();

  // @@protoc_insertion_point(class_scope:CCLCMsg_ClientInfo)
 private:
  inline void set_has_send_table_crc();
  inline void clear_has_send_table_crc();
  inline void set_has_server_count();
  inline void clear_has_server_count();
  inline void set_has_is_hltv();
  inline void clear_has_is_hltv();
  inline void set_has_is_replay();
  inline void clear_has_is_replay();
  inline void set_has_friends_id();
  inline void clear_has_friends_id();
  inline void set_has_friends_name();
  inline void clear_has_friends_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 send_table_crc_;
  ::google::protobuf::uint32 server_count_;
  bool is_hltv_;
  bool is_replay_;
  ::google::protobuf::uint32 friends_id_;
  ::std::string* friends_name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > custom_files_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CCLCMsg_ClientInfo* default_instance_;
};
// -------------------------------------------------------------------

class CCLCMsg_Move : public ::google::protobuf::Message {
 public:
  CCLCMsg_Move();
  virtual ~CCLCMsg_Move();

  CCLCMsg_Move(const CCLCMsg_Move& from);

  inline CCLCMsg_Move& operator=(const CCLCMsg_Move& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_Move& default_instance();

  void Swap(CCLCMsg_Move* other);

  // implements Message ----------------------------------------------

  CCLCMsg_Move* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCLCMsg_Move& from);
  void MergeFrom(const CCLCMsg_Move& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num_backup_commands = 1;
  inline bool has_num_backup_commands() const;
  inline void clear_num_backup_commands();
  static const int kNumBackupCommandsFieldNumber = 1;
  inline ::google::protobuf::uint32 num_backup_commands() const;
  inline void set_num_backup_commands(::google::protobuf::uint32 value);

  // optional uint32 num_new_commands = 2;
  inline bool has_num_new_commands() const;
  inline void clear_num_new_commands();
  static const int kNumNewCommandsFieldNumber = 2;
  inline ::google::protobuf::uint32 num_new_commands() const;
  inline void set_num_new_commands(::google::protobuf::uint32 value);

  // optional bytes data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:CCLCMsg_Move)
 private:
  inline void set_has_num_backup_commands();
  inline void clear_has_num_backup_commands();
  inline void set_has_num_new_commands();
  inline void clear_has_num_new_commands();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_backup_commands_;
  ::google::protobuf::uint32 num_new_commands_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CCLCMsg_Move* default_instance_;
};
// -------------------------------------------------------------------

class CMsgVoiceAudio : public ::google::protobuf::Message {
 public:
  CMsgVoiceAudio();
  virtual ~CMsgVoiceAudio();

  CMsgVoiceAudio(const CMsgVoiceAudio& from);

  inline CMsgVoiceAudio& operator=(const CMsgVoiceAudio& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgVoiceAudio& default_instance();

  void Swap(CMsgVoiceAudio* other);

  // implements Message ----------------------------------------------

  CMsgVoiceAudio* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgVoiceAudio& from);
  void MergeFrom(const CMsgVoiceAudio& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .VoiceDataFormat_t format = 1 [default = VOICEDATA_FORMAT_STEAM];
  inline bool has_format() const;
  inline void clear_format();
  static const int kFormatFieldNumber = 1;
  inline ::VoiceDataFormat_t format() const;
  inline void set_format(::VoiceDataFormat_t value);

  // optional bytes voice_data = 2;
  inline bool has_voice_data() const;
  inline void clear_voice_data();
  static const int kVoiceDataFieldNumber = 2;
  inline const ::std::string& voice_data() const;
  inline void set_voice_data(const ::std::string& value);
  inline void set_voice_data(const char* value);
  inline void set_voice_data(const void* value, size_t size);
  inline ::std::string* mutable_voice_data();
  inline ::std::string* release_voice_data();
  inline void set_allocated_voice_data(::std::string* voice_data);

  // optional int32 sequence_bytes = 3;
  inline bool has_sequence_bytes() const;
  inline void clear_sequence_bytes();
  static const int kSequenceBytesFieldNumber = 3;
  inline ::google::protobuf::int32 sequence_bytes() const;
  inline void set_sequence_bytes(::google::protobuf::int32 value);

  // optional uint32 section_number = 4;
  inline bool has_section_number() const;
  inline void clear_section_number();
  static const int kSectionNumberFieldNumber = 4;
  inline ::google::protobuf::uint32 section_number() const;
  inline void set_section_number(::google::protobuf::uint32 value);

  // optional uint32 sample_rate = 5;
  inline bool has_sample_rate() const;
  inline void clear_sample_rate();
  static const int kSampleRateFieldNumber = 5;
  inline ::google::protobuf::uint32 sample_rate() const;
  inline void set_sample_rate(::google::protobuf::uint32 value);

  // optional uint32 uncompressed_sample_offset = 6;
  inline bool has_uncompressed_sample_offset() const;
  inline void clear_uncompressed_sample_offset();
  static const int kUncompressedSampleOffsetFieldNumber = 6;
  inline ::google::protobuf::uint32 uncompressed_sample_offset() const;
  inline void set_uncompressed_sample_offset(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgVoiceAudio)
 private:
  inline void set_has_format();
  inline void clear_has_format();
  inline void set_has_voice_data();
  inline void clear_has_voice_data();
  inline void set_has_sequence_bytes();
  inline void clear_has_sequence_bytes();
  inline void set_has_section_number();
  inline void clear_has_section_number();
  inline void set_has_sample_rate();
  inline void clear_has_sample_rate();
  inline void set_has_uncompressed_sample_offset();
  inline void clear_has_uncompressed_sample_offset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* voice_data_;
  int format_;
  ::google::protobuf::int32 sequence_bytes_;
  ::google::protobuf::uint32 section_number_;
  ::google::protobuf::uint32 sample_rate_;
  ::google::protobuf::uint32 uncompressed_sample_offset_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgVoiceAudio* default_instance_;
};
// -------------------------------------------------------------------

class CCLCMsg_VoiceData : public ::google::protobuf::Message {
 public:
  CCLCMsg_VoiceData();
  virtual ~CCLCMsg_VoiceData();

  CCLCMsg_VoiceData(const CCLCMsg_VoiceData& from);

  inline CCLCMsg_VoiceData& operator=(const CCLCMsg_VoiceData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_VoiceData& default_instance();

  void Swap(CCLCMsg_VoiceData* other);

  // implements Message ----------------------------------------------

  CCLCMsg_VoiceData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCLCMsg_VoiceData& from);
  void MergeFrom(const CCLCMsg_VoiceData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgVoiceAudio audio = 1;
  inline bool has_audio() const;
  inline void clear_audio();
  static const int kAudioFieldNumber = 1;
  inline const ::CMsgVoiceAudio& audio() const;
  inline ::CMsgVoiceAudio* mutable_audio();
  inline ::CMsgVoiceAudio* release_audio();
  inline void set_allocated_audio(::CMsgVoiceAudio* audio);

  // optional fixed64 xuid = 2;
  inline bool has_xuid() const;
  inline void clear_xuid();
  static const int kXuidFieldNumber = 2;
  inline ::google::protobuf::uint64 xuid() const;
  inline void set_xuid(::google::protobuf::uint64 value);

  // optional uint32 tick = 3;
  inline bool has_tick() const;
  inline void clear_tick();
  static const int kTickFieldNumber = 3;
  inline ::google::protobuf::uint32 tick() const;
  inline void set_tick(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CCLCMsg_VoiceData)
 private:
  inline void set_has_audio();
  inline void clear_has_audio();
  inline void set_has_xuid();
  inline void clear_has_xuid();
  inline void set_has_tick();
  inline void clear_has_tick();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgVoiceAudio* audio_;
  ::google::protobuf::uint64 xuid_;
  ::google::protobuf::uint32 tick_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CCLCMsg_VoiceData* default_instance_;
};
// -------------------------------------------------------------------

class CCLCMsg_BaselineAck : public ::google::protobuf::Message {
 public:
  CCLCMsg_BaselineAck();
  virtual ~CCLCMsg_BaselineAck();

  CCLCMsg_BaselineAck(const CCLCMsg_BaselineAck& from);

  inline CCLCMsg_BaselineAck& operator=(const CCLCMsg_BaselineAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_BaselineAck& default_instance();

  void Swap(CCLCMsg_BaselineAck* other);

  // implements Message ----------------------------------------------

  CCLCMsg_BaselineAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCLCMsg_BaselineAck& from);
  void MergeFrom(const CCLCMsg_BaselineAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 baseline_tick = 1;
  inline bool has_baseline_tick() const;
  inline void clear_baseline_tick();
  static const int kBaselineTickFieldNumber = 1;
  inline ::google::protobuf::int32 baseline_tick() const;
  inline void set_baseline_tick(::google::protobuf::int32 value);

  // optional int32 baseline_nr = 2;
  inline bool has_baseline_nr() const;
  inline void clear_baseline_nr();
  static const int kBaselineNrFieldNumber = 2;
  inline ::google::protobuf::int32 baseline_nr() const;
  inline void set_baseline_nr(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCLCMsg_BaselineAck)
 private:
  inline void set_has_baseline_tick();
  inline void clear_has_baseline_tick();
  inline void set_has_baseline_nr();
  inline void clear_has_baseline_nr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 baseline_tick_;
  ::google::protobuf::int32 baseline_nr_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CCLCMsg_BaselineAck* default_instance_;
};
// -------------------------------------------------------------------

class CCLCMsg_ListenEvents : public ::google::protobuf::Message {
 public:
  CCLCMsg_ListenEvents();
  virtual ~CCLCMsg_ListenEvents();

  CCLCMsg_ListenEvents(const CCLCMsg_ListenEvents& from);

  inline CCLCMsg_ListenEvents& operator=(const CCLCMsg_ListenEvents& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_ListenEvents& default_instance();

  void Swap(CCLCMsg_ListenEvents* other);

  // implements Message ----------------------------------------------

  CCLCMsg_ListenEvents* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCLCMsg_ListenEvents& from);
  void MergeFrom(const CCLCMsg_ListenEvents& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 event_mask = 1;
  inline int event_mask_size() const;
  inline void clear_event_mask();
  static const int kEventMaskFieldNumber = 1;
  inline ::google::protobuf::uint32 event_mask(int index) const;
  inline void set_event_mask(int index, ::google::protobuf::uint32 value);
  inline void add_event_mask(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      event_mask() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_event_mask();

  // @@protoc_insertion_point(class_scope:CCLCMsg_ListenEvents)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > event_mask_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CCLCMsg_ListenEvents* default_instance_;
};
// -------------------------------------------------------------------

class CCLCMsg_RespondCvarValue : public ::google::protobuf::Message {
 public:
  CCLCMsg_RespondCvarValue();
  virtual ~CCLCMsg_RespondCvarValue();

  CCLCMsg_RespondCvarValue(const CCLCMsg_RespondCvarValue& from);

  inline CCLCMsg_RespondCvarValue& operator=(const CCLCMsg_RespondCvarValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_RespondCvarValue& default_instance();

  void Swap(CCLCMsg_RespondCvarValue* other);

  // implements Message ----------------------------------------------

  CCLCMsg_RespondCvarValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCLCMsg_RespondCvarValue& from);
  void MergeFrom(const CCLCMsg_RespondCvarValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cookie = 1;
  inline bool has_cookie() const;
  inline void clear_cookie();
  static const int kCookieFieldNumber = 1;
  inline ::google::protobuf::int32 cookie() const;
  inline void set_cookie(::google::protobuf::int32 value);

  // optional int32 status_code = 2;
  inline bool has_status_code() const;
  inline void clear_status_code();
  static const int kStatusCodeFieldNumber = 2;
  inline ::google::protobuf::int32 status_code() const;
  inline void set_status_code(::google::protobuf::int32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CCLCMsg_RespondCvarValue)
 private:
  inline void set_has_cookie();
  inline void clear_has_cookie();
  inline void set_has_status_code();
  inline void clear_has_status_code();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 cookie_;
  ::google::protobuf::int32 status_code_;
  ::std::string* name_;
  ::std::string* value_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CCLCMsg_RespondCvarValue* default_instance_;
};
// -------------------------------------------------------------------

class CCLCMsg_FileCRCCheck : public ::google::protobuf::Message {
 public:
  CCLCMsg_FileCRCCheck();
  virtual ~CCLCMsg_FileCRCCheck();

  CCLCMsg_FileCRCCheck(const CCLCMsg_FileCRCCheck& from);

  inline CCLCMsg_FileCRCCheck& operator=(const CCLCMsg_FileCRCCheck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_FileCRCCheck& default_instance();

  void Swap(CCLCMsg_FileCRCCheck* other);

  // implements Message ----------------------------------------------

  CCLCMsg_FileCRCCheck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCLCMsg_FileCRCCheck& from);
  void MergeFrom(const CCLCMsg_FileCRCCheck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 code_path = 1;
  inline bool has_code_path() const;
  inline void clear_code_path();
  static const int kCodePathFieldNumber = 1;
  inline ::google::protobuf::int32 code_path() const;
  inline void set_code_path(::google::protobuf::int32 value);

  // optional string path = 2;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 2;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  inline void set_allocated_path(::std::string* path);

  // optional int32 code_filename = 3;
  inline bool has_code_filename() const;
  inline void clear_code_filename();
  static const int kCodeFilenameFieldNumber = 3;
  inline ::google::protobuf::int32 code_filename() const;
  inline void set_code_filename(::google::protobuf::int32 value);

  // optional string filename = 4;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 4;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // optional fixed32 crc = 5;
  inline bool has_crc() const;
  inline void clear_crc();
  static const int kCrcFieldNumber = 5;
  inline ::google::protobuf::uint32 crc() const;
  inline void set_crc(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CCLCMsg_FileCRCCheck)
 private:
  inline void set_has_code_path();
  inline void clear_has_code_path();
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_code_filename();
  inline void clear_has_code_filename();
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_crc();
  inline void clear_has_crc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* path_;
  ::google::protobuf::int32 code_path_;
  ::google::protobuf::int32 code_filename_;
  ::std::string* filename_;
  ::google::protobuf::uint32 crc_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CCLCMsg_FileCRCCheck* default_instance_;
};
// -------------------------------------------------------------------

class CCLCMsg_LoadingProgress : public ::google::protobuf::Message {
 public:
  CCLCMsg_LoadingProgress();
  virtual ~CCLCMsg_LoadingProgress();

  CCLCMsg_LoadingProgress(const CCLCMsg_LoadingProgress& from);

  inline CCLCMsg_LoadingProgress& operator=(const CCLCMsg_LoadingProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_LoadingProgress& default_instance();

  void Swap(CCLCMsg_LoadingProgress* other);

  // implements Message ----------------------------------------------

  CCLCMsg_LoadingProgress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCLCMsg_LoadingProgress& from);
  void MergeFrom(const CCLCMsg_LoadingProgress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 progress = 1;
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 1;
  inline ::google::protobuf::int32 progress() const;
  inline void set_progress(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCLCMsg_LoadingProgress)
 private:
  inline void set_has_progress();
  inline void clear_has_progress();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 progress_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CCLCMsg_LoadingProgress* default_instance_;
};
// -------------------------------------------------------------------

class CCLCMsg_SplitPlayerConnect : public ::google::protobuf::Message {
 public:
  CCLCMsg_SplitPlayerConnect();
  virtual ~CCLCMsg_SplitPlayerConnect();

  CCLCMsg_SplitPlayerConnect(const CCLCMsg_SplitPlayerConnect& from);

  inline CCLCMsg_SplitPlayerConnect& operator=(const CCLCMsg_SplitPlayerConnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_SplitPlayerConnect& default_instance();

  void Swap(CCLCMsg_SplitPlayerConnect* other);

  // implements Message ----------------------------------------------

  CCLCMsg_SplitPlayerConnect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCLCMsg_SplitPlayerConnect& from);
  void MergeFrom(const CCLCMsg_SplitPlayerConnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string playername = 1;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 1;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // @@protoc_insertion_point(class_scope:CCLCMsg_SplitPlayerConnect)
 private:
  inline void set_has_playername();
  inline void clear_has_playername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* playername_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CCLCMsg_SplitPlayerConnect* default_instance_;
};
// -------------------------------------------------------------------

class CCLCMsg_ClientMessage : public ::google::protobuf::Message {
 public:
  CCLCMsg_ClientMessage();
  virtual ~CCLCMsg_ClientMessage();

  CCLCMsg_ClientMessage(const CCLCMsg_ClientMessage& from);

  inline CCLCMsg_ClientMessage& operator=(const CCLCMsg_ClientMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_ClientMessage& default_instance();

  void Swap(CCLCMsg_ClientMessage* other);

  // implements Message ----------------------------------------------

  CCLCMsg_ClientMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCLCMsg_ClientMessage& from);
  void MergeFrom(const CCLCMsg_ClientMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 msg_type = 1;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::google::protobuf::int32 msg_type() const;
  inline void set_msg_type(::google::protobuf::int32 value);

  // optional bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:CCLCMsg_ClientMessage)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  ::google::protobuf::int32 msg_type_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CCLCMsg_ClientMessage* default_instance_;
};
// -------------------------------------------------------------------

class CCLCMsg_SplitPlayerDisconnect : public ::google::protobuf::Message {
 public:
  CCLCMsg_SplitPlayerDisconnect();
  virtual ~CCLCMsg_SplitPlayerDisconnect();

  CCLCMsg_SplitPlayerDisconnect(const CCLCMsg_SplitPlayerDisconnect& from);

  inline CCLCMsg_SplitPlayerDisconnect& operator=(const CCLCMsg_SplitPlayerDisconnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_SplitPlayerDisconnect& default_instance();

  void Swap(CCLCMsg_SplitPlayerDisconnect* other);

  // implements Message ----------------------------------------------

  CCLCMsg_SplitPlayerDisconnect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCLCMsg_SplitPlayerDisconnect& from);
  void MergeFrom(const CCLCMsg_SplitPlayerDisconnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCLCMsg_SplitPlayerDisconnect)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 slot_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CCLCMsg_SplitPlayerDisconnect* default_instance_;
};
// -------------------------------------------------------------------

class CCLCMsg_ServerStatus : public ::google::protobuf::Message {
 public:
  CCLCMsg_ServerStatus();
  virtual ~CCLCMsg_ServerStatus();

  CCLCMsg_ServerStatus(const CCLCMsg_ServerStatus& from);

  inline CCLCMsg_ServerStatus& operator=(const CCLCMsg_ServerStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_ServerStatus& default_instance();

  void Swap(CCLCMsg_ServerStatus* other);

  // implements Message ----------------------------------------------

  CCLCMsg_ServerStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCLCMsg_ServerStatus& from);
  void MergeFrom(const CCLCMsg_ServerStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool simplified = 1;
  inline bool has_simplified() const;
  inline void clear_simplified();
  static const int kSimplifiedFieldNumber = 1;
  inline bool simplified() const;
  inline void set_simplified(bool value);

  // @@protoc_insertion_point(class_scope:CCLCMsg_ServerStatus)
 private:
  inline void set_has_simplified();
  inline void clear_has_simplified();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool simplified_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CCLCMsg_ServerStatus* default_instance_;
};
// -------------------------------------------------------------------

class CCLCMsg_ServerPing : public ::google::protobuf::Message {
 public:
  CCLCMsg_ServerPing();
  virtual ~CCLCMsg_ServerPing();

  CCLCMsg_ServerPing(const CCLCMsg_ServerPing& from);

  inline CCLCMsg_ServerPing& operator=(const CCLCMsg_ServerPing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_ServerPing& default_instance();

  void Swap(CCLCMsg_ServerPing* other);

  // implements Message ----------------------------------------------

  CCLCMsg_ServerPing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCLCMsg_ServerPing& from);
  void MergeFrom(const CCLCMsg_ServerPing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CCLCMsg_ServerPing)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CCLCMsg_ServerPing* default_instance_;
};
// -------------------------------------------------------------------

class CCLCMsg_RequestPause : public ::google::protobuf::Message {
 public:
  CCLCMsg_RequestPause();
  virtual ~CCLCMsg_RequestPause();

  CCLCMsg_RequestPause(const CCLCMsg_RequestPause& from);

  inline CCLCMsg_RequestPause& operator=(const CCLCMsg_RequestPause& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_RequestPause& default_instance();

  void Swap(CCLCMsg_RequestPause* other);

  // implements Message ----------------------------------------------

  CCLCMsg_RequestPause* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCLCMsg_RequestPause& from);
  void MergeFrom(const CCLCMsg_RequestPause& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .RequestPause_t pause_type = 1 [default = RP_PAUSE];
  inline bool has_pause_type() const;
  inline void clear_pause_type();
  static const int kPauseTypeFieldNumber = 1;
  inline ::RequestPause_t pause_type() const;
  inline void set_pause_type(::RequestPause_t value);

  // optional int32 pause_group = 2;
  inline bool has_pause_group() const;
  inline void clear_pause_group();
  static const int kPauseGroupFieldNumber = 2;
  inline ::google::protobuf::int32 pause_group() const;
  inline void set_pause_group(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCLCMsg_RequestPause)
 private:
  inline void set_has_pause_type();
  inline void clear_has_pause_type();
  inline void set_has_pause_group();
  inline void clear_has_pause_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int pause_type_;
  ::google::protobuf::int32 pause_group_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CCLCMsg_RequestPause* default_instance_;
};
// -------------------------------------------------------------------

class CCLCMsg_CmdKeyValues : public ::google::protobuf::Message {
 public:
  CCLCMsg_CmdKeyValues();
  virtual ~CCLCMsg_CmdKeyValues();

  CCLCMsg_CmdKeyValues(const CCLCMsg_CmdKeyValues& from);

  inline CCLCMsg_CmdKeyValues& operator=(const CCLCMsg_CmdKeyValues& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_CmdKeyValues& default_instance();

  void Swap(CCLCMsg_CmdKeyValues* other);

  // implements Message ----------------------------------------------

  CCLCMsg_CmdKeyValues* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCLCMsg_CmdKeyValues& from);
  void MergeFrom(const CCLCMsg_CmdKeyValues& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:CCLCMsg_CmdKeyValues)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CCLCMsg_CmdKeyValues* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_ServerInfo : public ::google::protobuf::Message {
 public:
  CSVCMsg_ServerInfo();
  virtual ~CSVCMsg_ServerInfo();

  CSVCMsg_ServerInfo(const CSVCMsg_ServerInfo& from);

  inline CSVCMsg_ServerInfo& operator=(const CSVCMsg_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_ServerInfo& default_instance();

  void Swap(CSVCMsg_ServerInfo* other);

  // implements Message ----------------------------------------------

  CSVCMsg_ServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_ServerInfo& from);
  void MergeFrom(const CSVCMsg_ServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 protocol = 1;
  inline bool has_protocol() const;
  inline void clear_protocol();
  static const int kProtocolFieldNumber = 1;
  inline ::google::protobuf::int32 protocol() const;
  inline void set_protocol(::google::protobuf::int32 value);

  // optional int32 server_count = 2;
  inline bool has_server_count() const;
  inline void clear_server_count();
  static const int kServerCountFieldNumber = 2;
  inline ::google::protobuf::int32 server_count() const;
  inline void set_server_count(::google::protobuf::int32 value);

  // optional bool is_dedicated = 3;
  inline bool has_is_dedicated() const;
  inline void clear_is_dedicated();
  static const int kIsDedicatedFieldNumber = 3;
  inline bool is_dedicated() const;
  inline void set_is_dedicated(bool value);

  // optional bool is_hltv = 4;
  inline bool has_is_hltv() const;
  inline void clear_is_hltv();
  static const int kIsHltvFieldNumber = 4;
  inline bool is_hltv() const;
  inline void set_is_hltv(bool value);

  // optional bool is_replay = 5;
  inline bool has_is_replay() const;
  inline void clear_is_replay();
  static const int kIsReplayFieldNumber = 5;
  inline bool is_replay() const;
  inline void set_is_replay(bool value);

  // optional int32 c_os = 6;
  inline bool has_c_os() const;
  inline void clear_c_os();
  static const int kCOsFieldNumber = 6;
  inline ::google::protobuf::int32 c_os() const;
  inline void set_c_os(::google::protobuf::int32 value);

  // optional fixed32 map_crc = 7;
  inline bool has_map_crc() const;
  inline void clear_map_crc();
  static const int kMapCrcFieldNumber = 7;
  inline ::google::protobuf::uint32 map_crc() const;
  inline void set_map_crc(::google::protobuf::uint32 value);

  // optional fixed32 client_crc = 8;
  inline bool has_client_crc() const;
  inline void clear_client_crc();
  static const int kClientCrcFieldNumber = 8;
  inline ::google::protobuf::uint32 client_crc() const;
  inline void set_client_crc(::google::protobuf::uint32 value);

  // optional fixed32 string_table_crc = 9;
  inline bool has_string_table_crc() const;
  inline void clear_string_table_crc();
  static const int kStringTableCrcFieldNumber = 9;
  inline ::google::protobuf::uint32 string_table_crc() const;
  inline void set_string_table_crc(::google::protobuf::uint32 value);

  // optional int32 max_clients = 10;
  inline bool has_max_clients() const;
  inline void clear_max_clients();
  static const int kMaxClientsFieldNumber = 10;
  inline ::google::protobuf::int32 max_clients() const;
  inline void set_max_clients(::google::protobuf::int32 value);

  // optional int32 max_classes = 11;
  inline bool has_max_classes() const;
  inline void clear_max_classes();
  static const int kMaxClassesFieldNumber = 11;
  inline ::google::protobuf::int32 max_classes() const;
  inline void set_max_classes(::google::protobuf::int32 value);

  // optional int32 player_slot = 12;
  inline bool has_player_slot() const;
  inline void clear_player_slot();
  static const int kPlayerSlotFieldNumber = 12;
  inline ::google::protobuf::int32 player_slot() const;
  inline void set_player_slot(::google::protobuf::int32 value);

  // optional float tick_interval = 13;
  inline bool has_tick_interval() const;
  inline void clear_tick_interval();
  static const int kTickIntervalFieldNumber = 13;
  inline float tick_interval() const;
  inline void set_tick_interval(float value);

  // optional string game_dir = 14;
  inline bool has_game_dir() const;
  inline void clear_game_dir();
  static const int kGameDirFieldNumber = 14;
  inline const ::std::string& game_dir() const;
  inline void set_game_dir(const ::std::string& value);
  inline void set_game_dir(const char* value);
  inline void set_game_dir(const char* value, size_t size);
  inline ::std::string* mutable_game_dir();
  inline ::std::string* release_game_dir();
  inline void set_allocated_game_dir(::std::string* game_dir);

  // optional string map_name = 15;
  inline bool has_map_name() const;
  inline void clear_map_name();
  static const int kMapNameFieldNumber = 15;
  inline const ::std::string& map_name() const;
  inline void set_map_name(const ::std::string& value);
  inline void set_map_name(const char* value);
  inline void set_map_name(const char* value, size_t size);
  inline ::std::string* mutable_map_name();
  inline ::std::string* release_map_name();
  inline void set_allocated_map_name(::std::string* map_name);

  // optional string sky_name = 16;
  inline bool has_sky_name() const;
  inline void clear_sky_name();
  static const int kSkyNameFieldNumber = 16;
  inline const ::std::string& sky_name() const;
  inline void set_sky_name(const ::std::string& value);
  inline void set_sky_name(const char* value);
  inline void set_sky_name(const char* value, size_t size);
  inline ::std::string* mutable_sky_name();
  inline ::std::string* release_sky_name();
  inline void set_allocated_sky_name(::std::string* sky_name);

  // optional string host_name = 17;
  inline bool has_host_name() const;
  inline void clear_host_name();
  static const int kHostNameFieldNumber = 17;
  inline const ::std::string& host_name() const;
  inline void set_host_name(const ::std::string& value);
  inline void set_host_name(const char* value);
  inline void set_host_name(const char* value, size_t size);
  inline ::std::string* mutable_host_name();
  inline ::std::string* release_host_name();
  inline void set_allocated_host_name(::std::string* host_name);

  // optional string addon_name = 18;
  inline bool has_addon_name() const;
  inline void clear_addon_name();
  static const int kAddonNameFieldNumber = 18;
  inline const ::std::string& addon_name() const;
  inline void set_addon_name(const ::std::string& value);
  inline void set_addon_name(const char* value);
  inline void set_addon_name(const char* value, size_t size);
  inline ::std::string* mutable_addon_name();
  inline ::std::string* release_addon_name();
  inline void set_allocated_addon_name(::std::string* addon_name);

  // optional .CSVCMsg_GameSessionConfiguration game_session_config = 19;
  inline bool has_game_session_config() const;
  inline void clear_game_session_config();
  static const int kGameSessionConfigFieldNumber = 19;
  inline const ::CSVCMsg_GameSessionConfiguration& game_session_config() const;
  inline ::CSVCMsg_GameSessionConfiguration* mutable_game_session_config();
  inline ::CSVCMsg_GameSessionConfiguration* release_game_session_config();
  inline void set_allocated_game_session_config(::CSVCMsg_GameSessionConfiguration* game_session_config);

  // optional bytes game_session_manifest = 20;
  inline bool has_game_session_manifest() const;
  inline void clear_game_session_manifest();
  static const int kGameSessionManifestFieldNumber = 20;
  inline const ::std::string& game_session_manifest() const;
  inline void set_game_session_manifest(const ::std::string& value);
  inline void set_game_session_manifest(const char* value);
  inline void set_game_session_manifest(const void* value, size_t size);
  inline ::std::string* mutable_game_session_manifest();
  inline ::std::string* release_game_session_manifest();
  inline void set_allocated_game_session_manifest(::std::string* game_session_manifest);

  // @@protoc_insertion_point(class_scope:CSVCMsg_ServerInfo)
 private:
  inline void set_has_protocol();
  inline void clear_has_protocol();
  inline void set_has_server_count();
  inline void clear_has_server_count();
  inline void set_has_is_dedicated();
  inline void clear_has_is_dedicated();
  inline void set_has_is_hltv();
  inline void clear_has_is_hltv();
  inline void set_has_is_replay();
  inline void clear_has_is_replay();
  inline void set_has_c_os();
  inline void clear_has_c_os();
  inline void set_has_map_crc();
  inline void clear_has_map_crc();
  inline void set_has_client_crc();
  inline void clear_has_client_crc();
  inline void set_has_string_table_crc();
  inline void clear_has_string_table_crc();
  inline void set_has_max_clients();
  inline void clear_has_max_clients();
  inline void set_has_max_classes();
  inline void clear_has_max_classes();
  inline void set_has_player_slot();
  inline void clear_has_player_slot();
  inline void set_has_tick_interval();
  inline void clear_has_tick_interval();
  inline void set_has_game_dir();
  inline void clear_has_game_dir();
  inline void set_has_map_name();
  inline void clear_has_map_name();
  inline void set_has_sky_name();
  inline void clear_has_sky_name();
  inline void set_has_host_name();
  inline void clear_has_host_name();
  inline void set_has_addon_name();
  inline void clear_has_addon_name();
  inline void set_has_game_session_config();
  inline void clear_has_game_session_config();
  inline void set_has_game_session_manifest();
  inline void clear_has_game_session_manifest();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 protocol_;
  ::google::protobuf::int32 server_count_;
  bool is_dedicated_;
  bool is_hltv_;
  bool is_replay_;
  ::google::protobuf::int32 c_os_;
  ::google::protobuf::uint32 map_crc_;
  ::google::protobuf::uint32 client_crc_;
  ::google::protobuf::uint32 string_table_crc_;
  ::google::protobuf::int32 max_clients_;
  ::google::protobuf::int32 max_classes_;
  ::google::protobuf::int32 player_slot_;
  ::std::string* game_dir_;
  ::std::string* map_name_;
  ::std::string* sky_name_;
  ::std::string* host_name_;
  ::std::string* addon_name_;
  ::CSVCMsg_GameSessionConfiguration* game_session_config_;
  ::std::string* game_session_manifest_;
  float tick_interval_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_ClassInfo_class_t : public ::google::protobuf::Message {
 public:
  CSVCMsg_ClassInfo_class_t();
  virtual ~CSVCMsg_ClassInfo_class_t();

  CSVCMsg_ClassInfo_class_t(const CSVCMsg_ClassInfo_class_t& from);

  inline CSVCMsg_ClassInfo_class_t& operator=(const CSVCMsg_ClassInfo_class_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_ClassInfo_class_t& default_instance();

  void Swap(CSVCMsg_ClassInfo_class_t* other);

  // implements Message ----------------------------------------------

  CSVCMsg_ClassInfo_class_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_ClassInfo_class_t& from);
  void MergeFrom(const CSVCMsg_ClassInfo_class_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 class_id = 1;
  inline bool has_class_id() const;
  inline void clear_class_id();
  static const int kClassIdFieldNumber = 1;
  inline ::google::protobuf::int32 class_id() const;
  inline void set_class_id(::google::protobuf::int32 value);

  // optional string data_table_name = 2;
  inline bool has_data_table_name() const;
  inline void clear_data_table_name();
  static const int kDataTableNameFieldNumber = 2;
  inline const ::std::string& data_table_name() const;
  inline void set_data_table_name(const ::std::string& value);
  inline void set_data_table_name(const char* value);
  inline void set_data_table_name(const char* value, size_t size);
  inline ::std::string* mutable_data_table_name();
  inline ::std::string* release_data_table_name();
  inline void set_allocated_data_table_name(::std::string* data_table_name);

  // optional string class_name = 3;
  inline bool has_class_name() const;
  inline void clear_class_name();
  static const int kClassNameFieldNumber = 3;
  inline const ::std::string& class_name() const;
  inline void set_class_name(const ::std::string& value);
  inline void set_class_name(const char* value);
  inline void set_class_name(const char* value, size_t size);
  inline ::std::string* mutable_class_name();
  inline ::std::string* release_class_name();
  inline void set_allocated_class_name(::std::string* class_name);

  // @@protoc_insertion_point(class_scope:CSVCMsg_ClassInfo.class_t)
 private:
  inline void set_has_class_id();
  inline void clear_has_class_id();
  inline void set_has_data_table_name();
  inline void clear_has_data_table_name();
  inline void set_has_class_name();
  inline void clear_has_class_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_table_name_;
  ::std::string* class_name_;
  ::google::protobuf::int32 class_id_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_ClassInfo_class_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_ClassInfo : public ::google::protobuf::Message {
 public:
  CSVCMsg_ClassInfo();
  virtual ~CSVCMsg_ClassInfo();

  CSVCMsg_ClassInfo(const CSVCMsg_ClassInfo& from);

  inline CSVCMsg_ClassInfo& operator=(const CSVCMsg_ClassInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_ClassInfo& default_instance();

  void Swap(CSVCMsg_ClassInfo* other);

  // implements Message ----------------------------------------------

  CSVCMsg_ClassInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_ClassInfo& from);
  void MergeFrom(const CSVCMsg_ClassInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSVCMsg_ClassInfo_class_t class_t;

  // accessors -------------------------------------------------------

  // optional bool create_on_client = 1;
  inline bool has_create_on_client() const;
  inline void clear_create_on_client();
  static const int kCreateOnClientFieldNumber = 1;
  inline bool create_on_client() const;
  inline void set_create_on_client(bool value);

  // repeated .CSVCMsg_ClassInfo.class_t classes = 2;
  inline int classes_size() const;
  inline void clear_classes();
  static const int kClassesFieldNumber = 2;
  inline const ::CSVCMsg_ClassInfo_class_t& classes(int index) const;
  inline ::CSVCMsg_ClassInfo_class_t* mutable_classes(int index);
  inline ::CSVCMsg_ClassInfo_class_t* add_classes();
  inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_ClassInfo_class_t >&
      classes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_ClassInfo_class_t >*
      mutable_classes();

  // @@protoc_insertion_point(class_scope:CSVCMsg_ClassInfo)
 private:
  inline void set_has_create_on_client();
  inline void clear_has_create_on_client();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_ClassInfo_class_t > classes_;
  bool create_on_client_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_ClassInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_SetPause : public ::google::protobuf::Message {
 public:
  CSVCMsg_SetPause();
  virtual ~CSVCMsg_SetPause();

  CSVCMsg_SetPause(const CSVCMsg_SetPause& from);

  inline CSVCMsg_SetPause& operator=(const CSVCMsg_SetPause& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_SetPause& default_instance();

  void Swap(CSVCMsg_SetPause* other);

  // implements Message ----------------------------------------------

  CSVCMsg_SetPause* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_SetPause& from);
  void MergeFrom(const CSVCMsg_SetPause& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool paused = 1;
  inline bool has_paused() const;
  inline void clear_paused();
  static const int kPausedFieldNumber = 1;
  inline bool paused() const;
  inline void set_paused(bool value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_SetPause)
 private:
  inline void set_has_paused();
  inline void clear_has_paused();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool paused_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_SetPause* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_VoiceInit : public ::google::protobuf::Message {
 public:
  CSVCMsg_VoiceInit();
  virtual ~CSVCMsg_VoiceInit();

  CSVCMsg_VoiceInit(const CSVCMsg_VoiceInit& from);

  inline CSVCMsg_VoiceInit& operator=(const CSVCMsg_VoiceInit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_VoiceInit& default_instance();

  void Swap(CSVCMsg_VoiceInit* other);

  // implements Message ----------------------------------------------

  CSVCMsg_VoiceInit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_VoiceInit& from);
  void MergeFrom(const CSVCMsg_VoiceInit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 quality = 1;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 1;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional string codec = 2;
  inline bool has_codec() const;
  inline void clear_codec();
  static const int kCodecFieldNumber = 2;
  inline const ::std::string& codec() const;
  inline void set_codec(const ::std::string& value);
  inline void set_codec(const char* value);
  inline void set_codec(const char* value, size_t size);
  inline ::std::string* mutable_codec();
  inline ::std::string* release_codec();
  inline void set_allocated_codec(::std::string* codec);

  // optional int32 version = 3 [default = 0];
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_VoiceInit)
 private:
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_codec();
  inline void clear_has_codec();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* codec_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 version_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_VoiceInit* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_Print : public ::google::protobuf::Message {
 public:
  CSVCMsg_Print();
  virtual ~CSVCMsg_Print();

  CSVCMsg_Print(const CSVCMsg_Print& from);

  inline CSVCMsg_Print& operator=(const CSVCMsg_Print& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_Print& default_instance();

  void Swap(CSVCMsg_Print* other);

  // implements Message ----------------------------------------------

  CSVCMsg_Print* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_Print& from);
  void MergeFrom(const CSVCMsg_Print& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 1;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 1;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:CSVCMsg_Print)
 private:
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* text_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_Print* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_Sounds_sounddata_t : public ::google::protobuf::Message {
 public:
  CSVCMsg_Sounds_sounddata_t();
  virtual ~CSVCMsg_Sounds_sounddata_t();

  CSVCMsg_Sounds_sounddata_t(const CSVCMsg_Sounds_sounddata_t& from);

  inline CSVCMsg_Sounds_sounddata_t& operator=(const CSVCMsg_Sounds_sounddata_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_Sounds_sounddata_t& default_instance();

  void Swap(CSVCMsg_Sounds_sounddata_t* other);

  // implements Message ----------------------------------------------

  CSVCMsg_Sounds_sounddata_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_Sounds_sounddata_t& from);
  void MergeFrom(const CSVCMsg_Sounds_sounddata_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 origin_x = 1;
  inline bool has_origin_x() const;
  inline void clear_origin_x();
  static const int kOriginXFieldNumber = 1;
  inline ::google::protobuf::int32 origin_x() const;
  inline void set_origin_x(::google::protobuf::int32 value);

  // optional sint32 origin_y = 2;
  inline bool has_origin_y() const;
  inline void clear_origin_y();
  static const int kOriginYFieldNumber = 2;
  inline ::google::protobuf::int32 origin_y() const;
  inline void set_origin_y(::google::protobuf::int32 value);

  // optional sint32 origin_z = 3;
  inline bool has_origin_z() const;
  inline void clear_origin_z();
  static const int kOriginZFieldNumber = 3;
  inline ::google::protobuf::int32 origin_z() const;
  inline void set_origin_z(::google::protobuf::int32 value);

  // optional uint32 volume = 4;
  inline bool has_volume() const;
  inline void clear_volume();
  static const int kVolumeFieldNumber = 4;
  inline ::google::protobuf::uint32 volume() const;
  inline void set_volume(::google::protobuf::uint32 value);

  // optional float delay_value = 5;
  inline bool has_delay_value() const;
  inline void clear_delay_value();
  static const int kDelayValueFieldNumber = 5;
  inline float delay_value() const;
  inline void set_delay_value(float value);

  // optional int32 sequence_number = 6;
  inline bool has_sequence_number() const;
  inline void clear_sequence_number();
  static const int kSequenceNumberFieldNumber = 6;
  inline ::google::protobuf::int32 sequence_number() const;
  inline void set_sequence_number(::google::protobuf::int32 value);

  // optional int32 entity_index = 7;
  inline bool has_entity_index() const;
  inline void clear_entity_index();
  static const int kEntityIndexFieldNumber = 7;
  inline ::google::protobuf::int32 entity_index() const;
  inline void set_entity_index(::google::protobuf::int32 value);

  // optional int32 channel = 8;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 8;
  inline ::google::protobuf::int32 channel() const;
  inline void set_channel(::google::protobuf::int32 value);

  // optional int32 pitch = 9;
  inline bool has_pitch() const;
  inline void clear_pitch();
  static const int kPitchFieldNumber = 9;
  inline ::google::protobuf::int32 pitch() const;
  inline void set_pitch(::google::protobuf::int32 value);

  // optional int32 flags = 10;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 10;
  inline ::google::protobuf::int32 flags() const;
  inline void set_flags(::google::protobuf::int32 value);

  // optional uint32 sound_num = 11;
  inline bool has_sound_num() const;
  inline void clear_sound_num();
  static const int kSoundNumFieldNumber = 11;
  inline ::google::protobuf::uint32 sound_num() const;
  inline void set_sound_num(::google::protobuf::uint32 value);

  // optional fixed32 sound_num_handle = 12;
  inline bool has_sound_num_handle() const;
  inline void clear_sound_num_handle();
  static const int kSoundNumHandleFieldNumber = 12;
  inline ::google::protobuf::uint32 sound_num_handle() const;
  inline void set_sound_num_handle(::google::protobuf::uint32 value);

  // optional int32 speaker_entity = 13;
  inline bool has_speaker_entity() const;
  inline void clear_speaker_entity();
  static const int kSpeakerEntityFieldNumber = 13;
  inline ::google::protobuf::int32 speaker_entity() const;
  inline void set_speaker_entity(::google::protobuf::int32 value);

  // optional int32 random_seed = 14;
  inline bool has_random_seed() const;
  inline void clear_random_seed();
  static const int kRandomSeedFieldNumber = 14;
  inline ::google::protobuf::int32 random_seed() const;
  inline void set_random_seed(::google::protobuf::int32 value);

  // optional int32 sound_level = 15;
  inline bool has_sound_level() const;
  inline void clear_sound_level();
  static const int kSoundLevelFieldNumber = 15;
  inline ::google::protobuf::int32 sound_level() const;
  inline void set_sound_level(::google::protobuf::int32 value);

  // optional bool is_sentence = 16;
  inline bool has_is_sentence() const;
  inline void clear_is_sentence();
  static const int kIsSentenceFieldNumber = 16;
  inline bool is_sentence() const;
  inline void set_is_sentence(bool value);

  // optional bool is_ambient = 17;
  inline bool has_is_ambient() const;
  inline void clear_is_ambient();
  static const int kIsAmbientFieldNumber = 17;
  inline bool is_ambient() const;
  inline void set_is_ambient(bool value);

  // optional uint32 guid = 18;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 18;
  inline ::google::protobuf::uint32 guid() const;
  inline void set_guid(::google::protobuf::uint32 value);

  // optional fixed64 sound_resource_id = 19;
  inline bool has_sound_resource_id() const;
  inline void clear_sound_resource_id();
  static const int kSoundResourceIdFieldNumber = 19;
  inline ::google::protobuf::uint64 sound_resource_id() const;
  inline void set_sound_resource_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_Sounds.sounddata_t)
 private:
  inline void set_has_origin_x();
  inline void clear_has_origin_x();
  inline void set_has_origin_y();
  inline void clear_has_origin_y();
  inline void set_has_origin_z();
  inline void clear_has_origin_z();
  inline void set_has_volume();
  inline void clear_has_volume();
  inline void set_has_delay_value();
  inline void clear_has_delay_value();
  inline void set_has_sequence_number();
  inline void clear_has_sequence_number();
  inline void set_has_entity_index();
  inline void clear_has_entity_index();
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_pitch();
  inline void clear_has_pitch();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_sound_num();
  inline void clear_has_sound_num();
  inline void set_has_sound_num_handle();
  inline void clear_has_sound_num_handle();
  inline void set_has_speaker_entity();
  inline void clear_has_speaker_entity();
  inline void set_has_random_seed();
  inline void clear_has_random_seed();
  inline void set_has_sound_level();
  inline void clear_has_sound_level();
  inline void set_has_is_sentence();
  inline void clear_has_is_sentence();
  inline void set_has_is_ambient();
  inline void clear_has_is_ambient();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_sound_resource_id();
  inline void clear_has_sound_resource_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 origin_x_;
  ::google::protobuf::int32 origin_y_;
  ::google::protobuf::int32 origin_z_;
  ::google::protobuf::uint32 volume_;
  float delay_value_;
  ::google::protobuf::int32 sequence_number_;
  ::google::protobuf::int32 entity_index_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 pitch_;
  ::google::protobuf::int32 flags_;
  ::google::protobuf::uint32 sound_num_;
  ::google::protobuf::uint32 sound_num_handle_;
  ::google::protobuf::int32 speaker_entity_;
  ::google::protobuf::int32 random_seed_;
  ::google::protobuf::int32 sound_level_;
  bool is_sentence_;
  bool is_ambient_;
  ::google::protobuf::uint64 sound_resource_id_;
  ::google::protobuf::uint32 guid_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_Sounds_sounddata_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_Sounds : public ::google::protobuf::Message {
 public:
  CSVCMsg_Sounds();
  virtual ~CSVCMsg_Sounds();

  CSVCMsg_Sounds(const CSVCMsg_Sounds& from);

  inline CSVCMsg_Sounds& operator=(const CSVCMsg_Sounds& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_Sounds& default_instance();

  void Swap(CSVCMsg_Sounds* other);

  // implements Message ----------------------------------------------

  CSVCMsg_Sounds* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_Sounds& from);
  void MergeFrom(const CSVCMsg_Sounds& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSVCMsg_Sounds_sounddata_t sounddata_t;

  // accessors -------------------------------------------------------

  // optional bool reliable_sound = 1;
  inline bool has_reliable_sound() const;
  inline void clear_reliable_sound();
  static const int kReliableSoundFieldNumber = 1;
  inline bool reliable_sound() const;
  inline void set_reliable_sound(bool value);

  // repeated .CSVCMsg_Sounds.sounddata_t sounds = 2;
  inline int sounds_size() const;
  inline void clear_sounds();
  static const int kSoundsFieldNumber = 2;
  inline const ::CSVCMsg_Sounds_sounddata_t& sounds(int index) const;
  inline ::CSVCMsg_Sounds_sounddata_t* mutable_sounds(int index);
  inline ::CSVCMsg_Sounds_sounddata_t* add_sounds();
  inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_Sounds_sounddata_t >&
      sounds() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_Sounds_sounddata_t >*
      mutable_sounds();

  // @@protoc_insertion_point(class_scope:CSVCMsg_Sounds)
 private:
  inline void set_has_reliable_sound();
  inline void clear_has_reliable_sound();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_Sounds_sounddata_t > sounds_;
  bool reliable_sound_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_Sounds* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_Prefetch : public ::google::protobuf::Message {
 public:
  CSVCMsg_Prefetch();
  virtual ~CSVCMsg_Prefetch();

  CSVCMsg_Prefetch(const CSVCMsg_Prefetch& from);

  inline CSVCMsg_Prefetch& operator=(const CSVCMsg_Prefetch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_Prefetch& default_instance();

  void Swap(CSVCMsg_Prefetch* other);

  // implements Message ----------------------------------------------

  CSVCMsg_Prefetch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_Prefetch& from);
  void MergeFrom(const CSVCMsg_Prefetch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sound_index = 1;
  inline bool has_sound_index() const;
  inline void clear_sound_index();
  static const int kSoundIndexFieldNumber = 1;
  inline ::google::protobuf::int32 sound_index() const;
  inline void set_sound_index(::google::protobuf::int32 value);

  // optional .PrefetchType resource_type = 2 [default = PFT_SOUND];
  inline bool has_resource_type() const;
  inline void clear_resource_type();
  static const int kResourceTypeFieldNumber = 2;
  inline ::PrefetchType resource_type() const;
  inline void set_resource_type(::PrefetchType value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_Prefetch)
 private:
  inline void set_has_sound_index();
  inline void clear_has_sound_index();
  inline void set_has_resource_type();
  inline void clear_has_resource_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sound_index_;
  int resource_type_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_Prefetch* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_SetView : public ::google::protobuf::Message {
 public:
  CSVCMsg_SetView();
  virtual ~CSVCMsg_SetView();

  CSVCMsg_SetView(const CSVCMsg_SetView& from);

  inline CSVCMsg_SetView& operator=(const CSVCMsg_SetView& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_SetView& default_instance();

  void Swap(CSVCMsg_SetView* other);

  // implements Message ----------------------------------------------

  CSVCMsg_SetView* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_SetView& from);
  void MergeFrom(const CSVCMsg_SetView& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entity_index = 1;
  inline bool has_entity_index() const;
  inline void clear_entity_index();
  static const int kEntityIndexFieldNumber = 1;
  inline ::google::protobuf::int32 entity_index() const;
  inline void set_entity_index(::google::protobuf::int32 value);

  // optional int32 slot = 2;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 2;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_SetView)
 private:
  inline void set_has_entity_index();
  inline void clear_has_entity_index();
  inline void set_has_slot();
  inline void clear_has_slot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 entity_index_;
  ::google::protobuf::int32 slot_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_SetView* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_FixAngle : public ::google::protobuf::Message {
 public:
  CSVCMsg_FixAngle();
  virtual ~CSVCMsg_FixAngle();

  CSVCMsg_FixAngle(const CSVCMsg_FixAngle& from);

  inline CSVCMsg_FixAngle& operator=(const CSVCMsg_FixAngle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_FixAngle& default_instance();

  void Swap(CSVCMsg_FixAngle* other);

  // implements Message ----------------------------------------------

  CSVCMsg_FixAngle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_FixAngle& from);
  void MergeFrom(const CSVCMsg_FixAngle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool relative = 1;
  inline bool has_relative() const;
  inline void clear_relative();
  static const int kRelativeFieldNumber = 1;
  inline bool relative() const;
  inline void set_relative(bool value);

  // optional .CMsgQAngle angle = 2;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 2;
  inline const ::CMsgQAngle& angle() const;
  inline ::CMsgQAngle* mutable_angle();
  inline ::CMsgQAngle* release_angle();
  inline void set_allocated_angle(::CMsgQAngle* angle);

  // @@protoc_insertion_point(class_scope:CSVCMsg_FixAngle)
 private:
  inline void set_has_relative();
  inline void clear_has_relative();
  inline void set_has_angle();
  inline void clear_has_angle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgQAngle* angle_;
  bool relative_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_FixAngle* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_CrosshairAngle : public ::google::protobuf::Message {
 public:
  CSVCMsg_CrosshairAngle();
  virtual ~CSVCMsg_CrosshairAngle();

  CSVCMsg_CrosshairAngle(const CSVCMsg_CrosshairAngle& from);

  inline CSVCMsg_CrosshairAngle& operator=(const CSVCMsg_CrosshairAngle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_CrosshairAngle& default_instance();

  void Swap(CSVCMsg_CrosshairAngle* other);

  // implements Message ----------------------------------------------

  CSVCMsg_CrosshairAngle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_CrosshairAngle& from);
  void MergeFrom(const CSVCMsg_CrosshairAngle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgQAngle angle = 1;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 1;
  inline const ::CMsgQAngle& angle() const;
  inline ::CMsgQAngle* mutable_angle();
  inline ::CMsgQAngle* release_angle();
  inline void set_allocated_angle(::CMsgQAngle* angle);

  // @@protoc_insertion_point(class_scope:CSVCMsg_CrosshairAngle)
 private:
  inline void set_has_angle();
  inline void clear_has_angle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgQAngle* angle_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_CrosshairAngle* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_BSPDecal : public ::google::protobuf::Message {
 public:
  CSVCMsg_BSPDecal();
  virtual ~CSVCMsg_BSPDecal();

  CSVCMsg_BSPDecal(const CSVCMsg_BSPDecal& from);

  inline CSVCMsg_BSPDecal& operator=(const CSVCMsg_BSPDecal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_BSPDecal& default_instance();

  void Swap(CSVCMsg_BSPDecal* other);

  // implements Message ----------------------------------------------

  CSVCMsg_BSPDecal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_BSPDecal& from);
  void MergeFrom(const CSVCMsg_BSPDecal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgVector pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline const ::CMsgVector& pos() const;
  inline ::CMsgVector* mutable_pos();
  inline ::CMsgVector* release_pos();
  inline void set_allocated_pos(::CMsgVector* pos);

  // optional int32 decal_texture_index = 2;
  inline bool has_decal_texture_index() const;
  inline void clear_decal_texture_index();
  static const int kDecalTextureIndexFieldNumber = 2;
  inline ::google::protobuf::int32 decal_texture_index() const;
  inline void set_decal_texture_index(::google::protobuf::int32 value);

  // optional int32 entity_index = 3;
  inline bool has_entity_index() const;
  inline void clear_entity_index();
  static const int kEntityIndexFieldNumber = 3;
  inline ::google::protobuf::int32 entity_index() const;
  inline void set_entity_index(::google::protobuf::int32 value);

  // optional int32 model_index = 4;
  inline bool has_model_index() const;
  inline void clear_model_index();
  static const int kModelIndexFieldNumber = 4;
  inline ::google::protobuf::int32 model_index() const;
  inline void set_model_index(::google::protobuf::int32 value);

  // optional bool low_priority = 5;
  inline bool has_low_priority() const;
  inline void clear_low_priority();
  static const int kLowPriorityFieldNumber = 5;
  inline bool low_priority() const;
  inline void set_low_priority(bool value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_BSPDecal)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_decal_texture_index();
  inline void clear_has_decal_texture_index();
  inline void set_has_entity_index();
  inline void clear_has_entity_index();
  inline void set_has_model_index();
  inline void clear_has_model_index();
  inline void set_has_low_priority();
  inline void clear_has_low_priority();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgVector* pos_;
  ::google::protobuf::int32 decal_texture_index_;
  ::google::protobuf::int32 entity_index_;
  ::google::protobuf::int32 model_index_;
  bool low_priority_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_BSPDecal* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_SplitScreen : public ::google::protobuf::Message {
 public:
  CSVCMsg_SplitScreen();
  virtual ~CSVCMsg_SplitScreen();

  CSVCMsg_SplitScreen(const CSVCMsg_SplitScreen& from);

  inline CSVCMsg_SplitScreen& operator=(const CSVCMsg_SplitScreen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_SplitScreen& default_instance();

  void Swap(CSVCMsg_SplitScreen* other);

  // implements Message ----------------------------------------------

  CSVCMsg_SplitScreen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_SplitScreen& from);
  void MergeFrom(const CSVCMsg_SplitScreen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ESplitScreenMessageType type = 1 [default = MSG_SPLITSCREEN_ADDUSER];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::ESplitScreenMessageType type() const;
  inline void set_type(::ESplitScreenMessageType value);

  // optional int32 slot = 2;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 2;
  inline ::google::protobuf::int32 slot() const;
  inline void set_slot(::google::protobuf::int32 value);

  // optional int32 player_index = 3;
  inline bool has_player_index() const;
  inline void clear_player_index();
  static const int kPlayerIndexFieldNumber = 3;
  inline ::google::protobuf::int32 player_index() const;
  inline void set_player_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_SplitScreen)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_player_index();
  inline void clear_has_player_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::int32 slot_;
  ::google::protobuf::int32 player_index_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_SplitScreen* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_GetCvarValue : public ::google::protobuf::Message {
 public:
  CSVCMsg_GetCvarValue();
  virtual ~CSVCMsg_GetCvarValue();

  CSVCMsg_GetCvarValue(const CSVCMsg_GetCvarValue& from);

  inline CSVCMsg_GetCvarValue& operator=(const CSVCMsg_GetCvarValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_GetCvarValue& default_instance();

  void Swap(CSVCMsg_GetCvarValue* other);

  // implements Message ----------------------------------------------

  CSVCMsg_GetCvarValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_GetCvarValue& from);
  void MergeFrom(const CSVCMsg_GetCvarValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cookie = 1;
  inline bool has_cookie() const;
  inline void clear_cookie();
  static const int kCookieFieldNumber = 1;
  inline ::google::protobuf::int32 cookie() const;
  inline void set_cookie(::google::protobuf::int32 value);

  // optional string cvar_name = 2;
  inline bool has_cvar_name() const;
  inline void clear_cvar_name();
  static const int kCvarNameFieldNumber = 2;
  inline const ::std::string& cvar_name() const;
  inline void set_cvar_name(const ::std::string& value);
  inline void set_cvar_name(const char* value);
  inline void set_cvar_name(const char* value, size_t size);
  inline ::std::string* mutable_cvar_name();
  inline ::std::string* release_cvar_name();
  inline void set_allocated_cvar_name(::std::string* cvar_name);

  // @@protoc_insertion_point(class_scope:CSVCMsg_GetCvarValue)
 private:
  inline void set_has_cookie();
  inline void clear_has_cookie();
  inline void set_has_cvar_name();
  inline void clear_has_cvar_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* cvar_name_;
  ::google::protobuf::int32 cookie_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_GetCvarValue* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_Menu : public ::google::protobuf::Message {
 public:
  CSVCMsg_Menu();
  virtual ~CSVCMsg_Menu();

  CSVCMsg_Menu(const CSVCMsg_Menu& from);

  inline CSVCMsg_Menu& operator=(const CSVCMsg_Menu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_Menu& default_instance();

  void Swap(CSVCMsg_Menu* other);

  // implements Message ----------------------------------------------

  CSVCMsg_Menu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_Menu& from);
  void MergeFrom(const CSVCMsg_Menu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dialog_type = 1;
  inline bool has_dialog_type() const;
  inline void clear_dialog_type();
  static const int kDialogTypeFieldNumber = 1;
  inline ::google::protobuf::int32 dialog_type() const;
  inline void set_dialog_type(::google::protobuf::int32 value);

  // optional bytes menu_key_values = 2;
  inline bool has_menu_key_values() const;
  inline void clear_menu_key_values();
  static const int kMenuKeyValuesFieldNumber = 2;
  inline const ::std::string& menu_key_values() const;
  inline void set_menu_key_values(const ::std::string& value);
  inline void set_menu_key_values(const char* value);
  inline void set_menu_key_values(const void* value, size_t size);
  inline ::std::string* mutable_menu_key_values();
  inline ::std::string* release_menu_key_values();
  inline void set_allocated_menu_key_values(::std::string* menu_key_values);

  // @@protoc_insertion_point(class_scope:CSVCMsg_Menu)
 private:
  inline void set_has_dialog_type();
  inline void clear_has_dialog_type();
  inline void set_has_menu_key_values();
  inline void clear_has_menu_key_values();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* menu_key_values_;
  ::google::protobuf::int32 dialog_type_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_Menu* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_SendTable_sendprop_t : public ::google::protobuf::Message {
 public:
  CSVCMsg_SendTable_sendprop_t();
  virtual ~CSVCMsg_SendTable_sendprop_t();

  CSVCMsg_SendTable_sendprop_t(const CSVCMsg_SendTable_sendprop_t& from);

  inline CSVCMsg_SendTable_sendprop_t& operator=(const CSVCMsg_SendTable_sendprop_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_SendTable_sendprop_t& default_instance();

  void Swap(CSVCMsg_SendTable_sendprop_t* other);

  // implements Message ----------------------------------------------

  CSVCMsg_SendTable_sendprop_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_SendTable_sendprop_t& from);
  void MergeFrom(const CSVCMsg_SendTable_sendprop_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string var_name = 2;
  inline bool has_var_name() const;
  inline void clear_var_name();
  static const int kVarNameFieldNumber = 2;
  inline const ::std::string& var_name() const;
  inline void set_var_name(const ::std::string& value);
  inline void set_var_name(const char* value);
  inline void set_var_name(const char* value, size_t size);
  inline ::std::string* mutable_var_name();
  inline ::std::string* release_var_name();
  inline void set_allocated_var_name(::std::string* var_name);

  // optional int32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::int32 flags() const;
  inline void set_flags(::google::protobuf::int32 value);

  // optional int32 priority = 4;
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 4;
  inline ::google::protobuf::int32 priority() const;
  inline void set_priority(::google::protobuf::int32 value);

  // optional string dt_name = 5;
  inline bool has_dt_name() const;
  inline void clear_dt_name();
  static const int kDtNameFieldNumber = 5;
  inline const ::std::string& dt_name() const;
  inline void set_dt_name(const ::std::string& value);
  inline void set_dt_name(const char* value);
  inline void set_dt_name(const char* value, size_t size);
  inline ::std::string* mutable_dt_name();
  inline ::std::string* release_dt_name();
  inline void set_allocated_dt_name(::std::string* dt_name);

  // optional int32 num_elements = 6;
  inline bool has_num_elements() const;
  inline void clear_num_elements();
  static const int kNumElementsFieldNumber = 6;
  inline ::google::protobuf::int32 num_elements() const;
  inline void set_num_elements(::google::protobuf::int32 value);

  // optional float low_value = 7;
  inline bool has_low_value() const;
  inline void clear_low_value();
  static const int kLowValueFieldNumber = 7;
  inline float low_value() const;
  inline void set_low_value(float value);

  // optional float high_value = 8;
  inline bool has_high_value() const;
  inline void clear_high_value();
  static const int kHighValueFieldNumber = 8;
  inline float high_value() const;
  inline void set_high_value(float value);

  // optional int32 num_bits = 9;
  inline bool has_num_bits() const;
  inline void clear_num_bits();
  static const int kNumBitsFieldNumber = 9;
  inline ::google::protobuf::int32 num_bits() const;
  inline void set_num_bits(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_SendTable.sendprop_t)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_var_name();
  inline void clear_has_var_name();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_priority();
  inline void clear_has_priority();
  inline void set_has_dt_name();
  inline void clear_has_dt_name();
  inline void set_has_num_elements();
  inline void clear_has_num_elements();
  inline void set_has_low_value();
  inline void clear_has_low_value();
  inline void set_has_high_value();
  inline void clear_has_high_value();
  inline void set_has_num_bits();
  inline void clear_has_num_bits();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* var_name_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 flags_;
  ::std::string* dt_name_;
  ::google::protobuf::int32 priority_;
  ::google::protobuf::int32 num_elements_;
  float low_value_;
  float high_value_;
  ::google::protobuf::int32 num_bits_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_SendTable_sendprop_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_SendTable : public ::google::protobuf::Message {
 public:
  CSVCMsg_SendTable();
  virtual ~CSVCMsg_SendTable();

  CSVCMsg_SendTable(const CSVCMsg_SendTable& from);

  inline CSVCMsg_SendTable& operator=(const CSVCMsg_SendTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_SendTable& default_instance();

  void Swap(CSVCMsg_SendTable* other);

  // implements Message ----------------------------------------------

  CSVCMsg_SendTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_SendTable& from);
  void MergeFrom(const CSVCMsg_SendTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSVCMsg_SendTable_sendprop_t sendprop_t;

  // accessors -------------------------------------------------------

  // optional bool is_end = 1;
  inline bool has_is_end() const;
  inline void clear_is_end();
  static const int kIsEndFieldNumber = 1;
  inline bool is_end() const;
  inline void set_is_end(bool value);

  // optional string net_table_name = 2;
  inline bool has_net_table_name() const;
  inline void clear_net_table_name();
  static const int kNetTableNameFieldNumber = 2;
  inline const ::std::string& net_table_name() const;
  inline void set_net_table_name(const ::std::string& value);
  inline void set_net_table_name(const char* value);
  inline void set_net_table_name(const char* value, size_t size);
  inline ::std::string* mutable_net_table_name();
  inline ::std::string* release_net_table_name();
  inline void set_allocated_net_table_name(::std::string* net_table_name);

  // optional bool needs_decoder = 3;
  inline bool has_needs_decoder() const;
  inline void clear_needs_decoder();
  static const int kNeedsDecoderFieldNumber = 3;
  inline bool needs_decoder() const;
  inline void set_needs_decoder(bool value);

  // repeated .CSVCMsg_SendTable.sendprop_t props = 4;
  inline int props_size() const;
  inline void clear_props();
  static const int kPropsFieldNumber = 4;
  inline const ::CSVCMsg_SendTable_sendprop_t& props(int index) const;
  inline ::CSVCMsg_SendTable_sendprop_t* mutable_props(int index);
  inline ::CSVCMsg_SendTable_sendprop_t* add_props();
  inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_SendTable_sendprop_t >&
      props() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_SendTable_sendprop_t >*
      mutable_props();

  // @@protoc_insertion_point(class_scope:CSVCMsg_SendTable)
 private:
  inline void set_has_is_end();
  inline void clear_has_is_end();
  inline void set_has_net_table_name();
  inline void clear_has_net_table_name();
  inline void set_has_needs_decoder();
  inline void clear_has_needs_decoder();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* net_table_name_;
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_SendTable_sendprop_t > props_;
  bool is_end_;
  bool needs_decoder_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_SendTable* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_GameEventList_key_t : public ::google::protobuf::Message {
 public:
  CSVCMsg_GameEventList_key_t();
  virtual ~CSVCMsg_GameEventList_key_t();

  CSVCMsg_GameEventList_key_t(const CSVCMsg_GameEventList_key_t& from);

  inline CSVCMsg_GameEventList_key_t& operator=(const CSVCMsg_GameEventList_key_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_GameEventList_key_t& default_instance();

  void Swap(CSVCMsg_GameEventList_key_t* other);

  // implements Message ----------------------------------------------

  CSVCMsg_GameEventList_key_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_GameEventList_key_t& from);
  void MergeFrom(const CSVCMsg_GameEventList_key_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CSVCMsg_GameEventList.key_t)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_GameEventList_key_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_GameEventList_descriptor_t : public ::google::protobuf::Message {
 public:
  CSVCMsg_GameEventList_descriptor_t();
  virtual ~CSVCMsg_GameEventList_descriptor_t();

  CSVCMsg_GameEventList_descriptor_t(const CSVCMsg_GameEventList_descriptor_t& from);

  inline CSVCMsg_GameEventList_descriptor_t& operator=(const CSVCMsg_GameEventList_descriptor_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_GameEventList_descriptor_t& default_instance();

  void Swap(CSVCMsg_GameEventList_descriptor_t* other);

  // implements Message ----------------------------------------------

  CSVCMsg_GameEventList_descriptor_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_GameEventList_descriptor_t& from);
  void MergeFrom(const CSVCMsg_GameEventList_descriptor_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eventid = 1;
  inline bool has_eventid() const;
  inline void clear_eventid();
  static const int kEventidFieldNumber = 1;
  inline ::google::protobuf::int32 eventid() const;
  inline void set_eventid(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .CSVCMsg_GameEventList.key_t keys = 3;
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 3;
  inline const ::CSVCMsg_GameEventList_key_t& keys(int index) const;
  inline ::CSVCMsg_GameEventList_key_t* mutable_keys(int index);
  inline ::CSVCMsg_GameEventList_key_t* add_keys();
  inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_key_t >&
      keys() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_key_t >*
      mutable_keys();

  // @@protoc_insertion_point(class_scope:CSVCMsg_GameEventList.descriptor_t)
 private:
  inline void set_has_eventid();
  inline void clear_has_eventid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_key_t > keys_;
  ::google::protobuf::int32 eventid_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_GameEventList_descriptor_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_GameEventList : public ::google::protobuf::Message {
 public:
  CSVCMsg_GameEventList();
  virtual ~CSVCMsg_GameEventList();

  CSVCMsg_GameEventList(const CSVCMsg_GameEventList& from);

  inline CSVCMsg_GameEventList& operator=(const CSVCMsg_GameEventList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_GameEventList& default_instance();

  void Swap(CSVCMsg_GameEventList* other);

  // implements Message ----------------------------------------------

  CSVCMsg_GameEventList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_GameEventList& from);
  void MergeFrom(const CSVCMsg_GameEventList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSVCMsg_GameEventList_key_t key_t;
  typedef CSVCMsg_GameEventList_descriptor_t descriptor_t;

  // accessors -------------------------------------------------------

  // repeated .CSVCMsg_GameEventList.descriptor_t descriptors = 1;
  inline int descriptors_size() const;
  inline void clear_descriptors();
  static const int kDescriptorsFieldNumber = 1;
  inline const ::CSVCMsg_GameEventList_descriptor_t& descriptors(int index) const;
  inline ::CSVCMsg_GameEventList_descriptor_t* mutable_descriptors(int index);
  inline ::CSVCMsg_GameEventList_descriptor_t* add_descriptors();
  inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_descriptor_t >&
      descriptors() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_descriptor_t >*
      mutable_descriptors();

  // @@protoc_insertion_point(class_scope:CSVCMsg_GameEventList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_descriptor_t > descriptors_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_GameEventList* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_PacketEntities : public ::google::protobuf::Message {
 public:
  CSVCMsg_PacketEntities();
  virtual ~CSVCMsg_PacketEntities();

  CSVCMsg_PacketEntities(const CSVCMsg_PacketEntities& from);

  inline CSVCMsg_PacketEntities& operator=(const CSVCMsg_PacketEntities& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_PacketEntities& default_instance();

  void Swap(CSVCMsg_PacketEntities* other);

  // implements Message ----------------------------------------------

  CSVCMsg_PacketEntities* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_PacketEntities& from);
  void MergeFrom(const CSVCMsg_PacketEntities& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 max_entries = 1;
  inline bool has_max_entries() const;
  inline void clear_max_entries();
  static const int kMaxEntriesFieldNumber = 1;
  inline ::google::protobuf::int32 max_entries() const;
  inline void set_max_entries(::google::protobuf::int32 value);

  // optional int32 updated_entries = 2;
  inline bool has_updated_entries() const;
  inline void clear_updated_entries();
  static const int kUpdatedEntriesFieldNumber = 2;
  inline ::google::protobuf::int32 updated_entries() const;
  inline void set_updated_entries(::google::protobuf::int32 value);

  // optional bool is_delta = 3;
  inline bool has_is_delta() const;
  inline void clear_is_delta();
  static const int kIsDeltaFieldNumber = 3;
  inline bool is_delta() const;
  inline void set_is_delta(bool value);

  // optional bool update_baseline = 4;
  inline bool has_update_baseline() const;
  inline void clear_update_baseline();
  static const int kUpdateBaselineFieldNumber = 4;
  inline bool update_baseline() const;
  inline void set_update_baseline(bool value);

  // optional int32 baseline = 5;
  inline bool has_baseline() const;
  inline void clear_baseline();
  static const int kBaselineFieldNumber = 5;
  inline ::google::protobuf::int32 baseline() const;
  inline void set_baseline(::google::protobuf::int32 value);

  // optional int32 delta_from = 6;
  inline bool has_delta_from() const;
  inline void clear_delta_from();
  static const int kDeltaFromFieldNumber = 6;
  inline ::google::protobuf::int32 delta_from() const;
  inline void set_delta_from(::google::protobuf::int32 value);

  // optional bytes entity_data = 7;
  inline bool has_entity_data() const;
  inline void clear_entity_data();
  static const int kEntityDataFieldNumber = 7;
  inline const ::std::string& entity_data() const;
  inline void set_entity_data(const ::std::string& value);
  inline void set_entity_data(const char* value);
  inline void set_entity_data(const void* value, size_t size);
  inline ::std::string* mutable_entity_data();
  inline ::std::string* release_entity_data();
  inline void set_allocated_entity_data(::std::string* entity_data);

  // optional bool pending_full_frame = 8;
  inline bool has_pending_full_frame() const;
  inline void clear_pending_full_frame();
  static const int kPendingFullFrameFieldNumber = 8;
  inline bool pending_full_frame() const;
  inline void set_pending_full_frame(bool value);

  // optional uint32 active_spawngroup_handle = 9;
  inline bool has_active_spawngroup_handle() const;
  inline void clear_active_spawngroup_handle();
  static const int kActiveSpawngroupHandleFieldNumber = 9;
  inline ::google::protobuf::uint32 active_spawngroup_handle() const;
  inline void set_active_spawngroup_handle(::google::protobuf::uint32 value);

  // optional uint32 max_spawngroup_creationsequence = 10;
  inline bool has_max_spawngroup_creationsequence() const;
  inline void clear_max_spawngroup_creationsequence();
  static const int kMaxSpawngroupCreationsequenceFieldNumber = 10;
  inline ::google::protobuf::uint32 max_spawngroup_creationsequence() const;
  inline void set_max_spawngroup_creationsequence(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_PacketEntities)
 private:
  inline void set_has_max_entries();
  inline void clear_has_max_entries();
  inline void set_has_updated_entries();
  inline void clear_has_updated_entries();
  inline void set_has_is_delta();
  inline void clear_has_is_delta();
  inline void set_has_update_baseline();
  inline void clear_has_update_baseline();
  inline void set_has_baseline();
  inline void clear_has_baseline();
  inline void set_has_delta_from();
  inline void clear_has_delta_from();
  inline void set_has_entity_data();
  inline void clear_has_entity_data();
  inline void set_has_pending_full_frame();
  inline void clear_has_pending_full_frame();
  inline void set_has_active_spawngroup_handle();
  inline void clear_has_active_spawngroup_handle();
  inline void set_has_max_spawngroup_creationsequence();
  inline void clear_has_max_spawngroup_creationsequence();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 max_entries_;
  ::google::protobuf::int32 updated_entries_;
  ::google::protobuf::int32 baseline_;
  bool is_delta_;
  bool update_baseline_;
  bool pending_full_frame_;
  ::std::string* entity_data_;
  ::google::protobuf::int32 delta_from_;
  ::google::protobuf::uint32 active_spawngroup_handle_;
  ::google::protobuf::uint32 max_spawngroup_creationsequence_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_PacketEntities* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_TempEntities : public ::google::protobuf::Message {
 public:
  CSVCMsg_TempEntities();
  virtual ~CSVCMsg_TempEntities();

  CSVCMsg_TempEntities(const CSVCMsg_TempEntities& from);

  inline CSVCMsg_TempEntities& operator=(const CSVCMsg_TempEntities& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_TempEntities& default_instance();

  void Swap(CSVCMsg_TempEntities* other);

  // implements Message ----------------------------------------------

  CSVCMsg_TempEntities* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_TempEntities& from);
  void MergeFrom(const CSVCMsg_TempEntities& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool reliable = 1;
  inline bool has_reliable() const;
  inline void clear_reliable();
  static const int kReliableFieldNumber = 1;
  inline bool reliable() const;
  inline void set_reliable(bool value);

  // optional int32 num_entries = 2;
  inline bool has_num_entries() const;
  inline void clear_num_entries();
  static const int kNumEntriesFieldNumber = 2;
  inline ::google::protobuf::int32 num_entries() const;
  inline void set_num_entries(::google::protobuf::int32 value);

  // optional bytes entity_data = 3;
  inline bool has_entity_data() const;
  inline void clear_entity_data();
  static const int kEntityDataFieldNumber = 3;
  inline const ::std::string& entity_data() const;
  inline void set_entity_data(const ::std::string& value);
  inline void set_entity_data(const char* value);
  inline void set_entity_data(const void* value, size_t size);
  inline ::std::string* mutable_entity_data();
  inline ::std::string* release_entity_data();
  inline void set_allocated_entity_data(::std::string* entity_data);

  // @@protoc_insertion_point(class_scope:CSVCMsg_TempEntities)
 private:
  inline void set_has_reliable();
  inline void clear_has_reliable();
  inline void set_has_num_entries();
  inline void clear_has_num_entries();
  inline void set_has_entity_data();
  inline void clear_has_entity_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool reliable_;
  ::google::protobuf::int32 num_entries_;
  ::std::string* entity_data_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_TempEntities* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_CreateStringTable : public ::google::protobuf::Message {
 public:
  CSVCMsg_CreateStringTable();
  virtual ~CSVCMsg_CreateStringTable();

  CSVCMsg_CreateStringTable(const CSVCMsg_CreateStringTable& from);

  inline CSVCMsg_CreateStringTable& operator=(const CSVCMsg_CreateStringTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_CreateStringTable& default_instance();

  void Swap(CSVCMsg_CreateStringTable* other);

  // implements Message ----------------------------------------------

  CSVCMsg_CreateStringTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_CreateStringTable& from);
  void MergeFrom(const CSVCMsg_CreateStringTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 num_entries = 2;
  inline bool has_num_entries() const;
  inline void clear_num_entries();
  static const int kNumEntriesFieldNumber = 2;
  inline ::google::protobuf::int32 num_entries() const;
  inline void set_num_entries(::google::protobuf::int32 value);

  // optional bool user_data_fixed_size = 3;
  inline bool has_user_data_fixed_size() const;
  inline void clear_user_data_fixed_size();
  static const int kUserDataFixedSizeFieldNumber = 3;
  inline bool user_data_fixed_size() const;
  inline void set_user_data_fixed_size(bool value);

  // optional int32 user_data_size = 4;
  inline bool has_user_data_size() const;
  inline void clear_user_data_size();
  static const int kUserDataSizeFieldNumber = 4;
  inline ::google::protobuf::int32 user_data_size() const;
  inline void set_user_data_size(::google::protobuf::int32 value);

  // optional int32 user_data_size_bits = 5;
  inline bool has_user_data_size_bits() const;
  inline void clear_user_data_size_bits();
  static const int kUserDataSizeBitsFieldNumber = 5;
  inline ::google::protobuf::int32 user_data_size_bits() const;
  inline void set_user_data_size_bits(::google::protobuf::int32 value);

  // optional int32 flags = 6;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 6;
  inline ::google::protobuf::int32 flags() const;
  inline void set_flags(::google::protobuf::int32 value);

  // optional bytes string_data = 7;
  inline bool has_string_data() const;
  inline void clear_string_data();
  static const int kStringDataFieldNumber = 7;
  inline const ::std::string& string_data() const;
  inline void set_string_data(const ::std::string& value);
  inline void set_string_data(const char* value);
  inline void set_string_data(const void* value, size_t size);
  inline ::std::string* mutable_string_data();
  inline ::std::string* release_string_data();
  inline void set_allocated_string_data(::std::string* string_data);

  // optional int32 uncompressed_size = 8;
  inline bool has_uncompressed_size() const;
  inline void clear_uncompressed_size();
  static const int kUncompressedSizeFieldNumber = 8;
  inline ::google::protobuf::int32 uncompressed_size() const;
  inline void set_uncompressed_size(::google::protobuf::int32 value);

  // optional bool data_compressed = 9;
  inline bool has_data_compressed() const;
  inline void clear_data_compressed();
  static const int kDataCompressedFieldNumber = 9;
  inline bool data_compressed() const;
  inline void set_data_compressed(bool value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_CreateStringTable)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_num_entries();
  inline void clear_has_num_entries();
  inline void set_has_user_data_fixed_size();
  inline void clear_has_user_data_fixed_size();
  inline void set_has_user_data_size();
  inline void clear_has_user_data_size();
  inline void set_has_user_data_size_bits();
  inline void clear_has_user_data_size_bits();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_string_data();
  inline void clear_has_string_data();
  inline void set_has_uncompressed_size();
  inline void clear_has_uncompressed_size();
  inline void set_has_data_compressed();
  inline void clear_has_data_compressed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::int32 num_entries_;
  ::google::protobuf::int32 user_data_size_;
  ::google::protobuf::int32 user_data_size_bits_;
  ::google::protobuf::int32 flags_;
  bool user_data_fixed_size_;
  bool data_compressed_;
  ::google::protobuf::int32 uncompressed_size_;
  ::std::string* string_data_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_CreateStringTable* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_UpdateStringTable : public ::google::protobuf::Message {
 public:
  CSVCMsg_UpdateStringTable();
  virtual ~CSVCMsg_UpdateStringTable();

  CSVCMsg_UpdateStringTable(const CSVCMsg_UpdateStringTable& from);

  inline CSVCMsg_UpdateStringTable& operator=(const CSVCMsg_UpdateStringTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_UpdateStringTable& default_instance();

  void Swap(CSVCMsg_UpdateStringTable* other);

  // implements Message ----------------------------------------------

  CSVCMsg_UpdateStringTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_UpdateStringTable& from);
  void MergeFrom(const CSVCMsg_UpdateStringTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 table_id = 1;
  inline bool has_table_id() const;
  inline void clear_table_id();
  static const int kTableIdFieldNumber = 1;
  inline ::google::protobuf::int32 table_id() const;
  inline void set_table_id(::google::protobuf::int32 value);

  // optional int32 num_changed_entries = 2;
  inline bool has_num_changed_entries() const;
  inline void clear_num_changed_entries();
  static const int kNumChangedEntriesFieldNumber = 2;
  inline ::google::protobuf::int32 num_changed_entries() const;
  inline void set_num_changed_entries(::google::protobuf::int32 value);

  // optional bytes string_data = 3;
  inline bool has_string_data() const;
  inline void clear_string_data();
  static const int kStringDataFieldNumber = 3;
  inline const ::std::string& string_data() const;
  inline void set_string_data(const ::std::string& value);
  inline void set_string_data(const char* value);
  inline void set_string_data(const void* value, size_t size);
  inline ::std::string* mutable_string_data();
  inline ::std::string* release_string_data();
  inline void set_allocated_string_data(::std::string* string_data);

  // @@protoc_insertion_point(class_scope:CSVCMsg_UpdateStringTable)
 private:
  inline void set_has_table_id();
  inline void clear_has_table_id();
  inline void set_has_num_changed_entries();
  inline void clear_has_num_changed_entries();
  inline void set_has_string_data();
  inline void clear_has_string_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 num_changed_entries_;
  ::std::string* string_data_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_UpdateStringTable* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_VoiceData : public ::google::protobuf::Message {
 public:
  CSVCMsg_VoiceData();
  virtual ~CSVCMsg_VoiceData();

  CSVCMsg_VoiceData(const CSVCMsg_VoiceData& from);

  inline CSVCMsg_VoiceData& operator=(const CSVCMsg_VoiceData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_VoiceData& default_instance();

  void Swap(CSVCMsg_VoiceData* other);

  // implements Message ----------------------------------------------

  CSVCMsg_VoiceData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_VoiceData& from);
  void MergeFrom(const CSVCMsg_VoiceData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgVoiceAudio audio = 1;
  inline bool has_audio() const;
  inline void clear_audio();
  static const int kAudioFieldNumber = 1;
  inline const ::CMsgVoiceAudio& audio() const;
  inline ::CMsgVoiceAudio* mutable_audio();
  inline ::CMsgVoiceAudio* release_audio();
  inline void set_allocated_audio(::CMsgVoiceAudio* audio);

  // optional int32 client = 2;
  inline bool has_client() const;
  inline void clear_client();
  static const int kClientFieldNumber = 2;
  inline ::google::protobuf::int32 client() const;
  inline void set_client(::google::protobuf::int32 value);

  // optional bool proximity = 3;
  inline bool has_proximity() const;
  inline void clear_proximity();
  static const int kProximityFieldNumber = 3;
  inline bool proximity() const;
  inline void set_proximity(bool value);

  // optional fixed64 xuid = 4;
  inline bool has_xuid() const;
  inline void clear_xuid();
  static const int kXuidFieldNumber = 4;
  inline ::google::protobuf::uint64 xuid() const;
  inline void set_xuid(::google::protobuf::uint64 value);

  // optional int32 audible_mask = 5;
  inline bool has_audible_mask() const;
  inline void clear_audible_mask();
  static const int kAudibleMaskFieldNumber = 5;
  inline ::google::protobuf::int32 audible_mask() const;
  inline void set_audible_mask(::google::protobuf::int32 value);

  // optional uint32 tick = 6;
  inline bool has_tick() const;
  inline void clear_tick();
  static const int kTickFieldNumber = 6;
  inline ::google::protobuf::uint32 tick() const;
  inline void set_tick(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_VoiceData)
 private:
  inline void set_has_audio();
  inline void clear_has_audio();
  inline void set_has_client();
  inline void clear_has_client();
  inline void set_has_proximity();
  inline void clear_has_proximity();
  inline void set_has_xuid();
  inline void clear_has_xuid();
  inline void set_has_audible_mask();
  inline void clear_has_audible_mask();
  inline void set_has_tick();
  inline void clear_has_tick();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgVoiceAudio* audio_;
  ::google::protobuf::int32 client_;
  bool proximity_;
  ::google::protobuf::uint64 xuid_;
  ::google::protobuf::int32 audible_mask_;
  ::google::protobuf::uint32 tick_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_VoiceData* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_PacketReliable : public ::google::protobuf::Message {
 public:
  CSVCMsg_PacketReliable();
  virtual ~CSVCMsg_PacketReliable();

  CSVCMsg_PacketReliable(const CSVCMsg_PacketReliable& from);

  inline CSVCMsg_PacketReliable& operator=(const CSVCMsg_PacketReliable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_PacketReliable& default_instance();

  void Swap(CSVCMsg_PacketReliable* other);

  // implements Message ----------------------------------------------

  CSVCMsg_PacketReliable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_PacketReliable& from);
  void MergeFrom(const CSVCMsg_PacketReliable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tick = 1;
  inline bool has_tick() const;
  inline void clear_tick();
  static const int kTickFieldNumber = 1;
  inline ::google::protobuf::int32 tick() const;
  inline void set_tick(::google::protobuf::int32 value);

  // optional int32 messagessize = 2;
  inline bool has_messagessize() const;
  inline void clear_messagessize();
  static const int kMessagessizeFieldNumber = 2;
  inline ::google::protobuf::int32 messagessize() const;
  inline void set_messagessize(::google::protobuf::int32 value);

  // optional bool state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline bool state() const;
  inline void set_state(bool value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_PacketReliable)
 private:
  inline void set_has_tick();
  inline void clear_has_tick();
  inline void set_has_messagessize();
  inline void clear_has_messagessize();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tick_;
  ::google::protobuf::int32 messagessize_;
  bool state_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_PacketReliable* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_FullFrameSplit : public ::google::protobuf::Message {
 public:
  CSVCMsg_FullFrameSplit();
  virtual ~CSVCMsg_FullFrameSplit();

  CSVCMsg_FullFrameSplit(const CSVCMsg_FullFrameSplit& from);

  inline CSVCMsg_FullFrameSplit& operator=(const CSVCMsg_FullFrameSplit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_FullFrameSplit& default_instance();

  void Swap(CSVCMsg_FullFrameSplit* other);

  // implements Message ----------------------------------------------

  CSVCMsg_FullFrameSplit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_FullFrameSplit& from);
  void MergeFrom(const CSVCMsg_FullFrameSplit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tick = 1;
  inline bool has_tick() const;
  inline void clear_tick();
  static const int kTickFieldNumber = 1;
  inline ::google::protobuf::int32 tick() const;
  inline void set_tick(::google::protobuf::int32 value);

  // optional int32 section = 2;
  inline bool has_section() const;
  inline void clear_section();
  static const int kSectionFieldNumber = 2;
  inline ::google::protobuf::int32 section() const;
  inline void set_section(::google::protobuf::int32 value);

  // optional int32 total = 3;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 3;
  inline ::google::protobuf::int32 total() const;
  inline void set_total(::google::protobuf::int32 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:CSVCMsg_FullFrameSplit)
 private:
  inline void set_has_tick();
  inline void clear_has_tick();
  inline void set_has_section();
  inline void clear_has_section();
  inline void set_has_total();
  inline void clear_has_total();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tick_;
  ::google::protobuf::int32 section_;
  ::std::string* data_;
  ::google::protobuf::int32 total_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_FullFrameSplit* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_CmdKeyValues : public ::google::protobuf::Message {
 public:
  CSVCMsg_CmdKeyValues();
  virtual ~CSVCMsg_CmdKeyValues();

  CSVCMsg_CmdKeyValues(const CSVCMsg_CmdKeyValues& from);

  inline CSVCMsg_CmdKeyValues& operator=(const CSVCMsg_CmdKeyValues& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_CmdKeyValues& default_instance();

  void Swap(CSVCMsg_CmdKeyValues* other);

  // implements Message ----------------------------------------------

  CSVCMsg_CmdKeyValues* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_CmdKeyValues& from);
  void MergeFrom(const CSVCMsg_CmdKeyValues& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:CSVCMsg_CmdKeyValues)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_CmdKeyValues* default_instance_;
};
// -------------------------------------------------------------------

class CMsgIPCAddress : public ::google::protobuf::Message {
 public:
  CMsgIPCAddress();
  virtual ~CMsgIPCAddress();

  CMsgIPCAddress(const CMsgIPCAddress& from);

  inline CMsgIPCAddress& operator=(const CMsgIPCAddress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgIPCAddress& default_instance();

  void Swap(CMsgIPCAddress* other);

  // implements Message ----------------------------------------------

  CMsgIPCAddress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgIPCAddress& from);
  void MergeFrom(const CMsgIPCAddress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 computer_guid = 1;
  inline bool has_computer_guid() const;
  inline void clear_computer_guid();
  static const int kComputerGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 computer_guid() const;
  inline void set_computer_guid(::google::protobuf::uint64 value);

  // optional uint32 process_id = 2;
  inline bool has_process_id() const;
  inline void clear_process_id();
  static const int kProcessIdFieldNumber = 2;
  inline ::google::protobuf::uint32 process_id() const;
  inline void set_process_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgIPCAddress)
 private:
  inline void set_has_computer_guid();
  inline void clear_has_computer_guid();
  inline void set_has_process_id();
  inline void clear_has_process_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 computer_guid_;
  ::google::protobuf::uint32 process_id_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgIPCAddress* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerPeer : public ::google::protobuf::Message {
 public:
  CMsgServerPeer();
  virtual ~CMsgServerPeer();

  CMsgServerPeer(const CMsgServerPeer& from);

  inline CMsgServerPeer& operator=(const CMsgServerPeer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerPeer& default_instance();

  void Swap(CMsgServerPeer* other);

  // implements Message ----------------------------------------------

  CMsgServerPeer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerPeer& from);
  void MergeFrom(const CMsgServerPeer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 player_slot = 1;
  inline bool has_player_slot() const;
  inline void clear_player_slot();
  static const int kPlayerSlotFieldNumber = 1;
  inline ::google::protobuf::int32 player_slot() const;
  inline void set_player_slot(::google::protobuf::int32 value);

  // optional fixed64 steamid = 2;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // optional .CMsgIPCAddress ipc = 3;
  inline bool has_ipc() const;
  inline void clear_ipc();
  static const int kIpcFieldNumber = 3;
  inline const ::CMsgIPCAddress& ipc() const;
  inline ::CMsgIPCAddress* mutable_ipc();
  inline ::CMsgIPCAddress* release_ipc();
  inline void set_allocated_ipc(::CMsgIPCAddress* ipc);

  // optional bool they_hear_you = 4;
  inline bool has_they_hear_you() const;
  inline void clear_they_hear_you();
  static const int kTheyHearYouFieldNumber = 4;
  inline bool they_hear_you() const;
  inline void set_they_hear_you(bool value);

  // optional bool you_hear_them = 5;
  inline bool has_you_hear_them() const;
  inline void clear_you_hear_them();
  static const int kYouHearThemFieldNumber = 5;
  inline bool you_hear_them() const;
  inline void set_you_hear_them(bool value);

  // optional bool is_listenserver_host = 6;
  inline bool has_is_listenserver_host() const;
  inline void clear_is_listenserver_host();
  static const int kIsListenserverHostFieldNumber = 6;
  inline bool is_listenserver_host() const;
  inline void set_is_listenserver_host(bool value);

  // @@protoc_insertion_point(class_scope:CMsgServerPeer)
 private:
  inline void set_has_player_slot();
  inline void clear_has_player_slot();
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_ipc();
  inline void clear_has_ipc();
  inline void set_has_they_hear_you();
  inline void clear_has_they_hear_you();
  inline void set_has_you_hear_them();
  inline void clear_has_you_hear_them();
  inline void set_has_is_listenserver_host();
  inline void clear_has_is_listenserver_host();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::CMsgIPCAddress* ipc_;
  ::google::protobuf::int32 player_slot_;
  bool they_hear_you_;
  bool you_hear_them_;
  bool is_listenserver_host_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgServerPeer* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_PeerList : public ::google::protobuf::Message {
 public:
  CSVCMsg_PeerList();
  virtual ~CSVCMsg_PeerList();

  CSVCMsg_PeerList(const CSVCMsg_PeerList& from);

  inline CSVCMsg_PeerList& operator=(const CSVCMsg_PeerList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_PeerList& default_instance();

  void Swap(CSVCMsg_PeerList* other);

  // implements Message ----------------------------------------------

  CSVCMsg_PeerList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_PeerList& from);
  void MergeFrom(const CSVCMsg_PeerList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgServerPeer peer = 1;
  inline int peer_size() const;
  inline void clear_peer();
  static const int kPeerFieldNumber = 1;
  inline const ::CMsgServerPeer& peer(int index) const;
  inline ::CMsgServerPeer* mutable_peer(int index);
  inline ::CMsgServerPeer* add_peer();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgServerPeer >&
      peer() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgServerPeer >*
      mutable_peer();

  // @@protoc_insertion_point(class_scope:CSVCMsg_PeerList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgServerPeer > peer_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_PeerList* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_ClearAllStringTables : public ::google::protobuf::Message {
 public:
  CSVCMsg_ClearAllStringTables();
  virtual ~CSVCMsg_ClearAllStringTables();

  CSVCMsg_ClearAllStringTables(const CSVCMsg_ClearAllStringTables& from);

  inline CSVCMsg_ClearAllStringTables& operator=(const CSVCMsg_ClearAllStringTables& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_ClearAllStringTables& default_instance();

  void Swap(CSVCMsg_ClearAllStringTables* other);

  // implements Message ----------------------------------------------

  CSVCMsg_ClearAllStringTables* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_ClearAllStringTables& from);
  void MergeFrom(const CSVCMsg_ClearAllStringTables& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string mapname = 1;
  inline bool has_mapname() const;
  inline void clear_mapname();
  static const int kMapnameFieldNumber = 1;
  inline const ::std::string& mapname() const;
  inline void set_mapname(const ::std::string& value);
  inline void set_mapname(const char* value);
  inline void set_mapname(const char* value, size_t size);
  inline ::std::string* mutable_mapname();
  inline ::std::string* release_mapname();
  inline void set_allocated_mapname(::std::string* mapname);

  // optional uint32 map_crc = 2;
  inline bool has_map_crc() const;
  inline void clear_map_crc();
  static const int kMapCrcFieldNumber = 2;
  inline ::google::protobuf::uint32 map_crc() const;
  inline void set_map_crc(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_ClearAllStringTables)
 private:
  inline void set_has_mapname();
  inline void clear_has_mapname();
  inline void set_has_map_crc();
  inline void clear_has_map_crc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* mapname_;
  ::google::protobuf::uint32 map_crc_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_ClearAllStringTables* default_instance_;
};
// -------------------------------------------------------------------

class ProtoFlattenedSerializerField_t : public ::google::protobuf::Message {
 public:
  ProtoFlattenedSerializerField_t();
  virtual ~ProtoFlattenedSerializerField_t();

  ProtoFlattenedSerializerField_t(const ProtoFlattenedSerializerField_t& from);

  inline ProtoFlattenedSerializerField_t& operator=(const ProtoFlattenedSerializerField_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoFlattenedSerializerField_t& default_instance();

  void Swap(ProtoFlattenedSerializerField_t* other);

  // implements Message ----------------------------------------------

  ProtoFlattenedSerializerField_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoFlattenedSerializerField_t& from);
  void MergeFrom(const ProtoFlattenedSerializerField_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 var_type_sym = 1;
  inline bool has_var_type_sym() const;
  inline void clear_var_type_sym();
  static const int kVarTypeSymFieldNumber = 1;
  inline ::google::protobuf::int32 var_type_sym() const;
  inline void set_var_type_sym(::google::protobuf::int32 value);

  // optional int32 var_name_sym = 2;
  inline bool has_var_name_sym() const;
  inline void clear_var_name_sym();
  static const int kVarNameSymFieldNumber = 2;
  inline ::google::protobuf::int32 var_name_sym() const;
  inline void set_var_name_sym(::google::protobuf::int32 value);

  // optional int32 bit_count = 3;
  inline bool has_bit_count() const;
  inline void clear_bit_count();
  static const int kBitCountFieldNumber = 3;
  inline ::google::protobuf::int32 bit_count() const;
  inline void set_bit_count(::google::protobuf::int32 value);

  // optional float low_value = 4;
  inline bool has_low_value() const;
  inline void clear_low_value();
  static const int kLowValueFieldNumber = 4;
  inline float low_value() const;
  inline void set_low_value(float value);

  // optional float high_value = 5;
  inline bool has_high_value() const;
  inline void clear_high_value();
  static const int kHighValueFieldNumber = 5;
  inline float high_value() const;
  inline void set_high_value(float value);

  // optional int32 encode_flags = 6;
  inline bool has_encode_flags() const;
  inline void clear_encode_flags();
  static const int kEncodeFlagsFieldNumber = 6;
  inline ::google::protobuf::int32 encode_flags() const;
  inline void set_encode_flags(::google::protobuf::int32 value);

  // optional int32 field_serializer_name_sym = 7;
  inline bool has_field_serializer_name_sym() const;
  inline void clear_field_serializer_name_sym();
  static const int kFieldSerializerNameSymFieldNumber = 7;
  inline ::google::protobuf::int32 field_serializer_name_sym() const;
  inline void set_field_serializer_name_sym(::google::protobuf::int32 value);

  // optional int32 field_serializer_version = 8;
  inline bool has_field_serializer_version() const;
  inline void clear_field_serializer_version();
  static const int kFieldSerializerVersionFieldNumber = 8;
  inline ::google::protobuf::int32 field_serializer_version() const;
  inline void set_field_serializer_version(::google::protobuf::int32 value);

  // optional int32 send_node_sym = 9;
  inline bool has_send_node_sym() const;
  inline void clear_send_node_sym();
  static const int kSendNodeSymFieldNumber = 9;
  inline ::google::protobuf::int32 send_node_sym() const;
  inline void set_send_node_sym(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoFlattenedSerializerField_t)
 private:
  inline void set_has_var_type_sym();
  inline void clear_has_var_type_sym();
  inline void set_has_var_name_sym();
  inline void clear_has_var_name_sym();
  inline void set_has_bit_count();
  inline void clear_has_bit_count();
  inline void set_has_low_value();
  inline void clear_has_low_value();
  inline void set_has_high_value();
  inline void clear_has_high_value();
  inline void set_has_encode_flags();
  inline void clear_has_encode_flags();
  inline void set_has_field_serializer_name_sym();
  inline void clear_has_field_serializer_name_sym();
  inline void set_has_field_serializer_version();
  inline void clear_has_field_serializer_version();
  inline void set_has_send_node_sym();
  inline void clear_has_send_node_sym();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 var_type_sym_;
  ::google::protobuf::int32 var_name_sym_;
  ::google::protobuf::int32 bit_count_;
  float low_value_;
  float high_value_;
  ::google::protobuf::int32 encode_flags_;
  ::google::protobuf::int32 field_serializer_name_sym_;
  ::google::protobuf::int32 field_serializer_version_;
  ::google::protobuf::int32 send_node_sym_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static ProtoFlattenedSerializerField_t* default_instance_;
};
// -------------------------------------------------------------------

class ProtoFlattenedSerializer_t : public ::google::protobuf::Message {
 public:
  ProtoFlattenedSerializer_t();
  virtual ~ProtoFlattenedSerializer_t();

  ProtoFlattenedSerializer_t(const ProtoFlattenedSerializer_t& from);

  inline ProtoFlattenedSerializer_t& operator=(const ProtoFlattenedSerializer_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoFlattenedSerializer_t& default_instance();

  void Swap(ProtoFlattenedSerializer_t* other);

  // implements Message ----------------------------------------------

  ProtoFlattenedSerializer_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoFlattenedSerializer_t& from);
  void MergeFrom(const ProtoFlattenedSerializer_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 serializer_name_sym = 1;
  inline bool has_serializer_name_sym() const;
  inline void clear_serializer_name_sym();
  static const int kSerializerNameSymFieldNumber = 1;
  inline ::google::protobuf::int32 serializer_name_sym() const;
  inline void set_serializer_name_sym(::google::protobuf::int32 value);

  // optional int32 serializer_version = 2;
  inline bool has_serializer_version() const;
  inline void clear_serializer_version();
  static const int kSerializerVersionFieldNumber = 2;
  inline ::google::protobuf::int32 serializer_version() const;
  inline void set_serializer_version(::google::protobuf::int32 value);

  // repeated int32 fields_index = 3;
  inline int fields_index_size() const;
  inline void clear_fields_index();
  static const int kFieldsIndexFieldNumber = 3;
  inline ::google::protobuf::int32 fields_index(int index) const;
  inline void set_fields_index(int index, ::google::protobuf::int32 value);
  inline void add_fields_index(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      fields_index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_fields_index();

  // @@protoc_insertion_point(class_scope:ProtoFlattenedSerializer_t)
 private:
  inline void set_has_serializer_name_sym();
  inline void clear_has_serializer_name_sym();
  inline void set_has_serializer_version();
  inline void clear_has_serializer_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 serializer_name_sym_;
  ::google::protobuf::int32 serializer_version_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > fields_index_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static ProtoFlattenedSerializer_t* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_FlattenedSerializer : public ::google::protobuf::Message {
 public:
  CSVCMsg_FlattenedSerializer();
  virtual ~CSVCMsg_FlattenedSerializer();

  CSVCMsg_FlattenedSerializer(const CSVCMsg_FlattenedSerializer& from);

  inline CSVCMsg_FlattenedSerializer& operator=(const CSVCMsg_FlattenedSerializer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_FlattenedSerializer& default_instance();

  void Swap(CSVCMsg_FlattenedSerializer* other);

  // implements Message ----------------------------------------------

  CSVCMsg_FlattenedSerializer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_FlattenedSerializer& from);
  void MergeFrom(const CSVCMsg_FlattenedSerializer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoFlattenedSerializer_t serializers = 1;
  inline int serializers_size() const;
  inline void clear_serializers();
  static const int kSerializersFieldNumber = 1;
  inline const ::ProtoFlattenedSerializer_t& serializers(int index) const;
  inline ::ProtoFlattenedSerializer_t* mutable_serializers(int index);
  inline ::ProtoFlattenedSerializer_t* add_serializers();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoFlattenedSerializer_t >&
      serializers() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoFlattenedSerializer_t >*
      mutable_serializers();

  // repeated string symbols = 2;
  inline int symbols_size() const;
  inline void clear_symbols();
  static const int kSymbolsFieldNumber = 2;
  inline const ::std::string& symbols(int index) const;
  inline ::std::string* mutable_symbols(int index);
  inline void set_symbols(int index, const ::std::string& value);
  inline void set_symbols(int index, const char* value);
  inline void set_symbols(int index, const char* value, size_t size);
  inline ::std::string* add_symbols();
  inline void add_symbols(const ::std::string& value);
  inline void add_symbols(const char* value);
  inline void add_symbols(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& symbols() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_symbols();

  // repeated .ProtoFlattenedSerializerField_t fields = 3;
  inline int fields_size() const;
  inline void clear_fields();
  static const int kFieldsFieldNumber = 3;
  inline const ::ProtoFlattenedSerializerField_t& fields(int index) const;
  inline ::ProtoFlattenedSerializerField_t* mutable_fields(int index);
  inline ::ProtoFlattenedSerializerField_t* add_fields();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoFlattenedSerializerField_t >&
      fields() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoFlattenedSerializerField_t >*
      mutable_fields();

  // @@protoc_insertion_point(class_scope:CSVCMsg_FlattenedSerializer)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoFlattenedSerializer_t > serializers_;
  ::google::protobuf::RepeatedPtrField< ::std::string> symbols_;
  ::google::protobuf::RepeatedPtrField< ::ProtoFlattenedSerializerField_t > fields_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_FlattenedSerializer* default_instance_;
};
// -------------------------------------------------------------------

class CSVCMsg_StopSound : public ::google::protobuf::Message {
 public:
  CSVCMsg_StopSound();
  virtual ~CSVCMsg_StopSound();

  CSVCMsg_StopSound(const CSVCMsg_StopSound& from);

  inline CSVCMsg_StopSound& operator=(const CSVCMsg_StopSound& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSVCMsg_StopSound& default_instance();

  void Swap(CSVCMsg_StopSound* other);

  // implements Message ----------------------------------------------

  CSVCMsg_StopSound* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSVCMsg_StopSound& from);
  void MergeFrom(const CSVCMsg_StopSound& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint32 guid() const;
  inline void set_guid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSVCMsg_StopSound)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 guid_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CSVCMsg_StopSound* default_instance_;
};
// -------------------------------------------------------------------

class CBidirMsg_RebroadcastGameEvent : public ::google::protobuf::Message {
 public:
  CBidirMsg_RebroadcastGameEvent();
  virtual ~CBidirMsg_RebroadcastGameEvent();

  CBidirMsg_RebroadcastGameEvent(const CBidirMsg_RebroadcastGameEvent& from);

  inline CBidirMsg_RebroadcastGameEvent& operator=(const CBidirMsg_RebroadcastGameEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CBidirMsg_RebroadcastGameEvent& default_instance();

  void Swap(CBidirMsg_RebroadcastGameEvent* other);

  // implements Message ----------------------------------------------

  CBidirMsg_RebroadcastGameEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CBidirMsg_RebroadcastGameEvent& from);
  void MergeFrom(const CBidirMsg_RebroadcastGameEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool posttoserver = 1;
  inline bool has_posttoserver() const;
  inline void clear_posttoserver();
  static const int kPosttoserverFieldNumber = 1;
  inline bool posttoserver() const;
  inline void set_posttoserver(bool value);

  // optional int32 buftype = 2;
  inline bool has_buftype() const;
  inline void clear_buftype();
  static const int kBuftypeFieldNumber = 2;
  inline ::google::protobuf::int32 buftype() const;
  inline void set_buftype(::google::protobuf::int32 value);

  // optional uint32 clientbitcount = 3;
  inline bool has_clientbitcount() const;
  inline void clear_clientbitcount();
  static const int kClientbitcountFieldNumber = 3;
  inline ::google::protobuf::uint32 clientbitcount() const;
  inline void set_clientbitcount(::google::protobuf::uint32 value);

  // optional uint64 receivingclients = 4;
  inline bool has_receivingclients() const;
  inline void clear_receivingclients();
  static const int kReceivingclientsFieldNumber = 4;
  inline ::google::protobuf::uint64 receivingclients() const;
  inline void set_receivingclients(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CBidirMsg_RebroadcastGameEvent)
 private:
  inline void set_has_posttoserver();
  inline void clear_has_posttoserver();
  inline void set_has_buftype();
  inline void clear_has_buftype();
  inline void set_has_clientbitcount();
  inline void clear_has_clientbitcount();
  inline void set_has_receivingclients();
  inline void clear_has_receivingclients();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool posttoserver_;
  ::google::protobuf::int32 buftype_;
  ::google::protobuf::uint64 receivingclients_;
  ::google::protobuf::uint32 clientbitcount_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CBidirMsg_RebroadcastGameEvent* default_instance_;
};
// -------------------------------------------------------------------

class CBidirMsg_RebroadcastSource : public ::google::protobuf::Message {
 public:
  CBidirMsg_RebroadcastSource();
  virtual ~CBidirMsg_RebroadcastSource();

  CBidirMsg_RebroadcastSource(const CBidirMsg_RebroadcastSource& from);

  inline CBidirMsg_RebroadcastSource& operator=(const CBidirMsg_RebroadcastSource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CBidirMsg_RebroadcastSource& default_instance();

  void Swap(CBidirMsg_RebroadcastSource* other);

  // implements Message ----------------------------------------------

  CBidirMsg_RebroadcastSource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CBidirMsg_RebroadcastSource& from);
  void MergeFrom(const CBidirMsg_RebroadcastSource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eventsource = 1;
  inline bool has_eventsource() const;
  inline void clear_eventsource();
  static const int kEventsourceFieldNumber = 1;
  inline ::google::protobuf::int32 eventsource() const;
  inline void set_eventsource(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CBidirMsg_RebroadcastSource)
 private:
  inline void set_has_eventsource();
  inline void clear_has_eventsource();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 eventsource_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CBidirMsg_RebroadcastSource* default_instance_;
};
// -------------------------------------------------------------------

class SerializedNetAddress_t : public ::google::protobuf::Message {
 public:
  SerializedNetAddress_t();
  virtual ~SerializedNetAddress_t();

  SerializedNetAddress_t(const SerializedNetAddress_t& from);

  inline SerializedNetAddress_t& operator=(const SerializedNetAddress_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedNetAddress_t& default_instance();

  void Swap(SerializedNetAddress_t* other);

  // implements Message ----------------------------------------------

  SerializedNetAddress_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializedNetAddress_t& from);
  void MergeFrom(const SerializedNetAddress_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes serializedAddress = 1;
  inline bool has_serializedaddress() const;
  inline void clear_serializedaddress();
  static const int kSerializedAddressFieldNumber = 1;
  inline const ::std::string& serializedaddress() const;
  inline void set_serializedaddress(const ::std::string& value);
  inline void set_serializedaddress(const char* value);
  inline void set_serializedaddress(const void* value, size_t size);
  inline ::std::string* mutable_serializedaddress();
  inline ::std::string* release_serializedaddress();
  inline void set_allocated_serializedaddress(::std::string* serializedaddress);

  // @@protoc_insertion_point(class_scope:SerializedNetAddress_t)
 private:
  inline void set_has_serializedaddress();
  inline void clear_has_serializedaddress();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* serializedaddress_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static SerializedNetAddress_t* default_instance_;
};
// -------------------------------------------------------------------

class CBidirMsg_RelayInfo : public ::google::protobuf::Message {
 public:
  CBidirMsg_RelayInfo();
  virtual ~CBidirMsg_RelayInfo();

  CBidirMsg_RelayInfo(const CBidirMsg_RelayInfo& from);

  inline CBidirMsg_RelayInfo& operator=(const CBidirMsg_RelayInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CBidirMsg_RelayInfo& default_instance();

  void Swap(CBidirMsg_RelayInfo* other);

  // implements Message ----------------------------------------------

  CBidirMsg_RelayInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CBidirMsg_RelayInfo& from);
  void MergeFrom(const CBidirMsg_RelayInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CBidirMsg_RelayInfo_Operation_t Operation_t;
  static const Operation_t RIO_REQUEST_RELAY = CBidirMsg_RelayInfo_Operation_t_RIO_REQUEST_RELAY;
  static const Operation_t RIO_WILL_RELAY = CBidirMsg_RelayInfo_Operation_t_RIO_WILL_RELAY;
  static const Operation_t RIO_NO_ROUTE = CBidirMsg_RelayInfo_Operation_t_RIO_NO_ROUTE;
  static const Operation_t RIO_REJECT_RELAY = CBidirMsg_RelayInfo_Operation_t_RIO_REJECT_RELAY;
  static const Operation_t RIO_ESTABLISH_CONNECTION = CBidirMsg_RelayInfo_Operation_t_RIO_ESTABLISH_CONNECTION;
  static inline bool Operation_t_IsValid(int value) {
    return CBidirMsg_RelayInfo_Operation_t_IsValid(value);
  }
  static const Operation_t Operation_t_MIN =
    CBidirMsg_RelayInfo_Operation_t_Operation_t_MIN;
  static const Operation_t Operation_t_MAX =
    CBidirMsg_RelayInfo_Operation_t_Operation_t_MAX;
  static const int Operation_t_ARRAYSIZE =
    CBidirMsg_RelayInfo_Operation_t_Operation_t_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Operation_t_descriptor() {
    return CBidirMsg_RelayInfo_Operation_t_descriptor();
  }
  static inline const ::std::string& Operation_t_Name(Operation_t value) {
    return CBidirMsg_RelayInfo_Operation_t_Name(value);
  }
  static inline bool Operation_t_Parse(const ::std::string& name,
      Operation_t* value) {
    return CBidirMsg_RelayInfo_Operation_t_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .CBidirMsg_RelayInfo.Operation_t operation = 1 [default = RIO_REQUEST_RELAY];
  inline bool has_operation() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 1;
  inline ::CBidirMsg_RelayInfo_Operation_t operation() const;
  inline void set_operation(::CBidirMsg_RelayInfo_Operation_t value);

  // optional .SerializedNetAddress_t serializedTargetAddress = 2;
  inline bool has_serializedtargetaddress() const;
  inline void clear_serializedtargetaddress();
  static const int kSerializedTargetAddressFieldNumber = 2;
  inline const ::SerializedNetAddress_t& serializedtargetaddress() const;
  inline ::SerializedNetAddress_t* mutable_serializedtargetaddress();
  inline ::SerializedNetAddress_t* release_serializedtargetaddress();
  inline void set_allocated_serializedtargetaddress(::SerializedNetAddress_t* serializedtargetaddress);

  // optional uint32 additionalHops = 3;
  inline bool has_additionalhops() const;
  inline void clear_additionalhops();
  static const int kAdditionalHopsFieldNumber = 3;
  inline ::google::protobuf::uint32 additionalhops() const;
  inline void set_additionalhops(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CBidirMsg_RelayInfo)
 private:
  inline void set_has_operation();
  inline void clear_has_operation();
  inline void set_has_serializedtargetaddress();
  inline void clear_has_serializedtargetaddress();
  inline void set_has_additionalhops();
  inline void clear_has_additionalhops();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SerializedNetAddress_t* serializedtargetaddress_;
  int operation_;
  ::google::protobuf::uint32 additionalhops_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CBidirMsg_RelayInfo* default_instance_;
};
// -------------------------------------------------------------------

class SignedPayload_t : public ::google::protobuf::Message {
 public:
  SignedPayload_t();
  virtual ~SignedPayload_t();

  SignedPayload_t(const SignedPayload_t& from);

  inline SignedPayload_t& operator=(const SignedPayload_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignedPayload_t& default_instance();

  void Swap(SignedPayload_t* other);

  // implements Message ----------------------------------------------

  SignedPayload_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignedPayload_t& from);
  void MergeFrom(const SignedPayload_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes payloadData = 1;
  inline bool has_payloaddata() const;
  inline void clear_payloaddata();
  static const int kPayloadDataFieldNumber = 1;
  inline const ::std::string& payloaddata() const;
  inline void set_payloaddata(const ::std::string& value);
  inline void set_payloaddata(const char* value);
  inline void set_payloaddata(const void* value, size_t size);
  inline ::std::string* mutable_payloaddata();
  inline ::std::string* release_payloaddata();
  inline void set_allocated_payloaddata(::std::string* payloaddata);

  // required uint32 signature = 2;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 2;
  inline ::google::protobuf::uint32 signature() const;
  inline void set_signature(::google::protobuf::uint32 value);

  // required bool bPayloadEncrypted = 3;
  inline bool has_bpayloadencrypted() const;
  inline void clear_bpayloadencrypted();
  static const int kBPayloadEncryptedFieldNumber = 3;
  inline bool bpayloadencrypted() const;
  inline void set_bpayloadencrypted(bool value);

  // @@protoc_insertion_point(class_scope:SignedPayload_t)
 private:
  inline void set_has_payloaddata();
  inline void clear_has_payloaddata();
  inline void set_has_signature();
  inline void clear_has_signature();
  inline void set_has_bpayloadencrypted();
  inline void clear_has_bpayloadencrypted();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* payloaddata_;
  ::google::protobuf::uint32 signature_;
  bool bpayloadencrypted_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static SignedPayload_t* default_instance_;
};
// -------------------------------------------------------------------

class CBidirMsg_RelayPacket_SignedDestinationAddress_t : public ::google::protobuf::Message {
 public:
  CBidirMsg_RelayPacket_SignedDestinationAddress_t();
  virtual ~CBidirMsg_RelayPacket_SignedDestinationAddress_t();

  CBidirMsg_RelayPacket_SignedDestinationAddress_t(const CBidirMsg_RelayPacket_SignedDestinationAddress_t& from);

  inline CBidirMsg_RelayPacket_SignedDestinationAddress_t& operator=(const CBidirMsg_RelayPacket_SignedDestinationAddress_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CBidirMsg_RelayPacket_SignedDestinationAddress_t& default_instance();

  void Swap(CBidirMsg_RelayPacket_SignedDestinationAddress_t* other);

  // implements Message ----------------------------------------------

  CBidirMsg_RelayPacket_SignedDestinationAddress_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CBidirMsg_RelayPacket_SignedDestinationAddress_t& from);
  void MergeFrom(const CBidirMsg_RelayPacket_SignedDestinationAddress_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .SerializedNetAddress_t serializedAddr = 1;
  inline bool has_serializedaddr() const;
  inline void clear_serializedaddr();
  static const int kSerializedAddrFieldNumber = 1;
  inline const ::SerializedNetAddress_t& serializedaddr() const;
  inline ::SerializedNetAddress_t* mutable_serializedaddr();
  inline ::SerializedNetAddress_t* release_serializedaddr();
  inline void set_allocated_serializedaddr(::SerializedNetAddress_t* serializedaddr);

  // required uint32 signature = 2;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 2;
  inline ::google::protobuf::uint32 signature() const;
  inline void set_signature(::google::protobuf::uint32 value);

  // optional bytes encryptedPayloadKey = 3;
  inline bool has_encryptedpayloadkey() const;
  inline void clear_encryptedpayloadkey();
  static const int kEncryptedPayloadKeyFieldNumber = 3;
  inline const ::std::string& encryptedpayloadkey() const;
  inline void set_encryptedpayloadkey(const ::std::string& value);
  inline void set_encryptedpayloadkey(const char* value);
  inline void set_encryptedpayloadkey(const void* value, size_t size);
  inline ::std::string* mutable_encryptedpayloadkey();
  inline ::std::string* release_encryptedpayloadkey();
  inline void set_allocated_encryptedpayloadkey(::std::string* encryptedpayloadkey);

  // @@protoc_insertion_point(class_scope:CBidirMsg_RelayPacket.SignedDestinationAddress_t)
 private:
  inline void set_has_serializedaddr();
  inline void clear_has_serializedaddr();
  inline void set_has_signature();
  inline void clear_has_signature();
  inline void set_has_encryptedpayloadkey();
  inline void clear_has_encryptedpayloadkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SerializedNetAddress_t* serializedaddr_;
  ::std::string* encryptedpayloadkey_;
  ::google::protobuf::uint32 signature_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CBidirMsg_RelayPacket_SignedDestinationAddress_t* default_instance_;
};
// -------------------------------------------------------------------

class CBidirMsg_RelayPacket : public ::google::protobuf::Message {
 public:
  CBidirMsg_RelayPacket();
  virtual ~CBidirMsg_RelayPacket();

  CBidirMsg_RelayPacket(const CBidirMsg_RelayPacket& from);

  inline CBidirMsg_RelayPacket& operator=(const CBidirMsg_RelayPacket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CBidirMsg_RelayPacket& default_instance();

  void Swap(CBidirMsg_RelayPacket* other);

  // implements Message ----------------------------------------------

  CBidirMsg_RelayPacket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CBidirMsg_RelayPacket& from);
  void MergeFrom(const CBidirMsg_RelayPacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CBidirMsg_RelayPacket_SignedDestinationAddress_t SignedDestinationAddress_t;

  // accessors -------------------------------------------------------

  // required uint32 prevhopcount = 1;
  inline bool has_prevhopcount() const;
  inline void clear_prevhopcount();
  static const int kPrevhopcountFieldNumber = 1;
  inline ::google::protobuf::uint32 prevhopcount() const;
  inline void set_prevhopcount(::google::protobuf::uint32 value);

  // required .SerializedNetAddress_t originalSender = 2;
  inline bool has_originalsender() const;
  inline void clear_originalsender();
  static const int kOriginalSenderFieldNumber = 2;
  inline const ::SerializedNetAddress_t& originalsender() const;
  inline ::SerializedNetAddress_t* mutable_originalsender();
  inline ::SerializedNetAddress_t* release_originalsender();
  inline void set_allocated_originalsender(::SerializedNetAddress_t* originalsender);

  // required .SignedPayload_t signedPayload = 3;
  inline bool has_signedpayload() const;
  inline void clear_signedpayload();
  static const int kSignedPayloadFieldNumber = 3;
  inline const ::SignedPayload_t& signedpayload() const;
  inline ::SignedPayload_t* mutable_signedpayload();
  inline ::SignedPayload_t* release_signedpayload();
  inline void set_allocated_signedpayload(::SignedPayload_t* signedpayload);

  // repeated .CBidirMsg_RelayPacket.SignedDestinationAddress_t recipientList = 4;
  inline int recipientlist_size() const;
  inline void clear_recipientlist();
  static const int kRecipientListFieldNumber = 4;
  inline const ::CBidirMsg_RelayPacket_SignedDestinationAddress_t& recipientlist(int index) const;
  inline ::CBidirMsg_RelayPacket_SignedDestinationAddress_t* mutable_recipientlist(int index);
  inline ::CBidirMsg_RelayPacket_SignedDestinationAddress_t* add_recipientlist();
  inline const ::google::protobuf::RepeatedPtrField< ::CBidirMsg_RelayPacket_SignedDestinationAddress_t >&
      recipientlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::CBidirMsg_RelayPacket_SignedDestinationAddress_t >*
      mutable_recipientlist();

  // @@protoc_insertion_point(class_scope:CBidirMsg_RelayPacket)
 private:
  inline void set_has_prevhopcount();
  inline void clear_has_prevhopcount();
  inline void set_has_originalsender();
  inline void clear_has_originalsender();
  inline void set_has_signedpayload();
  inline void clear_has_signedpayload();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SerializedNetAddress_t* originalsender_;
  ::SignedPayload_t* signedpayload_;
  ::google::protobuf::RepeatedPtrField< ::CBidirMsg_RelayPacket_SignedDestinationAddress_t > recipientlist_;
  ::google::protobuf::uint32 prevhopcount_;
  friend void  protobuf_AddDesc_netmessages_2eproto();
  friend void protobuf_AssignDesc_netmessages_2eproto();
  friend void protobuf_ShutdownFile_netmessages_2eproto();

  void InitAsDefaultInstance();
  static CBidirMsg_RelayPacket* default_instance_;
};
// ===================================================================


// ===================================================================

// CCLCMsg_ClientInfo

// optional fixed32 send_table_crc = 1;
inline bool CCLCMsg_ClientInfo::has_send_table_crc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_ClientInfo::set_has_send_table_crc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_ClientInfo::clear_has_send_table_crc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_ClientInfo::clear_send_table_crc() {
  send_table_crc_ = 0u;
  clear_has_send_table_crc();
}
inline ::google::protobuf::uint32 CCLCMsg_ClientInfo::send_table_crc() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_ClientInfo.send_table_crc)
  return send_table_crc_;
}
inline void CCLCMsg_ClientInfo::set_send_table_crc(::google::protobuf::uint32 value) {
  set_has_send_table_crc();
  send_table_crc_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_ClientInfo.send_table_crc)
}

// optional uint32 server_count = 2;
inline bool CCLCMsg_ClientInfo::has_server_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_ClientInfo::set_has_server_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCLCMsg_ClientInfo::clear_has_server_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCLCMsg_ClientInfo::clear_server_count() {
  server_count_ = 0u;
  clear_has_server_count();
}
inline ::google::protobuf::uint32 CCLCMsg_ClientInfo::server_count() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_ClientInfo.server_count)
  return server_count_;
}
inline void CCLCMsg_ClientInfo::set_server_count(::google::protobuf::uint32 value) {
  set_has_server_count();
  server_count_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_ClientInfo.server_count)
}

// optional bool is_hltv = 3;
inline bool CCLCMsg_ClientInfo::has_is_hltv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCLCMsg_ClientInfo::set_has_is_hltv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCLCMsg_ClientInfo::clear_has_is_hltv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCLCMsg_ClientInfo::clear_is_hltv() {
  is_hltv_ = false;
  clear_has_is_hltv();
}
inline bool CCLCMsg_ClientInfo::is_hltv() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_ClientInfo.is_hltv)
  return is_hltv_;
}
inline void CCLCMsg_ClientInfo::set_is_hltv(bool value) {
  set_has_is_hltv();
  is_hltv_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_ClientInfo.is_hltv)
}

// optional bool is_replay = 4;
inline bool CCLCMsg_ClientInfo::has_is_replay() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCLCMsg_ClientInfo::set_has_is_replay() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCLCMsg_ClientInfo::clear_has_is_replay() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCLCMsg_ClientInfo::clear_is_replay() {
  is_replay_ = false;
  clear_has_is_replay();
}
inline bool CCLCMsg_ClientInfo::is_replay() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_ClientInfo.is_replay)
  return is_replay_;
}
inline void CCLCMsg_ClientInfo::set_is_replay(bool value) {
  set_has_is_replay();
  is_replay_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_ClientInfo.is_replay)
}

// optional uint32 friends_id = 5;
inline bool CCLCMsg_ClientInfo::has_friends_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCLCMsg_ClientInfo::set_has_friends_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCLCMsg_ClientInfo::clear_has_friends_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCLCMsg_ClientInfo::clear_friends_id() {
  friends_id_ = 0u;
  clear_has_friends_id();
}
inline ::google::protobuf::uint32 CCLCMsg_ClientInfo::friends_id() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_ClientInfo.friends_id)
  return friends_id_;
}
inline void CCLCMsg_ClientInfo::set_friends_id(::google::protobuf::uint32 value) {
  set_has_friends_id();
  friends_id_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_ClientInfo.friends_id)
}

// optional string friends_name = 6;
inline bool CCLCMsg_ClientInfo::has_friends_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCLCMsg_ClientInfo::set_has_friends_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CCLCMsg_ClientInfo::clear_has_friends_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CCLCMsg_ClientInfo::clear_friends_name() {
  if (friends_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friends_name_->clear();
  }
  clear_has_friends_name();
}
inline const ::std::string& CCLCMsg_ClientInfo::friends_name() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_ClientInfo.friends_name)
  return *friends_name_;
}
inline void CCLCMsg_ClientInfo::set_friends_name(const ::std::string& value) {
  set_has_friends_name();
  if (friends_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friends_name_ = new ::std::string;
  }
  friends_name_->assign(value);
  // @@protoc_insertion_point(field_set:CCLCMsg_ClientInfo.friends_name)
}
inline void CCLCMsg_ClientInfo::set_friends_name(const char* value) {
  set_has_friends_name();
  if (friends_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friends_name_ = new ::std::string;
  }
  friends_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CCLCMsg_ClientInfo.friends_name)
}
inline void CCLCMsg_ClientInfo::set_friends_name(const char* value, size_t size) {
  set_has_friends_name();
  if (friends_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friends_name_ = new ::std::string;
  }
  friends_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCLCMsg_ClientInfo.friends_name)
}
inline ::std::string* CCLCMsg_ClientInfo::mutable_friends_name() {
  set_has_friends_name();
  if (friends_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friends_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CCLCMsg_ClientInfo.friends_name)
  return friends_name_;
}
inline ::std::string* CCLCMsg_ClientInfo::release_friends_name() {
  clear_has_friends_name();
  if (friends_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = friends_name_;
    friends_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CCLCMsg_ClientInfo::set_allocated_friends_name(::std::string* friends_name) {
  if (friends_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete friends_name_;
  }
  if (friends_name) {
    set_has_friends_name();
    friends_name_ = friends_name;
  } else {
    clear_has_friends_name();
    friends_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CCLCMsg_ClientInfo.friends_name)
}

// repeated fixed32 custom_files = 7;
inline int CCLCMsg_ClientInfo::custom_files_size() const {
  return custom_files_.size();
}
inline void CCLCMsg_ClientInfo::clear_custom_files() {
  custom_files_.Clear();
}
inline ::google::protobuf::uint32 CCLCMsg_ClientInfo::custom_files(int index) const {
  // @@protoc_insertion_point(field_get:CCLCMsg_ClientInfo.custom_files)
  return custom_files_.Get(index);
}
inline void CCLCMsg_ClientInfo::set_custom_files(int index, ::google::protobuf::uint32 value) {
  custom_files_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCLCMsg_ClientInfo.custom_files)
}
inline void CCLCMsg_ClientInfo::add_custom_files(::google::protobuf::uint32 value) {
  custom_files_.Add(value);
  // @@protoc_insertion_point(field_add:CCLCMsg_ClientInfo.custom_files)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CCLCMsg_ClientInfo::custom_files() const {
  // @@protoc_insertion_point(field_list:CCLCMsg_ClientInfo.custom_files)
  return custom_files_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CCLCMsg_ClientInfo::mutable_custom_files() {
  // @@protoc_insertion_point(field_mutable_list:CCLCMsg_ClientInfo.custom_files)
  return &custom_files_;
}

// -------------------------------------------------------------------

// CCLCMsg_Move

// optional uint32 num_backup_commands = 1;
inline bool CCLCMsg_Move::has_num_backup_commands() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_Move::set_has_num_backup_commands() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_Move::clear_has_num_backup_commands() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_Move::clear_num_backup_commands() {
  num_backup_commands_ = 0u;
  clear_has_num_backup_commands();
}
inline ::google::protobuf::uint32 CCLCMsg_Move::num_backup_commands() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_Move.num_backup_commands)
  return num_backup_commands_;
}
inline void CCLCMsg_Move::set_num_backup_commands(::google::protobuf::uint32 value) {
  set_has_num_backup_commands();
  num_backup_commands_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_Move.num_backup_commands)
}

// optional uint32 num_new_commands = 2;
inline bool CCLCMsg_Move::has_num_new_commands() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_Move::set_has_num_new_commands() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCLCMsg_Move::clear_has_num_new_commands() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCLCMsg_Move::clear_num_new_commands() {
  num_new_commands_ = 0u;
  clear_has_num_new_commands();
}
inline ::google::protobuf::uint32 CCLCMsg_Move::num_new_commands() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_Move.num_new_commands)
  return num_new_commands_;
}
inline void CCLCMsg_Move::set_num_new_commands(::google::protobuf::uint32 value) {
  set_has_num_new_commands();
  num_new_commands_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_Move.num_new_commands)
}

// optional bytes data = 3;
inline bool CCLCMsg_Move::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCLCMsg_Move::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCLCMsg_Move::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCLCMsg_Move::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& CCLCMsg_Move::data() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_Move.data)
  return *data_;
}
inline void CCLCMsg_Move::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:CCLCMsg_Move.data)
}
inline void CCLCMsg_Move::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CCLCMsg_Move.data)
}
inline void CCLCMsg_Move::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCLCMsg_Move.data)
}
inline ::std::string* CCLCMsg_Move::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CCLCMsg_Move.data)
  return data_;
}
inline ::std::string* CCLCMsg_Move::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CCLCMsg_Move::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CCLCMsg_Move.data)
}

// -------------------------------------------------------------------

// CMsgVoiceAudio

// optional .VoiceDataFormat_t format = 1 [default = VOICEDATA_FORMAT_STEAM];
inline bool CMsgVoiceAudio::has_format() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgVoiceAudio::set_has_format() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgVoiceAudio::clear_has_format() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgVoiceAudio::clear_format() {
  format_ = 0;
  clear_has_format();
}
inline ::VoiceDataFormat_t CMsgVoiceAudio::format() const {
  // @@protoc_insertion_point(field_get:CMsgVoiceAudio.format)
  return static_cast< ::VoiceDataFormat_t >(format_);
}
inline void CMsgVoiceAudio::set_format(::VoiceDataFormat_t value) {
  assert(::VoiceDataFormat_t_IsValid(value));
  set_has_format();
  format_ = value;
  // @@protoc_insertion_point(field_set:CMsgVoiceAudio.format)
}

// optional bytes voice_data = 2;
inline bool CMsgVoiceAudio::has_voice_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgVoiceAudio::set_has_voice_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgVoiceAudio::clear_has_voice_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgVoiceAudio::clear_voice_data() {
  if (voice_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_data_->clear();
  }
  clear_has_voice_data();
}
inline const ::std::string& CMsgVoiceAudio::voice_data() const {
  // @@protoc_insertion_point(field_get:CMsgVoiceAudio.voice_data)
  return *voice_data_;
}
inline void CMsgVoiceAudio::set_voice_data(const ::std::string& value) {
  set_has_voice_data();
  if (voice_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_data_ = new ::std::string;
  }
  voice_data_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgVoiceAudio.voice_data)
}
inline void CMsgVoiceAudio::set_voice_data(const char* value) {
  set_has_voice_data();
  if (voice_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_data_ = new ::std::string;
  }
  voice_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgVoiceAudio.voice_data)
}
inline void CMsgVoiceAudio::set_voice_data(const void* value, size_t size) {
  set_has_voice_data();
  if (voice_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_data_ = new ::std::string;
  }
  voice_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgVoiceAudio.voice_data)
}
inline ::std::string* CMsgVoiceAudio::mutable_voice_data() {
  set_has_voice_data();
  if (voice_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voice_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgVoiceAudio.voice_data)
  return voice_data_;
}
inline ::std::string* CMsgVoiceAudio::release_voice_data() {
  clear_has_voice_data();
  if (voice_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = voice_data_;
    voice_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgVoiceAudio::set_allocated_voice_data(::std::string* voice_data) {
  if (voice_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete voice_data_;
  }
  if (voice_data) {
    set_has_voice_data();
    voice_data_ = voice_data;
  } else {
    clear_has_voice_data();
    voice_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgVoiceAudio.voice_data)
}

// optional int32 sequence_bytes = 3;
inline bool CMsgVoiceAudio::has_sequence_bytes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgVoiceAudio::set_has_sequence_bytes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgVoiceAudio::clear_has_sequence_bytes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgVoiceAudio::clear_sequence_bytes() {
  sequence_bytes_ = 0;
  clear_has_sequence_bytes();
}
inline ::google::protobuf::int32 CMsgVoiceAudio::sequence_bytes() const {
  // @@protoc_insertion_point(field_get:CMsgVoiceAudio.sequence_bytes)
  return sequence_bytes_;
}
inline void CMsgVoiceAudio::set_sequence_bytes(::google::protobuf::int32 value) {
  set_has_sequence_bytes();
  sequence_bytes_ = value;
  // @@protoc_insertion_point(field_set:CMsgVoiceAudio.sequence_bytes)
}

// optional uint32 section_number = 4;
inline bool CMsgVoiceAudio::has_section_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgVoiceAudio::set_has_section_number() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgVoiceAudio::clear_has_section_number() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgVoiceAudio::clear_section_number() {
  section_number_ = 0u;
  clear_has_section_number();
}
inline ::google::protobuf::uint32 CMsgVoiceAudio::section_number() const {
  // @@protoc_insertion_point(field_get:CMsgVoiceAudio.section_number)
  return section_number_;
}
inline void CMsgVoiceAudio::set_section_number(::google::protobuf::uint32 value) {
  set_has_section_number();
  section_number_ = value;
  // @@protoc_insertion_point(field_set:CMsgVoiceAudio.section_number)
}

// optional uint32 sample_rate = 5;
inline bool CMsgVoiceAudio::has_sample_rate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgVoiceAudio::set_has_sample_rate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgVoiceAudio::clear_has_sample_rate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgVoiceAudio::clear_sample_rate() {
  sample_rate_ = 0u;
  clear_has_sample_rate();
}
inline ::google::protobuf::uint32 CMsgVoiceAudio::sample_rate() const {
  // @@protoc_insertion_point(field_get:CMsgVoiceAudio.sample_rate)
  return sample_rate_;
}
inline void CMsgVoiceAudio::set_sample_rate(::google::protobuf::uint32 value) {
  set_has_sample_rate();
  sample_rate_ = value;
  // @@protoc_insertion_point(field_set:CMsgVoiceAudio.sample_rate)
}

// optional uint32 uncompressed_sample_offset = 6;
inline bool CMsgVoiceAudio::has_uncompressed_sample_offset() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgVoiceAudio::set_has_uncompressed_sample_offset() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgVoiceAudio::clear_has_uncompressed_sample_offset() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgVoiceAudio::clear_uncompressed_sample_offset() {
  uncompressed_sample_offset_ = 0u;
  clear_has_uncompressed_sample_offset();
}
inline ::google::protobuf::uint32 CMsgVoiceAudio::uncompressed_sample_offset() const {
  // @@protoc_insertion_point(field_get:CMsgVoiceAudio.uncompressed_sample_offset)
  return uncompressed_sample_offset_;
}
inline void CMsgVoiceAudio::set_uncompressed_sample_offset(::google::protobuf::uint32 value) {
  set_has_uncompressed_sample_offset();
  uncompressed_sample_offset_ = value;
  // @@protoc_insertion_point(field_set:CMsgVoiceAudio.uncompressed_sample_offset)
}

// -------------------------------------------------------------------

// CCLCMsg_VoiceData

// optional .CMsgVoiceAudio audio = 1;
inline bool CCLCMsg_VoiceData::has_audio() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_VoiceData::set_has_audio() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_VoiceData::clear_has_audio() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_VoiceData::clear_audio() {
  if (audio_ != NULL) audio_->::CMsgVoiceAudio::Clear();
  clear_has_audio();
}
inline const ::CMsgVoiceAudio& CCLCMsg_VoiceData::audio() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_VoiceData.audio)
  return audio_ != NULL ? *audio_ : *default_instance_->audio_;
}
inline ::CMsgVoiceAudio* CCLCMsg_VoiceData::mutable_audio() {
  set_has_audio();
  if (audio_ == NULL) audio_ = new ::CMsgVoiceAudio;
  // @@protoc_insertion_point(field_mutable:CCLCMsg_VoiceData.audio)
  return audio_;
}
inline ::CMsgVoiceAudio* CCLCMsg_VoiceData::release_audio() {
  clear_has_audio();
  ::CMsgVoiceAudio* temp = audio_;
  audio_ = NULL;
  return temp;
}
inline void CCLCMsg_VoiceData::set_allocated_audio(::CMsgVoiceAudio* audio) {
  delete audio_;
  audio_ = audio;
  if (audio) {
    set_has_audio();
  } else {
    clear_has_audio();
  }
  // @@protoc_insertion_point(field_set_allocated:CCLCMsg_VoiceData.audio)
}

// optional fixed64 xuid = 2;
inline bool CCLCMsg_VoiceData::has_xuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_VoiceData::set_has_xuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCLCMsg_VoiceData::clear_has_xuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCLCMsg_VoiceData::clear_xuid() {
  xuid_ = GOOGLE_ULONGLONG(0);
  clear_has_xuid();
}
inline ::google::protobuf::uint64 CCLCMsg_VoiceData::xuid() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_VoiceData.xuid)
  return xuid_;
}
inline void CCLCMsg_VoiceData::set_xuid(::google::protobuf::uint64 value) {
  set_has_xuid();
  xuid_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_VoiceData.xuid)
}

// optional uint32 tick = 3;
inline bool CCLCMsg_VoiceData::has_tick() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCLCMsg_VoiceData::set_has_tick() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCLCMsg_VoiceData::clear_has_tick() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCLCMsg_VoiceData::clear_tick() {
  tick_ = 0u;
  clear_has_tick();
}
inline ::google::protobuf::uint32 CCLCMsg_VoiceData::tick() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_VoiceData.tick)
  return tick_;
}
inline void CCLCMsg_VoiceData::set_tick(::google::protobuf::uint32 value) {
  set_has_tick();
  tick_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_VoiceData.tick)
}

// -------------------------------------------------------------------

// CCLCMsg_BaselineAck

// optional int32 baseline_tick = 1;
inline bool CCLCMsg_BaselineAck::has_baseline_tick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_BaselineAck::set_has_baseline_tick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_BaselineAck::clear_has_baseline_tick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_BaselineAck::clear_baseline_tick() {
  baseline_tick_ = 0;
  clear_has_baseline_tick();
}
inline ::google::protobuf::int32 CCLCMsg_BaselineAck::baseline_tick() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_BaselineAck.baseline_tick)
  return baseline_tick_;
}
inline void CCLCMsg_BaselineAck::set_baseline_tick(::google::protobuf::int32 value) {
  set_has_baseline_tick();
  baseline_tick_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_BaselineAck.baseline_tick)
}

// optional int32 baseline_nr = 2;
inline bool CCLCMsg_BaselineAck::has_baseline_nr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_BaselineAck::set_has_baseline_nr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCLCMsg_BaselineAck::clear_has_baseline_nr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCLCMsg_BaselineAck::clear_baseline_nr() {
  baseline_nr_ = 0;
  clear_has_baseline_nr();
}
inline ::google::protobuf::int32 CCLCMsg_BaselineAck::baseline_nr() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_BaselineAck.baseline_nr)
  return baseline_nr_;
}
inline void CCLCMsg_BaselineAck::set_baseline_nr(::google::protobuf::int32 value) {
  set_has_baseline_nr();
  baseline_nr_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_BaselineAck.baseline_nr)
}

// -------------------------------------------------------------------

// CCLCMsg_ListenEvents

// repeated fixed32 event_mask = 1;
inline int CCLCMsg_ListenEvents::event_mask_size() const {
  return event_mask_.size();
}
inline void CCLCMsg_ListenEvents::clear_event_mask() {
  event_mask_.Clear();
}
inline ::google::protobuf::uint32 CCLCMsg_ListenEvents::event_mask(int index) const {
  // @@protoc_insertion_point(field_get:CCLCMsg_ListenEvents.event_mask)
  return event_mask_.Get(index);
}
inline void CCLCMsg_ListenEvents::set_event_mask(int index, ::google::protobuf::uint32 value) {
  event_mask_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCLCMsg_ListenEvents.event_mask)
}
inline void CCLCMsg_ListenEvents::add_event_mask(::google::protobuf::uint32 value) {
  event_mask_.Add(value);
  // @@protoc_insertion_point(field_add:CCLCMsg_ListenEvents.event_mask)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CCLCMsg_ListenEvents::event_mask() const {
  // @@protoc_insertion_point(field_list:CCLCMsg_ListenEvents.event_mask)
  return event_mask_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CCLCMsg_ListenEvents::mutable_event_mask() {
  // @@protoc_insertion_point(field_mutable_list:CCLCMsg_ListenEvents.event_mask)
  return &event_mask_;
}

// -------------------------------------------------------------------

// CCLCMsg_RespondCvarValue

// optional int32 cookie = 1;
inline bool CCLCMsg_RespondCvarValue::has_cookie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_RespondCvarValue::set_has_cookie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_RespondCvarValue::clear_has_cookie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_RespondCvarValue::clear_cookie() {
  cookie_ = 0;
  clear_has_cookie();
}
inline ::google::protobuf::int32 CCLCMsg_RespondCvarValue::cookie() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_RespondCvarValue.cookie)
  return cookie_;
}
inline void CCLCMsg_RespondCvarValue::set_cookie(::google::protobuf::int32 value) {
  set_has_cookie();
  cookie_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_RespondCvarValue.cookie)
}

// optional int32 status_code = 2;
inline bool CCLCMsg_RespondCvarValue::has_status_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_RespondCvarValue::set_has_status_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCLCMsg_RespondCvarValue::clear_has_status_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCLCMsg_RespondCvarValue::clear_status_code() {
  status_code_ = 0;
  clear_has_status_code();
}
inline ::google::protobuf::int32 CCLCMsg_RespondCvarValue::status_code() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_RespondCvarValue.status_code)
  return status_code_;
}
inline void CCLCMsg_RespondCvarValue::set_status_code(::google::protobuf::int32 value) {
  set_has_status_code();
  status_code_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_RespondCvarValue.status_code)
}

// optional string name = 3;
inline bool CCLCMsg_RespondCvarValue::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCLCMsg_RespondCvarValue::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCLCMsg_RespondCvarValue::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCLCMsg_RespondCvarValue::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CCLCMsg_RespondCvarValue::name() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_RespondCvarValue.name)
  return *name_;
}
inline void CCLCMsg_RespondCvarValue::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CCLCMsg_RespondCvarValue.name)
}
inline void CCLCMsg_RespondCvarValue::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CCLCMsg_RespondCvarValue.name)
}
inline void CCLCMsg_RespondCvarValue::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCLCMsg_RespondCvarValue.name)
}
inline ::std::string* CCLCMsg_RespondCvarValue::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CCLCMsg_RespondCvarValue.name)
  return name_;
}
inline ::std::string* CCLCMsg_RespondCvarValue::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CCLCMsg_RespondCvarValue::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CCLCMsg_RespondCvarValue.name)
}

// optional string value = 4;
inline bool CCLCMsg_RespondCvarValue::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCLCMsg_RespondCvarValue::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCLCMsg_RespondCvarValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCLCMsg_RespondCvarValue::clear_value() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& CCLCMsg_RespondCvarValue::value() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_RespondCvarValue.value)
  return *value_;
}
inline void CCLCMsg_RespondCvarValue::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set:CCLCMsg_RespondCvarValue.value)
}
inline void CCLCMsg_RespondCvarValue::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set_char:CCLCMsg_RespondCvarValue.value)
}
inline void CCLCMsg_RespondCvarValue::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCLCMsg_RespondCvarValue.value)
}
inline ::std::string* CCLCMsg_RespondCvarValue::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CCLCMsg_RespondCvarValue.value)
  return value_;
}
inline ::std::string* CCLCMsg_RespondCvarValue::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CCLCMsg_RespondCvarValue::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CCLCMsg_RespondCvarValue.value)
}

// -------------------------------------------------------------------

// CCLCMsg_FileCRCCheck

// optional int32 code_path = 1;
inline bool CCLCMsg_FileCRCCheck::has_code_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_FileCRCCheck::set_has_code_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_FileCRCCheck::clear_has_code_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_FileCRCCheck::clear_code_path() {
  code_path_ = 0;
  clear_has_code_path();
}
inline ::google::protobuf::int32 CCLCMsg_FileCRCCheck::code_path() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_FileCRCCheck.code_path)
  return code_path_;
}
inline void CCLCMsg_FileCRCCheck::set_code_path(::google::protobuf::int32 value) {
  set_has_code_path();
  code_path_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_FileCRCCheck.code_path)
}

// optional string path = 2;
inline bool CCLCMsg_FileCRCCheck::has_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_FileCRCCheck::set_has_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCLCMsg_FileCRCCheck::clear_has_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCLCMsg_FileCRCCheck::clear_path() {
  if (path_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& CCLCMsg_FileCRCCheck::path() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_FileCRCCheck.path)
  return *path_;
}
inline void CCLCMsg_FileCRCCheck::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    path_ = new ::std::string;
  }
  path_->assign(value);
  // @@protoc_insertion_point(field_set:CCLCMsg_FileCRCCheck.path)
}
inline void CCLCMsg_FileCRCCheck::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    path_ = new ::std::string;
  }
  path_->assign(value);
  // @@protoc_insertion_point(field_set_char:CCLCMsg_FileCRCCheck.path)
}
inline void CCLCMsg_FileCRCCheck::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCLCMsg_FileCRCCheck.path)
}
inline ::std::string* CCLCMsg_FileCRCCheck::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    path_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CCLCMsg_FileCRCCheck.path)
  return path_;
}
inline ::std::string* CCLCMsg_FileCRCCheck::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CCLCMsg_FileCRCCheck::set_allocated_path(::std::string* path) {
  if (path_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete path_;
  }
  if (path) {
    set_has_path();
    path_ = path;
  } else {
    clear_has_path();
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CCLCMsg_FileCRCCheck.path)
}

// optional int32 code_filename = 3;
inline bool CCLCMsg_FileCRCCheck::has_code_filename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCLCMsg_FileCRCCheck::set_has_code_filename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCLCMsg_FileCRCCheck::clear_has_code_filename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCLCMsg_FileCRCCheck::clear_code_filename() {
  code_filename_ = 0;
  clear_has_code_filename();
}
inline ::google::protobuf::int32 CCLCMsg_FileCRCCheck::code_filename() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_FileCRCCheck.code_filename)
  return code_filename_;
}
inline void CCLCMsg_FileCRCCheck::set_code_filename(::google::protobuf::int32 value) {
  set_has_code_filename();
  code_filename_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_FileCRCCheck.code_filename)
}

// optional string filename = 4;
inline bool CCLCMsg_FileCRCCheck::has_filename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCLCMsg_FileCRCCheck::set_has_filename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCLCMsg_FileCRCCheck::clear_has_filename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCLCMsg_FileCRCCheck::clear_filename() {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& CCLCMsg_FileCRCCheck::filename() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_FileCRCCheck.filename)
  return *filename_;
}
inline void CCLCMsg_FileCRCCheck::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set:CCLCMsg_FileCRCCheck.filename)
}
inline void CCLCMsg_FileCRCCheck::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set_char:CCLCMsg_FileCRCCheck.filename)
}
inline void CCLCMsg_FileCRCCheck::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCLCMsg_FileCRCCheck.filename)
}
inline ::std::string* CCLCMsg_FileCRCCheck::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CCLCMsg_FileCRCCheck.filename)
  return filename_;
}
inline ::std::string* CCLCMsg_FileCRCCheck::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CCLCMsg_FileCRCCheck::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CCLCMsg_FileCRCCheck.filename)
}

// optional fixed32 crc = 5;
inline bool CCLCMsg_FileCRCCheck::has_crc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCLCMsg_FileCRCCheck::set_has_crc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCLCMsg_FileCRCCheck::clear_has_crc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCLCMsg_FileCRCCheck::clear_crc() {
  crc_ = 0u;
  clear_has_crc();
}
inline ::google::protobuf::uint32 CCLCMsg_FileCRCCheck::crc() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_FileCRCCheck.crc)
  return crc_;
}
inline void CCLCMsg_FileCRCCheck::set_crc(::google::protobuf::uint32 value) {
  set_has_crc();
  crc_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_FileCRCCheck.crc)
}

// -------------------------------------------------------------------

// CCLCMsg_LoadingProgress

// optional int32 progress = 1;
inline bool CCLCMsg_LoadingProgress::has_progress() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_LoadingProgress::set_has_progress() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_LoadingProgress::clear_has_progress() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_LoadingProgress::clear_progress() {
  progress_ = 0;
  clear_has_progress();
}
inline ::google::protobuf::int32 CCLCMsg_LoadingProgress::progress() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_LoadingProgress.progress)
  return progress_;
}
inline void CCLCMsg_LoadingProgress::set_progress(::google::protobuf::int32 value) {
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_LoadingProgress.progress)
}

// -------------------------------------------------------------------

// CCLCMsg_SplitPlayerConnect

// optional string playername = 1;
inline bool CCLCMsg_SplitPlayerConnect::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_SplitPlayerConnect::set_has_playername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_SplitPlayerConnect::clear_has_playername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_SplitPlayerConnect::clear_playername() {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& CCLCMsg_SplitPlayerConnect::playername() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_SplitPlayerConnect.playername)
  return *playername_;
}
inline void CCLCMsg_SplitPlayerConnect::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set:CCLCMsg_SplitPlayerConnect.playername)
}
inline void CCLCMsg_SplitPlayerConnect::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
  // @@protoc_insertion_point(field_set_char:CCLCMsg_SplitPlayerConnect.playername)
}
inline void CCLCMsg_SplitPlayerConnect::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCLCMsg_SplitPlayerConnect.playername)
}
inline ::std::string* CCLCMsg_SplitPlayerConnect::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    playername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CCLCMsg_SplitPlayerConnect.playername)
  return playername_;
}
inline ::std::string* CCLCMsg_SplitPlayerConnect::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CCLCMsg_SplitPlayerConnect::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CCLCMsg_SplitPlayerConnect.playername)
}

// -------------------------------------------------------------------

// CCLCMsg_ClientMessage

// optional int32 msg_type = 1;
inline bool CCLCMsg_ClientMessage::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_ClientMessage::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_ClientMessage::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_ClientMessage::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::google::protobuf::int32 CCLCMsg_ClientMessage::msg_type() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_ClientMessage.msg_type)
  return msg_type_;
}
inline void CCLCMsg_ClientMessage::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_ClientMessage.msg_type)
}

// optional bytes data = 2;
inline bool CCLCMsg_ClientMessage::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_ClientMessage::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCLCMsg_ClientMessage::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCLCMsg_ClientMessage::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& CCLCMsg_ClientMessage::data() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_ClientMessage.data)
  return *data_;
}
inline void CCLCMsg_ClientMessage::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:CCLCMsg_ClientMessage.data)
}
inline void CCLCMsg_ClientMessage::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CCLCMsg_ClientMessage.data)
}
inline void CCLCMsg_ClientMessage::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCLCMsg_ClientMessage.data)
}
inline ::std::string* CCLCMsg_ClientMessage::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CCLCMsg_ClientMessage.data)
  return data_;
}
inline ::std::string* CCLCMsg_ClientMessage::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CCLCMsg_ClientMessage::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CCLCMsg_ClientMessage.data)
}

// -------------------------------------------------------------------

// CCLCMsg_SplitPlayerDisconnect

// optional int32 slot = 1;
inline bool CCLCMsg_SplitPlayerDisconnect::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_SplitPlayerDisconnect::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_SplitPlayerDisconnect::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_SplitPlayerDisconnect::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 CCLCMsg_SplitPlayerDisconnect::slot() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_SplitPlayerDisconnect.slot)
  return slot_;
}
inline void CCLCMsg_SplitPlayerDisconnect::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_SplitPlayerDisconnect.slot)
}

// -------------------------------------------------------------------

// CCLCMsg_ServerStatus

// optional bool simplified = 1;
inline bool CCLCMsg_ServerStatus::has_simplified() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_ServerStatus::set_has_simplified() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_ServerStatus::clear_has_simplified() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_ServerStatus::clear_simplified() {
  simplified_ = false;
  clear_has_simplified();
}
inline bool CCLCMsg_ServerStatus::simplified() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_ServerStatus.simplified)
  return simplified_;
}
inline void CCLCMsg_ServerStatus::set_simplified(bool value) {
  set_has_simplified();
  simplified_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_ServerStatus.simplified)
}

// -------------------------------------------------------------------

// CCLCMsg_ServerPing

// -------------------------------------------------------------------

// CCLCMsg_RequestPause

// optional .RequestPause_t pause_type = 1 [default = RP_PAUSE];
inline bool CCLCMsg_RequestPause::has_pause_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_RequestPause::set_has_pause_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_RequestPause::clear_has_pause_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_RequestPause::clear_pause_type() {
  pause_type_ = 0;
  clear_has_pause_type();
}
inline ::RequestPause_t CCLCMsg_RequestPause::pause_type() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_RequestPause.pause_type)
  return static_cast< ::RequestPause_t >(pause_type_);
}
inline void CCLCMsg_RequestPause::set_pause_type(::RequestPause_t value) {
  assert(::RequestPause_t_IsValid(value));
  set_has_pause_type();
  pause_type_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_RequestPause.pause_type)
}

// optional int32 pause_group = 2;
inline bool CCLCMsg_RequestPause::has_pause_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_RequestPause::set_has_pause_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCLCMsg_RequestPause::clear_has_pause_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCLCMsg_RequestPause::clear_pause_group() {
  pause_group_ = 0;
  clear_has_pause_group();
}
inline ::google::protobuf::int32 CCLCMsg_RequestPause::pause_group() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_RequestPause.pause_group)
  return pause_group_;
}
inline void CCLCMsg_RequestPause::set_pause_group(::google::protobuf::int32 value) {
  set_has_pause_group();
  pause_group_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_RequestPause.pause_group)
}

// -------------------------------------------------------------------

// CCLCMsg_CmdKeyValues

// optional bytes data = 1;
inline bool CCLCMsg_CmdKeyValues::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_CmdKeyValues::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_CmdKeyValues::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_CmdKeyValues::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& CCLCMsg_CmdKeyValues::data() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_CmdKeyValues.data)
  return *data_;
}
inline void CCLCMsg_CmdKeyValues::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:CCLCMsg_CmdKeyValues.data)
}
inline void CCLCMsg_CmdKeyValues::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CCLCMsg_CmdKeyValues.data)
}
inline void CCLCMsg_CmdKeyValues::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCLCMsg_CmdKeyValues.data)
}
inline ::std::string* CCLCMsg_CmdKeyValues::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CCLCMsg_CmdKeyValues.data)
  return data_;
}
inline ::std::string* CCLCMsg_CmdKeyValues::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CCLCMsg_CmdKeyValues::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CCLCMsg_CmdKeyValues.data)
}

// -------------------------------------------------------------------

// CSVCMsg_ServerInfo

// optional int32 protocol = 1;
inline bool CSVCMsg_ServerInfo::has_protocol() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_protocol() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_ServerInfo::clear_has_protocol() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_ServerInfo::clear_protocol() {
  protocol_ = 0;
  clear_has_protocol();
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::protocol() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.protocol)
  return protocol_;
}
inline void CSVCMsg_ServerInfo::set_protocol(::google::protobuf::int32 value) {
  set_has_protocol();
  protocol_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.protocol)
}

// optional int32 server_count = 2;
inline bool CSVCMsg_ServerInfo::has_server_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_server_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_ServerInfo::clear_has_server_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_ServerInfo::clear_server_count() {
  server_count_ = 0;
  clear_has_server_count();
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::server_count() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.server_count)
  return server_count_;
}
inline void CSVCMsg_ServerInfo::set_server_count(::google::protobuf::int32 value) {
  set_has_server_count();
  server_count_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.server_count)
}

// optional bool is_dedicated = 3;
inline bool CSVCMsg_ServerInfo::has_is_dedicated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_is_dedicated() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_ServerInfo::clear_has_is_dedicated() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_ServerInfo::clear_is_dedicated() {
  is_dedicated_ = false;
  clear_has_is_dedicated();
}
inline bool CSVCMsg_ServerInfo::is_dedicated() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.is_dedicated)
  return is_dedicated_;
}
inline void CSVCMsg_ServerInfo::set_is_dedicated(bool value) {
  set_has_is_dedicated();
  is_dedicated_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.is_dedicated)
}

// optional bool is_hltv = 4;
inline bool CSVCMsg_ServerInfo::has_is_hltv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_is_hltv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_ServerInfo::clear_has_is_hltv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_ServerInfo::clear_is_hltv() {
  is_hltv_ = false;
  clear_has_is_hltv();
}
inline bool CSVCMsg_ServerInfo::is_hltv() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.is_hltv)
  return is_hltv_;
}
inline void CSVCMsg_ServerInfo::set_is_hltv(bool value) {
  set_has_is_hltv();
  is_hltv_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.is_hltv)
}

// optional bool is_replay = 5;
inline bool CSVCMsg_ServerInfo::has_is_replay() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_is_replay() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_ServerInfo::clear_has_is_replay() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_ServerInfo::clear_is_replay() {
  is_replay_ = false;
  clear_has_is_replay();
}
inline bool CSVCMsg_ServerInfo::is_replay() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.is_replay)
  return is_replay_;
}
inline void CSVCMsg_ServerInfo::set_is_replay(bool value) {
  set_has_is_replay();
  is_replay_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.is_replay)
}

// optional int32 c_os = 6;
inline bool CSVCMsg_ServerInfo::has_c_os() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_c_os() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSVCMsg_ServerInfo::clear_has_c_os() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSVCMsg_ServerInfo::clear_c_os() {
  c_os_ = 0;
  clear_has_c_os();
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::c_os() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.c_os)
  return c_os_;
}
inline void CSVCMsg_ServerInfo::set_c_os(::google::protobuf::int32 value) {
  set_has_c_os();
  c_os_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.c_os)
}

// optional fixed32 map_crc = 7;
inline bool CSVCMsg_ServerInfo::has_map_crc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_map_crc() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSVCMsg_ServerInfo::clear_has_map_crc() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSVCMsg_ServerInfo::clear_map_crc() {
  map_crc_ = 0u;
  clear_has_map_crc();
}
inline ::google::protobuf::uint32 CSVCMsg_ServerInfo::map_crc() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.map_crc)
  return map_crc_;
}
inline void CSVCMsg_ServerInfo::set_map_crc(::google::protobuf::uint32 value) {
  set_has_map_crc();
  map_crc_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.map_crc)
}

// optional fixed32 client_crc = 8;
inline bool CSVCMsg_ServerInfo::has_client_crc() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_client_crc() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSVCMsg_ServerInfo::clear_has_client_crc() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSVCMsg_ServerInfo::clear_client_crc() {
  client_crc_ = 0u;
  clear_has_client_crc();
}
inline ::google::protobuf::uint32 CSVCMsg_ServerInfo::client_crc() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.client_crc)
  return client_crc_;
}
inline void CSVCMsg_ServerInfo::set_client_crc(::google::protobuf::uint32 value) {
  set_has_client_crc();
  client_crc_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.client_crc)
}

// optional fixed32 string_table_crc = 9;
inline bool CSVCMsg_ServerInfo::has_string_table_crc() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_string_table_crc() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSVCMsg_ServerInfo::clear_has_string_table_crc() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSVCMsg_ServerInfo::clear_string_table_crc() {
  string_table_crc_ = 0u;
  clear_has_string_table_crc();
}
inline ::google::protobuf::uint32 CSVCMsg_ServerInfo::string_table_crc() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.string_table_crc)
  return string_table_crc_;
}
inline void CSVCMsg_ServerInfo::set_string_table_crc(::google::protobuf::uint32 value) {
  set_has_string_table_crc();
  string_table_crc_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.string_table_crc)
}

// optional int32 max_clients = 10;
inline bool CSVCMsg_ServerInfo::has_max_clients() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_max_clients() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSVCMsg_ServerInfo::clear_has_max_clients() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSVCMsg_ServerInfo::clear_max_clients() {
  max_clients_ = 0;
  clear_has_max_clients();
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::max_clients() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.max_clients)
  return max_clients_;
}
inline void CSVCMsg_ServerInfo::set_max_clients(::google::protobuf::int32 value) {
  set_has_max_clients();
  max_clients_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.max_clients)
}

// optional int32 max_classes = 11;
inline bool CSVCMsg_ServerInfo::has_max_classes() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_max_classes() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSVCMsg_ServerInfo::clear_has_max_classes() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSVCMsg_ServerInfo::clear_max_classes() {
  max_classes_ = 0;
  clear_has_max_classes();
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::max_classes() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.max_classes)
  return max_classes_;
}
inline void CSVCMsg_ServerInfo::set_max_classes(::google::protobuf::int32 value) {
  set_has_max_classes();
  max_classes_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.max_classes)
}

// optional int32 player_slot = 12;
inline bool CSVCMsg_ServerInfo::has_player_slot() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_player_slot() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSVCMsg_ServerInfo::clear_has_player_slot() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSVCMsg_ServerInfo::clear_player_slot() {
  player_slot_ = 0;
  clear_has_player_slot();
}
inline ::google::protobuf::int32 CSVCMsg_ServerInfo::player_slot() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.player_slot)
  return player_slot_;
}
inline void CSVCMsg_ServerInfo::set_player_slot(::google::protobuf::int32 value) {
  set_has_player_slot();
  player_slot_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.player_slot)
}

// optional float tick_interval = 13;
inline bool CSVCMsg_ServerInfo::has_tick_interval() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_tick_interval() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSVCMsg_ServerInfo::clear_has_tick_interval() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSVCMsg_ServerInfo::clear_tick_interval() {
  tick_interval_ = 0;
  clear_has_tick_interval();
}
inline float CSVCMsg_ServerInfo::tick_interval() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.tick_interval)
  return tick_interval_;
}
inline void CSVCMsg_ServerInfo::set_tick_interval(float value) {
  set_has_tick_interval();
  tick_interval_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.tick_interval)
}

// optional string game_dir = 14;
inline bool CSVCMsg_ServerInfo::has_game_dir() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_game_dir() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSVCMsg_ServerInfo::clear_has_game_dir() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSVCMsg_ServerInfo::clear_game_dir() {
  if (game_dir_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_dir_->clear();
  }
  clear_has_game_dir();
}
inline const ::std::string& CSVCMsg_ServerInfo::game_dir() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.game_dir)
  return *game_dir_;
}
inline void CSVCMsg_ServerInfo::set_game_dir(const ::std::string& value) {
  set_has_game_dir();
  if (game_dir_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_dir_ = new ::std::string;
  }
  game_dir_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.game_dir)
}
inline void CSVCMsg_ServerInfo::set_game_dir(const char* value) {
  set_has_game_dir();
  if (game_dir_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_dir_ = new ::std::string;
  }
  game_dir_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ServerInfo.game_dir)
}
inline void CSVCMsg_ServerInfo::set_game_dir(const char* value, size_t size) {
  set_has_game_dir();
  if (game_dir_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_dir_ = new ::std::string;
  }
  game_dir_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ServerInfo.game_dir)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_game_dir() {
  set_has_game_dir();
  if (game_dir_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_dir_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ServerInfo.game_dir)
  return game_dir_;
}
inline ::std::string* CSVCMsg_ServerInfo::release_game_dir() {
  clear_has_game_dir();
  if (game_dir_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_dir_;
    game_dir_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_ServerInfo::set_allocated_game_dir(::std::string* game_dir) {
  if (game_dir_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_dir_;
  }
  if (game_dir) {
    set_has_game_dir();
    game_dir_ = game_dir;
  } else {
    clear_has_game_dir();
    game_dir_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ServerInfo.game_dir)
}

// optional string map_name = 15;
inline bool CSVCMsg_ServerInfo::has_map_name() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_map_name() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSVCMsg_ServerInfo::clear_has_map_name() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSVCMsg_ServerInfo::clear_map_name() {
  if (map_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_->clear();
  }
  clear_has_map_name();
}
inline const ::std::string& CSVCMsg_ServerInfo::map_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.map_name)
  return *map_name_;
}
inline void CSVCMsg_ServerInfo::set_map_name(const ::std::string& value) {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.map_name)
}
inline void CSVCMsg_ServerInfo::set_map_name(const char* value) {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ServerInfo.map_name)
}
inline void CSVCMsg_ServerInfo::set_map_name(const char* value, size_t size) {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ServerInfo.map_name)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_map_name() {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ServerInfo.map_name)
  return map_name_;
}
inline ::std::string* CSVCMsg_ServerInfo::release_map_name() {
  clear_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = map_name_;
    map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_ServerInfo::set_allocated_map_name(::std::string* map_name) {
  if (map_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete map_name_;
  }
  if (map_name) {
    set_has_map_name();
    map_name_ = map_name;
  } else {
    clear_has_map_name();
    map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ServerInfo.map_name)
}

// optional string sky_name = 16;
inline bool CSVCMsg_ServerInfo::has_sky_name() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_sky_name() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSVCMsg_ServerInfo::clear_has_sky_name() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSVCMsg_ServerInfo::clear_sky_name() {
  if (sky_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sky_name_->clear();
  }
  clear_has_sky_name();
}
inline const ::std::string& CSVCMsg_ServerInfo::sky_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.sky_name)
  return *sky_name_;
}
inline void CSVCMsg_ServerInfo::set_sky_name(const ::std::string& value) {
  set_has_sky_name();
  if (sky_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sky_name_ = new ::std::string;
  }
  sky_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.sky_name)
}
inline void CSVCMsg_ServerInfo::set_sky_name(const char* value) {
  set_has_sky_name();
  if (sky_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sky_name_ = new ::std::string;
  }
  sky_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ServerInfo.sky_name)
}
inline void CSVCMsg_ServerInfo::set_sky_name(const char* value, size_t size) {
  set_has_sky_name();
  if (sky_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sky_name_ = new ::std::string;
  }
  sky_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ServerInfo.sky_name)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_sky_name() {
  set_has_sky_name();
  if (sky_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sky_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ServerInfo.sky_name)
  return sky_name_;
}
inline ::std::string* CSVCMsg_ServerInfo::release_sky_name() {
  clear_has_sky_name();
  if (sky_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sky_name_;
    sky_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_ServerInfo::set_allocated_sky_name(::std::string* sky_name) {
  if (sky_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sky_name_;
  }
  if (sky_name) {
    set_has_sky_name();
    sky_name_ = sky_name;
  } else {
    clear_has_sky_name();
    sky_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ServerInfo.sky_name)
}

// optional string host_name = 17;
inline bool CSVCMsg_ServerInfo::has_host_name() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_host_name() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSVCMsg_ServerInfo::clear_has_host_name() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSVCMsg_ServerInfo::clear_host_name() {
  if (host_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_name_->clear();
  }
  clear_has_host_name();
}
inline const ::std::string& CSVCMsg_ServerInfo::host_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.host_name)
  return *host_name_;
}
inline void CSVCMsg_ServerInfo::set_host_name(const ::std::string& value) {
  set_has_host_name();
  if (host_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_name_ = new ::std::string;
  }
  host_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.host_name)
}
inline void CSVCMsg_ServerInfo::set_host_name(const char* value) {
  set_has_host_name();
  if (host_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_name_ = new ::std::string;
  }
  host_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ServerInfo.host_name)
}
inline void CSVCMsg_ServerInfo::set_host_name(const char* value, size_t size) {
  set_has_host_name();
  if (host_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_name_ = new ::std::string;
  }
  host_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ServerInfo.host_name)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_host_name() {
  set_has_host_name();
  if (host_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ServerInfo.host_name)
  return host_name_;
}
inline ::std::string* CSVCMsg_ServerInfo::release_host_name() {
  clear_has_host_name();
  if (host_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = host_name_;
    host_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_ServerInfo::set_allocated_host_name(::std::string* host_name) {
  if (host_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete host_name_;
  }
  if (host_name) {
    set_has_host_name();
    host_name_ = host_name;
  } else {
    clear_has_host_name();
    host_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ServerInfo.host_name)
}

// optional string addon_name = 18;
inline bool CSVCMsg_ServerInfo::has_addon_name() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_addon_name() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CSVCMsg_ServerInfo::clear_has_addon_name() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CSVCMsg_ServerInfo::clear_addon_name() {
  if (addon_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addon_name_->clear();
  }
  clear_has_addon_name();
}
inline const ::std::string& CSVCMsg_ServerInfo::addon_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.addon_name)
  return *addon_name_;
}
inline void CSVCMsg_ServerInfo::set_addon_name(const ::std::string& value) {
  set_has_addon_name();
  if (addon_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addon_name_ = new ::std::string;
  }
  addon_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.addon_name)
}
inline void CSVCMsg_ServerInfo::set_addon_name(const char* value) {
  set_has_addon_name();
  if (addon_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addon_name_ = new ::std::string;
  }
  addon_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ServerInfo.addon_name)
}
inline void CSVCMsg_ServerInfo::set_addon_name(const char* value, size_t size) {
  set_has_addon_name();
  if (addon_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addon_name_ = new ::std::string;
  }
  addon_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ServerInfo.addon_name)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_addon_name() {
  set_has_addon_name();
  if (addon_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    addon_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ServerInfo.addon_name)
  return addon_name_;
}
inline ::std::string* CSVCMsg_ServerInfo::release_addon_name() {
  clear_has_addon_name();
  if (addon_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = addon_name_;
    addon_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_ServerInfo::set_allocated_addon_name(::std::string* addon_name) {
  if (addon_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete addon_name_;
  }
  if (addon_name) {
    set_has_addon_name();
    addon_name_ = addon_name;
  } else {
    clear_has_addon_name();
    addon_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ServerInfo.addon_name)
}

// optional .CSVCMsg_GameSessionConfiguration game_session_config = 19;
inline bool CSVCMsg_ServerInfo::has_game_session_config() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_game_session_config() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CSVCMsg_ServerInfo::clear_has_game_session_config() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CSVCMsg_ServerInfo::clear_game_session_config() {
  if (game_session_config_ != NULL) game_session_config_->::CSVCMsg_GameSessionConfiguration::Clear();
  clear_has_game_session_config();
}
inline const ::CSVCMsg_GameSessionConfiguration& CSVCMsg_ServerInfo::game_session_config() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.game_session_config)
  return game_session_config_ != NULL ? *game_session_config_ : *default_instance_->game_session_config_;
}
inline ::CSVCMsg_GameSessionConfiguration* CSVCMsg_ServerInfo::mutable_game_session_config() {
  set_has_game_session_config();
  if (game_session_config_ == NULL) game_session_config_ = new ::CSVCMsg_GameSessionConfiguration;
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ServerInfo.game_session_config)
  return game_session_config_;
}
inline ::CSVCMsg_GameSessionConfiguration* CSVCMsg_ServerInfo::release_game_session_config() {
  clear_has_game_session_config();
  ::CSVCMsg_GameSessionConfiguration* temp = game_session_config_;
  game_session_config_ = NULL;
  return temp;
}
inline void CSVCMsg_ServerInfo::set_allocated_game_session_config(::CSVCMsg_GameSessionConfiguration* game_session_config) {
  delete game_session_config_;
  game_session_config_ = game_session_config;
  if (game_session_config) {
    set_has_game_session_config();
  } else {
    clear_has_game_session_config();
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ServerInfo.game_session_config)
}

// optional bytes game_session_manifest = 20;
inline bool CSVCMsg_ServerInfo::has_game_session_manifest() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CSVCMsg_ServerInfo::set_has_game_session_manifest() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CSVCMsg_ServerInfo::clear_has_game_session_manifest() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CSVCMsg_ServerInfo::clear_game_session_manifest() {
  if (game_session_manifest_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_session_manifest_->clear();
  }
  clear_has_game_session_manifest();
}
inline const ::std::string& CSVCMsg_ServerInfo::game_session_manifest() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ServerInfo.game_session_manifest)
  return *game_session_manifest_;
}
inline void CSVCMsg_ServerInfo::set_game_session_manifest(const ::std::string& value) {
  set_has_game_session_manifest();
  if (game_session_manifest_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_session_manifest_ = new ::std::string;
  }
  game_session_manifest_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ServerInfo.game_session_manifest)
}
inline void CSVCMsg_ServerInfo::set_game_session_manifest(const char* value) {
  set_has_game_session_manifest();
  if (game_session_manifest_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_session_manifest_ = new ::std::string;
  }
  game_session_manifest_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ServerInfo.game_session_manifest)
}
inline void CSVCMsg_ServerInfo::set_game_session_manifest(const void* value, size_t size) {
  set_has_game_session_manifest();
  if (game_session_manifest_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_session_manifest_ = new ::std::string;
  }
  game_session_manifest_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ServerInfo.game_session_manifest)
}
inline ::std::string* CSVCMsg_ServerInfo::mutable_game_session_manifest() {
  set_has_game_session_manifest();
  if (game_session_manifest_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_session_manifest_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ServerInfo.game_session_manifest)
  return game_session_manifest_;
}
inline ::std::string* CSVCMsg_ServerInfo::release_game_session_manifest() {
  clear_has_game_session_manifest();
  if (game_session_manifest_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_session_manifest_;
    game_session_manifest_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_ServerInfo::set_allocated_game_session_manifest(::std::string* game_session_manifest) {
  if (game_session_manifest_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_session_manifest_;
  }
  if (game_session_manifest) {
    set_has_game_session_manifest();
    game_session_manifest_ = game_session_manifest;
  } else {
    clear_has_game_session_manifest();
    game_session_manifest_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ServerInfo.game_session_manifest)
}

// -------------------------------------------------------------------

// CSVCMsg_ClassInfo_class_t

// optional int32 class_id = 1;
inline bool CSVCMsg_ClassInfo_class_t::has_class_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_ClassInfo_class_t::set_has_class_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_ClassInfo_class_t::clear_has_class_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_ClassInfo_class_t::clear_class_id() {
  class_id_ = 0;
  clear_has_class_id();
}
inline ::google::protobuf::int32 CSVCMsg_ClassInfo_class_t::class_id() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ClassInfo.class_t.class_id)
  return class_id_;
}
inline void CSVCMsg_ClassInfo_class_t::set_class_id(::google::protobuf::int32 value) {
  set_has_class_id();
  class_id_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ClassInfo.class_t.class_id)
}

// optional string data_table_name = 2;
inline bool CSVCMsg_ClassInfo_class_t::has_data_table_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_ClassInfo_class_t::set_has_data_table_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_ClassInfo_class_t::clear_has_data_table_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_ClassInfo_class_t::clear_data_table_name() {
  if (data_table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_table_name_->clear();
  }
  clear_has_data_table_name();
}
inline const ::std::string& CSVCMsg_ClassInfo_class_t::data_table_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ClassInfo.class_t.data_table_name)
  return *data_table_name_;
}
inline void CSVCMsg_ClassInfo_class_t::set_data_table_name(const ::std::string& value) {
  set_has_data_table_name();
  if (data_table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_table_name_ = new ::std::string;
  }
  data_table_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ClassInfo.class_t.data_table_name)
}
inline void CSVCMsg_ClassInfo_class_t::set_data_table_name(const char* value) {
  set_has_data_table_name();
  if (data_table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_table_name_ = new ::std::string;
  }
  data_table_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ClassInfo.class_t.data_table_name)
}
inline void CSVCMsg_ClassInfo_class_t::set_data_table_name(const char* value, size_t size) {
  set_has_data_table_name();
  if (data_table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_table_name_ = new ::std::string;
  }
  data_table_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ClassInfo.class_t.data_table_name)
}
inline ::std::string* CSVCMsg_ClassInfo_class_t::mutable_data_table_name() {
  set_has_data_table_name();
  if (data_table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_table_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ClassInfo.class_t.data_table_name)
  return data_table_name_;
}
inline ::std::string* CSVCMsg_ClassInfo_class_t::release_data_table_name() {
  clear_has_data_table_name();
  if (data_table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_table_name_;
    data_table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_ClassInfo_class_t::set_allocated_data_table_name(::std::string* data_table_name) {
  if (data_table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_table_name_;
  }
  if (data_table_name) {
    set_has_data_table_name();
    data_table_name_ = data_table_name;
  } else {
    clear_has_data_table_name();
    data_table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ClassInfo.class_t.data_table_name)
}

// optional string class_name = 3;
inline bool CSVCMsg_ClassInfo_class_t::has_class_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_ClassInfo_class_t::set_has_class_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_ClassInfo_class_t::clear_has_class_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_ClassInfo_class_t::clear_class_name() {
  if (class_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    class_name_->clear();
  }
  clear_has_class_name();
}
inline const ::std::string& CSVCMsg_ClassInfo_class_t::class_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ClassInfo.class_t.class_name)
  return *class_name_;
}
inline void CSVCMsg_ClassInfo_class_t::set_class_name(const ::std::string& value) {
  set_has_class_name();
  if (class_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    class_name_ = new ::std::string;
  }
  class_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ClassInfo.class_t.class_name)
}
inline void CSVCMsg_ClassInfo_class_t::set_class_name(const char* value) {
  set_has_class_name();
  if (class_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    class_name_ = new ::std::string;
  }
  class_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ClassInfo.class_t.class_name)
}
inline void CSVCMsg_ClassInfo_class_t::set_class_name(const char* value, size_t size) {
  set_has_class_name();
  if (class_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    class_name_ = new ::std::string;
  }
  class_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ClassInfo.class_t.class_name)
}
inline ::std::string* CSVCMsg_ClassInfo_class_t::mutable_class_name() {
  set_has_class_name();
  if (class_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    class_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ClassInfo.class_t.class_name)
  return class_name_;
}
inline ::std::string* CSVCMsg_ClassInfo_class_t::release_class_name() {
  clear_has_class_name();
  if (class_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = class_name_;
    class_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_ClassInfo_class_t::set_allocated_class_name(::std::string* class_name) {
  if (class_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete class_name_;
  }
  if (class_name) {
    set_has_class_name();
    class_name_ = class_name;
  } else {
    clear_has_class_name();
    class_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ClassInfo.class_t.class_name)
}

// -------------------------------------------------------------------

// CSVCMsg_ClassInfo

// optional bool create_on_client = 1;
inline bool CSVCMsg_ClassInfo::has_create_on_client() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_ClassInfo::set_has_create_on_client() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_ClassInfo::clear_has_create_on_client() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_ClassInfo::clear_create_on_client() {
  create_on_client_ = false;
  clear_has_create_on_client();
}
inline bool CSVCMsg_ClassInfo::create_on_client() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ClassInfo.create_on_client)
  return create_on_client_;
}
inline void CSVCMsg_ClassInfo::set_create_on_client(bool value) {
  set_has_create_on_client();
  create_on_client_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ClassInfo.create_on_client)
}

// repeated .CSVCMsg_ClassInfo.class_t classes = 2;
inline int CSVCMsg_ClassInfo::classes_size() const {
  return classes_.size();
}
inline void CSVCMsg_ClassInfo::clear_classes() {
  classes_.Clear();
}
inline const ::CSVCMsg_ClassInfo_class_t& CSVCMsg_ClassInfo::classes(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ClassInfo.classes)
  return classes_.Get(index);
}
inline ::CSVCMsg_ClassInfo_class_t* CSVCMsg_ClassInfo::mutable_classes(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ClassInfo.classes)
  return classes_.Mutable(index);
}
inline ::CSVCMsg_ClassInfo_class_t* CSVCMsg_ClassInfo::add_classes() {
  // @@protoc_insertion_point(field_add:CSVCMsg_ClassInfo.classes)
  return classes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_ClassInfo_class_t >&
CSVCMsg_ClassInfo::classes() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_ClassInfo.classes)
  return classes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_ClassInfo_class_t >*
CSVCMsg_ClassInfo::mutable_classes() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_ClassInfo.classes)
  return &classes_;
}

// -------------------------------------------------------------------

// CSVCMsg_SetPause

// optional bool paused = 1;
inline bool CSVCMsg_SetPause::has_paused() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_SetPause::set_has_paused() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_SetPause::clear_has_paused() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_SetPause::clear_paused() {
  paused_ = false;
  clear_has_paused();
}
inline bool CSVCMsg_SetPause::paused() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SetPause.paused)
  return paused_;
}
inline void CSVCMsg_SetPause::set_paused(bool value) {
  set_has_paused();
  paused_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SetPause.paused)
}

// -------------------------------------------------------------------

// CSVCMsg_VoiceInit

// optional int32 quality = 1;
inline bool CSVCMsg_VoiceInit::has_quality() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_VoiceInit::set_has_quality() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_VoiceInit::clear_has_quality() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_VoiceInit::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 CSVCMsg_VoiceInit::quality() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceInit.quality)
  return quality_;
}
inline void CSVCMsg_VoiceInit::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_VoiceInit.quality)
}

// optional string codec = 2;
inline bool CSVCMsg_VoiceInit::has_codec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_VoiceInit::set_has_codec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_VoiceInit::clear_has_codec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_VoiceInit::clear_codec() {
  if (codec_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codec_->clear();
  }
  clear_has_codec();
}
inline const ::std::string& CSVCMsg_VoiceInit::codec() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceInit.codec)
  return *codec_;
}
inline void CSVCMsg_VoiceInit::set_codec(const ::std::string& value) {
  set_has_codec();
  if (codec_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codec_ = new ::std::string;
  }
  codec_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_VoiceInit.codec)
}
inline void CSVCMsg_VoiceInit::set_codec(const char* value) {
  set_has_codec();
  if (codec_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codec_ = new ::std::string;
  }
  codec_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_VoiceInit.codec)
}
inline void CSVCMsg_VoiceInit::set_codec(const char* value, size_t size) {
  set_has_codec();
  if (codec_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codec_ = new ::std::string;
  }
  codec_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_VoiceInit.codec)
}
inline ::std::string* CSVCMsg_VoiceInit::mutable_codec() {
  set_has_codec();
  if (codec_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codec_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_VoiceInit.codec)
  return codec_;
}
inline ::std::string* CSVCMsg_VoiceInit::release_codec() {
  clear_has_codec();
  if (codec_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = codec_;
    codec_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_VoiceInit::set_allocated_codec(::std::string* codec) {
  if (codec_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete codec_;
  }
  if (codec) {
    set_has_codec();
    codec_ = codec;
  } else {
    clear_has_codec();
    codec_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_VoiceInit.codec)
}

// optional int32 version = 3 [default = 0];
inline bool CSVCMsg_VoiceInit::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_VoiceInit::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_VoiceInit::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_VoiceInit::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 CSVCMsg_VoiceInit::version() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceInit.version)
  return version_;
}
inline void CSVCMsg_VoiceInit::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_VoiceInit.version)
}

// -------------------------------------------------------------------

// CSVCMsg_Print

// optional string text = 1;
inline bool CSVCMsg_Print::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_Print::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_Print::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_Print::clear_text() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CSVCMsg_Print::text() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Print.text)
  return *text_;
}
inline void CSVCMsg_Print::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_Print.text)
}
inline void CSVCMsg_Print::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_Print.text)
}
inline void CSVCMsg_Print::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_Print.text)
}
inline ::std::string* CSVCMsg_Print::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_Print.text)
  return text_;
}
inline ::std::string* CSVCMsg_Print::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_Print::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_Print.text)
}

// -------------------------------------------------------------------

// CSVCMsg_Sounds_sounddata_t

// optional sint32 origin_x = 1;
inline bool CSVCMsg_Sounds_sounddata_t::has_origin_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_origin_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_origin_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_origin_x() {
  origin_x_ = 0;
  clear_has_origin_x();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::origin_x() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.origin_x)
  return origin_x_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_origin_x(::google::protobuf::int32 value) {
  set_has_origin_x();
  origin_x_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.origin_x)
}

// optional sint32 origin_y = 2;
inline bool CSVCMsg_Sounds_sounddata_t::has_origin_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_origin_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_origin_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_origin_y() {
  origin_y_ = 0;
  clear_has_origin_y();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::origin_y() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.origin_y)
  return origin_y_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_origin_y(::google::protobuf::int32 value) {
  set_has_origin_y();
  origin_y_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.origin_y)
}

// optional sint32 origin_z = 3;
inline bool CSVCMsg_Sounds_sounddata_t::has_origin_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_origin_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_origin_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_origin_z() {
  origin_z_ = 0;
  clear_has_origin_z();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::origin_z() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.origin_z)
  return origin_z_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_origin_z(::google::protobuf::int32 value) {
  set_has_origin_z();
  origin_z_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.origin_z)
}

// optional uint32 volume = 4;
inline bool CSVCMsg_Sounds_sounddata_t::has_volume() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_volume() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_volume() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_volume() {
  volume_ = 0u;
  clear_has_volume();
}
inline ::google::protobuf::uint32 CSVCMsg_Sounds_sounddata_t::volume() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.volume)
  return volume_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_volume(::google::protobuf::uint32 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.volume)
}

// optional float delay_value = 5;
inline bool CSVCMsg_Sounds_sounddata_t::has_delay_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_delay_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_delay_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_delay_value() {
  delay_value_ = 0;
  clear_has_delay_value();
}
inline float CSVCMsg_Sounds_sounddata_t::delay_value() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.delay_value)
  return delay_value_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_delay_value(float value) {
  set_has_delay_value();
  delay_value_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.delay_value)
}

// optional int32 sequence_number = 6;
inline bool CSVCMsg_Sounds_sounddata_t::has_sequence_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_sequence_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_sequence_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_sequence_number() {
  sequence_number_ = 0;
  clear_has_sequence_number();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::sequence_number() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.sequence_number)
  return sequence_number_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_sequence_number(::google::protobuf::int32 value) {
  set_has_sequence_number();
  sequence_number_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.sequence_number)
}

// optional int32 entity_index = 7;
inline bool CSVCMsg_Sounds_sounddata_t::has_entity_index() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_entity_index() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_entity_index() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_entity_index() {
  entity_index_ = 0;
  clear_has_entity_index();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::entity_index() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.entity_index)
  return entity_index_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_entity_index(::google::protobuf::int32 value) {
  set_has_entity_index();
  entity_index_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.entity_index)
}

// optional int32 channel = 8;
inline bool CSVCMsg_Sounds_sounddata_t::has_channel() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_channel() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_channel() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::channel() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.channel)
  return channel_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.channel)
}

// optional int32 pitch = 9;
inline bool CSVCMsg_Sounds_sounddata_t::has_pitch() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_pitch() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_pitch() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::pitch() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.pitch)
  return pitch_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_pitch(::google::protobuf::int32 value) {
  set_has_pitch();
  pitch_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.pitch)
}

// optional int32 flags = 10;
inline bool CSVCMsg_Sounds_sounddata_t::has_flags() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_flags() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_flags() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::flags() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.flags)
  return flags_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.flags)
}

// optional uint32 sound_num = 11;
inline bool CSVCMsg_Sounds_sounddata_t::has_sound_num() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_sound_num() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_sound_num() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_sound_num() {
  sound_num_ = 0u;
  clear_has_sound_num();
}
inline ::google::protobuf::uint32 CSVCMsg_Sounds_sounddata_t::sound_num() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.sound_num)
  return sound_num_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_sound_num(::google::protobuf::uint32 value) {
  set_has_sound_num();
  sound_num_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.sound_num)
}

// optional fixed32 sound_num_handle = 12;
inline bool CSVCMsg_Sounds_sounddata_t::has_sound_num_handle() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_sound_num_handle() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_sound_num_handle() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_sound_num_handle() {
  sound_num_handle_ = 0u;
  clear_has_sound_num_handle();
}
inline ::google::protobuf::uint32 CSVCMsg_Sounds_sounddata_t::sound_num_handle() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.sound_num_handle)
  return sound_num_handle_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_sound_num_handle(::google::protobuf::uint32 value) {
  set_has_sound_num_handle();
  sound_num_handle_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.sound_num_handle)
}

// optional int32 speaker_entity = 13;
inline bool CSVCMsg_Sounds_sounddata_t::has_speaker_entity() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_speaker_entity() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_speaker_entity() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_speaker_entity() {
  speaker_entity_ = 0;
  clear_has_speaker_entity();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::speaker_entity() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.speaker_entity)
  return speaker_entity_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_speaker_entity(::google::protobuf::int32 value) {
  set_has_speaker_entity();
  speaker_entity_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.speaker_entity)
}

// optional int32 random_seed = 14;
inline bool CSVCMsg_Sounds_sounddata_t::has_random_seed() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_random_seed() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_random_seed() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_random_seed() {
  random_seed_ = 0;
  clear_has_random_seed();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::random_seed() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.random_seed)
  return random_seed_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_random_seed(::google::protobuf::int32 value) {
  set_has_random_seed();
  random_seed_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.random_seed)
}

// optional int32 sound_level = 15;
inline bool CSVCMsg_Sounds_sounddata_t::has_sound_level() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_sound_level() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_sound_level() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_sound_level() {
  sound_level_ = 0;
  clear_has_sound_level();
}
inline ::google::protobuf::int32 CSVCMsg_Sounds_sounddata_t::sound_level() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.sound_level)
  return sound_level_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_sound_level(::google::protobuf::int32 value) {
  set_has_sound_level();
  sound_level_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.sound_level)
}

// optional bool is_sentence = 16;
inline bool CSVCMsg_Sounds_sounddata_t::has_is_sentence() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_is_sentence() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_is_sentence() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_is_sentence() {
  is_sentence_ = false;
  clear_has_is_sentence();
}
inline bool CSVCMsg_Sounds_sounddata_t::is_sentence() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.is_sentence)
  return is_sentence_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_is_sentence(bool value) {
  set_has_is_sentence();
  is_sentence_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.is_sentence)
}

// optional bool is_ambient = 17;
inline bool CSVCMsg_Sounds_sounddata_t::has_is_ambient() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_is_ambient() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_is_ambient() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_is_ambient() {
  is_ambient_ = false;
  clear_has_is_ambient();
}
inline bool CSVCMsg_Sounds_sounddata_t::is_ambient() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.is_ambient)
  return is_ambient_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_is_ambient(bool value) {
  set_has_is_ambient();
  is_ambient_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.is_ambient)
}

// optional uint32 guid = 18;
inline bool CSVCMsg_Sounds_sounddata_t::has_guid() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_guid() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_guid() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_guid() {
  guid_ = 0u;
  clear_has_guid();
}
inline ::google::protobuf::uint32 CSVCMsg_Sounds_sounddata_t::guid() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.guid)
  return guid_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_guid(::google::protobuf::uint32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.guid)
}

// optional fixed64 sound_resource_id = 19;
inline bool CSVCMsg_Sounds_sounddata_t::has_sound_resource_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CSVCMsg_Sounds_sounddata_t::set_has_sound_resource_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_has_sound_resource_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CSVCMsg_Sounds_sounddata_t::clear_sound_resource_id() {
  sound_resource_id_ = GOOGLE_ULONGLONG(0);
  clear_has_sound_resource_id();
}
inline ::google::protobuf::uint64 CSVCMsg_Sounds_sounddata_t::sound_resource_id() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounddata_t.sound_resource_id)
  return sound_resource_id_;
}
inline void CSVCMsg_Sounds_sounddata_t::set_sound_resource_id(::google::protobuf::uint64 value) {
  set_has_sound_resource_id();
  sound_resource_id_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.sounddata_t.sound_resource_id)
}

// -------------------------------------------------------------------

// CSVCMsg_Sounds

// optional bool reliable_sound = 1;
inline bool CSVCMsg_Sounds::has_reliable_sound() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_Sounds::set_has_reliable_sound() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_Sounds::clear_has_reliable_sound() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_Sounds::clear_reliable_sound() {
  reliable_sound_ = false;
  clear_has_reliable_sound();
}
inline bool CSVCMsg_Sounds::reliable_sound() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.reliable_sound)
  return reliable_sound_;
}
inline void CSVCMsg_Sounds::set_reliable_sound(bool value) {
  set_has_reliable_sound();
  reliable_sound_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Sounds.reliable_sound)
}

// repeated .CSVCMsg_Sounds.sounddata_t sounds = 2;
inline int CSVCMsg_Sounds::sounds_size() const {
  return sounds_.size();
}
inline void CSVCMsg_Sounds::clear_sounds() {
  sounds_.Clear();
}
inline const ::CSVCMsg_Sounds_sounddata_t& CSVCMsg_Sounds::sounds(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Sounds.sounds)
  return sounds_.Get(index);
}
inline ::CSVCMsg_Sounds_sounddata_t* CSVCMsg_Sounds::mutable_sounds(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_Sounds.sounds)
  return sounds_.Mutable(index);
}
inline ::CSVCMsg_Sounds_sounddata_t* CSVCMsg_Sounds::add_sounds() {
  // @@protoc_insertion_point(field_add:CSVCMsg_Sounds.sounds)
  return sounds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_Sounds_sounddata_t >&
CSVCMsg_Sounds::sounds() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_Sounds.sounds)
  return sounds_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_Sounds_sounddata_t >*
CSVCMsg_Sounds::mutable_sounds() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_Sounds.sounds)
  return &sounds_;
}

// -------------------------------------------------------------------

// CSVCMsg_Prefetch

// optional int32 sound_index = 1;
inline bool CSVCMsg_Prefetch::has_sound_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_Prefetch::set_has_sound_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_Prefetch::clear_has_sound_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_Prefetch::clear_sound_index() {
  sound_index_ = 0;
  clear_has_sound_index();
}
inline ::google::protobuf::int32 CSVCMsg_Prefetch::sound_index() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Prefetch.sound_index)
  return sound_index_;
}
inline void CSVCMsg_Prefetch::set_sound_index(::google::protobuf::int32 value) {
  set_has_sound_index();
  sound_index_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Prefetch.sound_index)
}

// optional .PrefetchType resource_type = 2 [default = PFT_SOUND];
inline bool CSVCMsg_Prefetch::has_resource_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_Prefetch::set_has_resource_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_Prefetch::clear_has_resource_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_Prefetch::clear_resource_type() {
  resource_type_ = 0;
  clear_has_resource_type();
}
inline ::PrefetchType CSVCMsg_Prefetch::resource_type() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Prefetch.resource_type)
  return static_cast< ::PrefetchType >(resource_type_);
}
inline void CSVCMsg_Prefetch::set_resource_type(::PrefetchType value) {
  assert(::PrefetchType_IsValid(value));
  set_has_resource_type();
  resource_type_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Prefetch.resource_type)
}

// -------------------------------------------------------------------

// CSVCMsg_SetView

// optional int32 entity_index = 1;
inline bool CSVCMsg_SetView::has_entity_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_SetView::set_has_entity_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_SetView::clear_has_entity_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_SetView::clear_entity_index() {
  entity_index_ = 0;
  clear_has_entity_index();
}
inline ::google::protobuf::int32 CSVCMsg_SetView::entity_index() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SetView.entity_index)
  return entity_index_;
}
inline void CSVCMsg_SetView::set_entity_index(::google::protobuf::int32 value) {
  set_has_entity_index();
  entity_index_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SetView.entity_index)
}

// optional int32 slot = 2;
inline bool CSVCMsg_SetView::has_slot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_SetView::set_has_slot() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_SetView::clear_has_slot() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_SetView::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 CSVCMsg_SetView::slot() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SetView.slot)
  return slot_;
}
inline void CSVCMsg_SetView::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SetView.slot)
}

// -------------------------------------------------------------------

// CSVCMsg_FixAngle

// optional bool relative = 1;
inline bool CSVCMsg_FixAngle::has_relative() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_FixAngle::set_has_relative() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_FixAngle::clear_has_relative() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_FixAngle::clear_relative() {
  relative_ = false;
  clear_has_relative();
}
inline bool CSVCMsg_FixAngle::relative() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_FixAngle.relative)
  return relative_;
}
inline void CSVCMsg_FixAngle::set_relative(bool value) {
  set_has_relative();
  relative_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_FixAngle.relative)
}

// optional .CMsgQAngle angle = 2;
inline bool CSVCMsg_FixAngle::has_angle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_FixAngle::set_has_angle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_FixAngle::clear_has_angle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_FixAngle::clear_angle() {
  if (angle_ != NULL) angle_->::CMsgQAngle::Clear();
  clear_has_angle();
}
inline const ::CMsgQAngle& CSVCMsg_FixAngle::angle() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_FixAngle.angle)
  return angle_ != NULL ? *angle_ : *default_instance_->angle_;
}
inline ::CMsgQAngle* CSVCMsg_FixAngle::mutable_angle() {
  set_has_angle();
  if (angle_ == NULL) angle_ = new ::CMsgQAngle;
  // @@protoc_insertion_point(field_mutable:CSVCMsg_FixAngle.angle)
  return angle_;
}
inline ::CMsgQAngle* CSVCMsg_FixAngle::release_angle() {
  clear_has_angle();
  ::CMsgQAngle* temp = angle_;
  angle_ = NULL;
  return temp;
}
inline void CSVCMsg_FixAngle::set_allocated_angle(::CMsgQAngle* angle) {
  delete angle_;
  angle_ = angle;
  if (angle) {
    set_has_angle();
  } else {
    clear_has_angle();
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_FixAngle.angle)
}

// -------------------------------------------------------------------

// CSVCMsg_CrosshairAngle

// optional .CMsgQAngle angle = 1;
inline bool CSVCMsg_CrosshairAngle::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_CrosshairAngle::set_has_angle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_CrosshairAngle::clear_has_angle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_CrosshairAngle::clear_angle() {
  if (angle_ != NULL) angle_->::CMsgQAngle::Clear();
  clear_has_angle();
}
inline const ::CMsgQAngle& CSVCMsg_CrosshairAngle::angle() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CrosshairAngle.angle)
  return angle_ != NULL ? *angle_ : *default_instance_->angle_;
}
inline ::CMsgQAngle* CSVCMsg_CrosshairAngle::mutable_angle() {
  set_has_angle();
  if (angle_ == NULL) angle_ = new ::CMsgQAngle;
  // @@protoc_insertion_point(field_mutable:CSVCMsg_CrosshairAngle.angle)
  return angle_;
}
inline ::CMsgQAngle* CSVCMsg_CrosshairAngle::release_angle() {
  clear_has_angle();
  ::CMsgQAngle* temp = angle_;
  angle_ = NULL;
  return temp;
}
inline void CSVCMsg_CrosshairAngle::set_allocated_angle(::CMsgQAngle* angle) {
  delete angle_;
  angle_ = angle;
  if (angle) {
    set_has_angle();
  } else {
    clear_has_angle();
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_CrosshairAngle.angle)
}

// -------------------------------------------------------------------

// CSVCMsg_BSPDecal

// optional .CMsgVector pos = 1;
inline bool CSVCMsg_BSPDecal::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_BSPDecal::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_BSPDecal::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_BSPDecal::clear_pos() {
  if (pos_ != NULL) pos_->::CMsgVector::Clear();
  clear_has_pos();
}
inline const ::CMsgVector& CSVCMsg_BSPDecal::pos() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_BSPDecal.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::CMsgVector* CSVCMsg_BSPDecal::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::CMsgVector;
  // @@protoc_insertion_point(field_mutable:CSVCMsg_BSPDecal.pos)
  return pos_;
}
inline ::CMsgVector* CSVCMsg_BSPDecal::release_pos() {
  clear_has_pos();
  ::CMsgVector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void CSVCMsg_BSPDecal::set_allocated_pos(::CMsgVector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_BSPDecal.pos)
}

// optional int32 decal_texture_index = 2;
inline bool CSVCMsg_BSPDecal::has_decal_texture_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_BSPDecal::set_has_decal_texture_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_BSPDecal::clear_has_decal_texture_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_BSPDecal::clear_decal_texture_index() {
  decal_texture_index_ = 0;
  clear_has_decal_texture_index();
}
inline ::google::protobuf::int32 CSVCMsg_BSPDecal::decal_texture_index() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_BSPDecal.decal_texture_index)
  return decal_texture_index_;
}
inline void CSVCMsg_BSPDecal::set_decal_texture_index(::google::protobuf::int32 value) {
  set_has_decal_texture_index();
  decal_texture_index_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_BSPDecal.decal_texture_index)
}

// optional int32 entity_index = 3;
inline bool CSVCMsg_BSPDecal::has_entity_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_BSPDecal::set_has_entity_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_BSPDecal::clear_has_entity_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_BSPDecal::clear_entity_index() {
  entity_index_ = 0;
  clear_has_entity_index();
}
inline ::google::protobuf::int32 CSVCMsg_BSPDecal::entity_index() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_BSPDecal.entity_index)
  return entity_index_;
}
inline void CSVCMsg_BSPDecal::set_entity_index(::google::protobuf::int32 value) {
  set_has_entity_index();
  entity_index_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_BSPDecal.entity_index)
}

// optional int32 model_index = 4;
inline bool CSVCMsg_BSPDecal::has_model_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_BSPDecal::set_has_model_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_BSPDecal::clear_has_model_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_BSPDecal::clear_model_index() {
  model_index_ = 0;
  clear_has_model_index();
}
inline ::google::protobuf::int32 CSVCMsg_BSPDecal::model_index() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_BSPDecal.model_index)
  return model_index_;
}
inline void CSVCMsg_BSPDecal::set_model_index(::google::protobuf::int32 value) {
  set_has_model_index();
  model_index_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_BSPDecal.model_index)
}

// optional bool low_priority = 5;
inline bool CSVCMsg_BSPDecal::has_low_priority() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_BSPDecal::set_has_low_priority() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_BSPDecal::clear_has_low_priority() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_BSPDecal::clear_low_priority() {
  low_priority_ = false;
  clear_has_low_priority();
}
inline bool CSVCMsg_BSPDecal::low_priority() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_BSPDecal.low_priority)
  return low_priority_;
}
inline void CSVCMsg_BSPDecal::set_low_priority(bool value) {
  set_has_low_priority();
  low_priority_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_BSPDecal.low_priority)
}

// -------------------------------------------------------------------

// CSVCMsg_SplitScreen

// optional .ESplitScreenMessageType type = 1 [default = MSG_SPLITSCREEN_ADDUSER];
inline bool CSVCMsg_SplitScreen::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_SplitScreen::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_SplitScreen::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_SplitScreen::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::ESplitScreenMessageType CSVCMsg_SplitScreen::type() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SplitScreen.type)
  return static_cast< ::ESplitScreenMessageType >(type_);
}
inline void CSVCMsg_SplitScreen::set_type(::ESplitScreenMessageType value) {
  assert(::ESplitScreenMessageType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SplitScreen.type)
}

// optional int32 slot = 2;
inline bool CSVCMsg_SplitScreen::has_slot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_SplitScreen::set_has_slot() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_SplitScreen::clear_has_slot() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_SplitScreen::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 CSVCMsg_SplitScreen::slot() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SplitScreen.slot)
  return slot_;
}
inline void CSVCMsg_SplitScreen::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SplitScreen.slot)
}

// optional int32 player_index = 3;
inline bool CSVCMsg_SplitScreen::has_player_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_SplitScreen::set_has_player_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_SplitScreen::clear_has_player_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_SplitScreen::clear_player_index() {
  player_index_ = 0;
  clear_has_player_index();
}
inline ::google::protobuf::int32 CSVCMsg_SplitScreen::player_index() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SplitScreen.player_index)
  return player_index_;
}
inline void CSVCMsg_SplitScreen::set_player_index(::google::protobuf::int32 value) {
  set_has_player_index();
  player_index_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SplitScreen.player_index)
}

// -------------------------------------------------------------------

// CSVCMsg_GetCvarValue

// optional int32 cookie = 1;
inline bool CSVCMsg_GetCvarValue::has_cookie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GetCvarValue::set_has_cookie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_GetCvarValue::clear_has_cookie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_GetCvarValue::clear_cookie() {
  cookie_ = 0;
  clear_has_cookie();
}
inline ::google::protobuf::int32 CSVCMsg_GetCvarValue::cookie() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GetCvarValue.cookie)
  return cookie_;
}
inline void CSVCMsg_GetCvarValue::set_cookie(::google::protobuf::int32 value) {
  set_has_cookie();
  cookie_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GetCvarValue.cookie)
}

// optional string cvar_name = 2;
inline bool CSVCMsg_GetCvarValue::has_cvar_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GetCvarValue::set_has_cvar_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_GetCvarValue::clear_has_cvar_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_GetCvarValue::clear_cvar_name() {
  if (cvar_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cvar_name_->clear();
  }
  clear_has_cvar_name();
}
inline const ::std::string& CSVCMsg_GetCvarValue::cvar_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GetCvarValue.cvar_name)
  return *cvar_name_;
}
inline void CSVCMsg_GetCvarValue::set_cvar_name(const ::std::string& value) {
  set_has_cvar_name();
  if (cvar_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cvar_name_ = new ::std::string;
  }
  cvar_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GetCvarValue.cvar_name)
}
inline void CSVCMsg_GetCvarValue::set_cvar_name(const char* value) {
  set_has_cvar_name();
  if (cvar_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cvar_name_ = new ::std::string;
  }
  cvar_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GetCvarValue.cvar_name)
}
inline void CSVCMsg_GetCvarValue::set_cvar_name(const char* value, size_t size) {
  set_has_cvar_name();
  if (cvar_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cvar_name_ = new ::std::string;
  }
  cvar_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GetCvarValue.cvar_name)
}
inline ::std::string* CSVCMsg_GetCvarValue::mutable_cvar_name() {
  set_has_cvar_name();
  if (cvar_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cvar_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GetCvarValue.cvar_name)
  return cvar_name_;
}
inline ::std::string* CSVCMsg_GetCvarValue::release_cvar_name() {
  clear_has_cvar_name();
  if (cvar_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = cvar_name_;
    cvar_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_GetCvarValue::set_allocated_cvar_name(::std::string* cvar_name) {
  if (cvar_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cvar_name_;
  }
  if (cvar_name) {
    set_has_cvar_name();
    cvar_name_ = cvar_name;
  } else {
    clear_has_cvar_name();
    cvar_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GetCvarValue.cvar_name)
}

// -------------------------------------------------------------------

// CSVCMsg_Menu

// optional int32 dialog_type = 1;
inline bool CSVCMsg_Menu::has_dialog_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_Menu::set_has_dialog_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_Menu::clear_has_dialog_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_Menu::clear_dialog_type() {
  dialog_type_ = 0;
  clear_has_dialog_type();
}
inline ::google::protobuf::int32 CSVCMsg_Menu::dialog_type() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Menu.dialog_type)
  return dialog_type_;
}
inline void CSVCMsg_Menu::set_dialog_type(::google::protobuf::int32 value) {
  set_has_dialog_type();
  dialog_type_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_Menu.dialog_type)
}

// optional bytes menu_key_values = 2;
inline bool CSVCMsg_Menu::has_menu_key_values() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_Menu::set_has_menu_key_values() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_Menu::clear_has_menu_key_values() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_Menu::clear_menu_key_values() {
  if (menu_key_values_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    menu_key_values_->clear();
  }
  clear_has_menu_key_values();
}
inline const ::std::string& CSVCMsg_Menu::menu_key_values() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_Menu.menu_key_values)
  return *menu_key_values_;
}
inline void CSVCMsg_Menu::set_menu_key_values(const ::std::string& value) {
  set_has_menu_key_values();
  if (menu_key_values_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    menu_key_values_ = new ::std::string;
  }
  menu_key_values_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_Menu.menu_key_values)
}
inline void CSVCMsg_Menu::set_menu_key_values(const char* value) {
  set_has_menu_key_values();
  if (menu_key_values_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    menu_key_values_ = new ::std::string;
  }
  menu_key_values_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_Menu.menu_key_values)
}
inline void CSVCMsg_Menu::set_menu_key_values(const void* value, size_t size) {
  set_has_menu_key_values();
  if (menu_key_values_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    menu_key_values_ = new ::std::string;
  }
  menu_key_values_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_Menu.menu_key_values)
}
inline ::std::string* CSVCMsg_Menu::mutable_menu_key_values() {
  set_has_menu_key_values();
  if (menu_key_values_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    menu_key_values_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_Menu.menu_key_values)
  return menu_key_values_;
}
inline ::std::string* CSVCMsg_Menu::release_menu_key_values() {
  clear_has_menu_key_values();
  if (menu_key_values_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = menu_key_values_;
    menu_key_values_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_Menu::set_allocated_menu_key_values(::std::string* menu_key_values) {
  if (menu_key_values_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete menu_key_values_;
  }
  if (menu_key_values) {
    set_has_menu_key_values();
    menu_key_values_ = menu_key_values;
  } else {
    clear_has_menu_key_values();
    menu_key_values_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_Menu.menu_key_values)
}

// -------------------------------------------------------------------

// CSVCMsg_SendTable_sendprop_t

// optional int32 type = 1;
inline bool CSVCMsg_SendTable_sendprop_t::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CSVCMsg_SendTable_sendprop_t::type() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.type)
  return type_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.type)
}

// optional string var_name = 2;
inline bool CSVCMsg_SendTable_sendprop_t::has_var_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_var_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_var_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_var_name() {
  if (var_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    var_name_->clear();
  }
  clear_has_var_name();
}
inline const ::std::string& CSVCMsg_SendTable_sendprop_t::var_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.var_name)
  return *var_name_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_var_name(const ::std::string& value) {
  set_has_var_name();
  if (var_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    var_name_ = new ::std::string;
  }
  var_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.var_name)
}
inline void CSVCMsg_SendTable_sendprop_t::set_var_name(const char* value) {
  set_has_var_name();
  if (var_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    var_name_ = new ::std::string;
  }
  var_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_SendTable.sendprop_t.var_name)
}
inline void CSVCMsg_SendTable_sendprop_t::set_var_name(const char* value, size_t size) {
  set_has_var_name();
  if (var_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    var_name_ = new ::std::string;
  }
  var_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_SendTable.sendprop_t.var_name)
}
inline ::std::string* CSVCMsg_SendTable_sendprop_t::mutable_var_name() {
  set_has_var_name();
  if (var_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    var_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_SendTable.sendprop_t.var_name)
  return var_name_;
}
inline ::std::string* CSVCMsg_SendTable_sendprop_t::release_var_name() {
  clear_has_var_name();
  if (var_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = var_name_;
    var_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_SendTable_sendprop_t::set_allocated_var_name(::std::string* var_name) {
  if (var_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete var_name_;
  }
  if (var_name) {
    set_has_var_name();
    var_name_ = var_name;
  } else {
    clear_has_var_name();
    var_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_SendTable.sendprop_t.var_name)
}

// optional int32 flags = 3;
inline bool CSVCMsg_SendTable_sendprop_t::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 CSVCMsg_SendTable_sendprop_t::flags() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.flags)
  return flags_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.flags)
}

// optional int32 priority = 4;
inline bool CSVCMsg_SendTable_sendprop_t::has_priority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_priority() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_priority() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_priority() {
  priority_ = 0;
  clear_has_priority();
}
inline ::google::protobuf::int32 CSVCMsg_SendTable_sendprop_t::priority() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.priority)
  return priority_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_priority(::google::protobuf::int32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.priority)
}

// optional string dt_name = 5;
inline bool CSVCMsg_SendTable_sendprop_t::has_dt_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_dt_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_dt_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_dt_name() {
  if (dt_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dt_name_->clear();
  }
  clear_has_dt_name();
}
inline const ::std::string& CSVCMsg_SendTable_sendprop_t::dt_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.dt_name)
  return *dt_name_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_dt_name(const ::std::string& value) {
  set_has_dt_name();
  if (dt_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dt_name_ = new ::std::string;
  }
  dt_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.dt_name)
}
inline void CSVCMsg_SendTable_sendprop_t::set_dt_name(const char* value) {
  set_has_dt_name();
  if (dt_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dt_name_ = new ::std::string;
  }
  dt_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_SendTable.sendprop_t.dt_name)
}
inline void CSVCMsg_SendTable_sendprop_t::set_dt_name(const char* value, size_t size) {
  set_has_dt_name();
  if (dt_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dt_name_ = new ::std::string;
  }
  dt_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_SendTable.sendprop_t.dt_name)
}
inline ::std::string* CSVCMsg_SendTable_sendprop_t::mutable_dt_name() {
  set_has_dt_name();
  if (dt_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dt_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_SendTable.sendprop_t.dt_name)
  return dt_name_;
}
inline ::std::string* CSVCMsg_SendTable_sendprop_t::release_dt_name() {
  clear_has_dt_name();
  if (dt_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dt_name_;
    dt_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_SendTable_sendprop_t::set_allocated_dt_name(::std::string* dt_name) {
  if (dt_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dt_name_;
  }
  if (dt_name) {
    set_has_dt_name();
    dt_name_ = dt_name;
  } else {
    clear_has_dt_name();
    dt_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_SendTable.sendprop_t.dt_name)
}

// optional int32 num_elements = 6;
inline bool CSVCMsg_SendTable_sendprop_t::has_num_elements() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_num_elements() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_num_elements() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_num_elements() {
  num_elements_ = 0;
  clear_has_num_elements();
}
inline ::google::protobuf::int32 CSVCMsg_SendTable_sendprop_t::num_elements() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.num_elements)
  return num_elements_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_num_elements(::google::protobuf::int32 value) {
  set_has_num_elements();
  num_elements_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.num_elements)
}

// optional float low_value = 7;
inline bool CSVCMsg_SendTable_sendprop_t::has_low_value() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_low_value() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_low_value() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_low_value() {
  low_value_ = 0;
  clear_has_low_value();
}
inline float CSVCMsg_SendTable_sendprop_t::low_value() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.low_value)
  return low_value_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_low_value(float value) {
  set_has_low_value();
  low_value_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.low_value)
}

// optional float high_value = 8;
inline bool CSVCMsg_SendTable_sendprop_t::has_high_value() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_high_value() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_high_value() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_high_value() {
  high_value_ = 0;
  clear_has_high_value();
}
inline float CSVCMsg_SendTable_sendprop_t::high_value() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.high_value)
  return high_value_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_high_value(float value) {
  set_has_high_value();
  high_value_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.high_value)
}

// optional int32 num_bits = 9;
inline bool CSVCMsg_SendTable_sendprop_t::has_num_bits() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSVCMsg_SendTable_sendprop_t::set_has_num_bits() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_has_num_bits() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSVCMsg_SendTable_sendprop_t::clear_num_bits() {
  num_bits_ = 0;
  clear_has_num_bits();
}
inline ::google::protobuf::int32 CSVCMsg_SendTable_sendprop_t::num_bits() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.sendprop_t.num_bits)
  return num_bits_;
}
inline void CSVCMsg_SendTable_sendprop_t::set_num_bits(::google::protobuf::int32 value) {
  set_has_num_bits();
  num_bits_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.sendprop_t.num_bits)
}

// -------------------------------------------------------------------

// CSVCMsg_SendTable

// optional bool is_end = 1;
inline bool CSVCMsg_SendTable::has_is_end() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_SendTable::set_has_is_end() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_SendTable::clear_has_is_end() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_SendTable::clear_is_end() {
  is_end_ = false;
  clear_has_is_end();
}
inline bool CSVCMsg_SendTable::is_end() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.is_end)
  return is_end_;
}
inline void CSVCMsg_SendTable::set_is_end(bool value) {
  set_has_is_end();
  is_end_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.is_end)
}

// optional string net_table_name = 2;
inline bool CSVCMsg_SendTable::has_net_table_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_SendTable::set_has_net_table_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_SendTable::clear_has_net_table_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_SendTable::clear_net_table_name() {
  if (net_table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    net_table_name_->clear();
  }
  clear_has_net_table_name();
}
inline const ::std::string& CSVCMsg_SendTable::net_table_name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.net_table_name)
  return *net_table_name_;
}
inline void CSVCMsg_SendTable::set_net_table_name(const ::std::string& value) {
  set_has_net_table_name();
  if (net_table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    net_table_name_ = new ::std::string;
  }
  net_table_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.net_table_name)
}
inline void CSVCMsg_SendTable::set_net_table_name(const char* value) {
  set_has_net_table_name();
  if (net_table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    net_table_name_ = new ::std::string;
  }
  net_table_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_SendTable.net_table_name)
}
inline void CSVCMsg_SendTable::set_net_table_name(const char* value, size_t size) {
  set_has_net_table_name();
  if (net_table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    net_table_name_ = new ::std::string;
  }
  net_table_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_SendTable.net_table_name)
}
inline ::std::string* CSVCMsg_SendTable::mutable_net_table_name() {
  set_has_net_table_name();
  if (net_table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    net_table_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_SendTable.net_table_name)
  return net_table_name_;
}
inline ::std::string* CSVCMsg_SendTable::release_net_table_name() {
  clear_has_net_table_name();
  if (net_table_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = net_table_name_;
    net_table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_SendTable::set_allocated_net_table_name(::std::string* net_table_name) {
  if (net_table_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete net_table_name_;
  }
  if (net_table_name) {
    set_has_net_table_name();
    net_table_name_ = net_table_name;
  } else {
    clear_has_net_table_name();
    net_table_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_SendTable.net_table_name)
}

// optional bool needs_decoder = 3;
inline bool CSVCMsg_SendTable::has_needs_decoder() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_SendTable::set_has_needs_decoder() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_SendTable::clear_has_needs_decoder() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_SendTable::clear_needs_decoder() {
  needs_decoder_ = false;
  clear_has_needs_decoder();
}
inline bool CSVCMsg_SendTable::needs_decoder() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.needs_decoder)
  return needs_decoder_;
}
inline void CSVCMsg_SendTable::set_needs_decoder(bool value) {
  set_has_needs_decoder();
  needs_decoder_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_SendTable.needs_decoder)
}

// repeated .CSVCMsg_SendTable.sendprop_t props = 4;
inline int CSVCMsg_SendTable::props_size() const {
  return props_.size();
}
inline void CSVCMsg_SendTable::clear_props() {
  props_.Clear();
}
inline const ::CSVCMsg_SendTable_sendprop_t& CSVCMsg_SendTable::props(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_SendTable.props)
  return props_.Get(index);
}
inline ::CSVCMsg_SendTable_sendprop_t* CSVCMsg_SendTable::mutable_props(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_SendTable.props)
  return props_.Mutable(index);
}
inline ::CSVCMsg_SendTable_sendprop_t* CSVCMsg_SendTable::add_props() {
  // @@protoc_insertion_point(field_add:CSVCMsg_SendTable.props)
  return props_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_SendTable_sendprop_t >&
CSVCMsg_SendTable::props() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_SendTable.props)
  return props_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_SendTable_sendprop_t >*
CSVCMsg_SendTable::mutable_props() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_SendTable.props)
  return &props_;
}

// -------------------------------------------------------------------

// CSVCMsg_GameEventList_key_t

// optional int32 type = 1;
inline bool CSVCMsg_GameEventList_key_t::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GameEventList_key_t::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_GameEventList_key_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_GameEventList_key_t::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CSVCMsg_GameEventList_key_t::type() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEventList.key_t.type)
  return type_;
}
inline void CSVCMsg_GameEventList_key_t::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEventList.key_t.type)
}

// optional string name = 2;
inline bool CSVCMsg_GameEventList_key_t::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GameEventList_key_t::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_GameEventList_key_t::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_GameEventList_key_t::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSVCMsg_GameEventList_key_t::name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEventList.key_t.name)
  return *name_;
}
inline void CSVCMsg_GameEventList_key_t::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEventList.key_t.name)
}
inline void CSVCMsg_GameEventList_key_t::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GameEventList.key_t.name)
}
inline void CSVCMsg_GameEventList_key_t::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GameEventList.key_t.name)
}
inline ::std::string* CSVCMsg_GameEventList_key_t::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameEventList.key_t.name)
  return name_;
}
inline ::std::string* CSVCMsg_GameEventList_key_t::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_GameEventList_key_t::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GameEventList.key_t.name)
}

// -------------------------------------------------------------------

// CSVCMsg_GameEventList_descriptor_t

// optional int32 eventid = 1;
inline bool CSVCMsg_GameEventList_descriptor_t::has_eventid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_GameEventList_descriptor_t::set_has_eventid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_GameEventList_descriptor_t::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_GameEventList_descriptor_t::clear_eventid() {
  eventid_ = 0;
  clear_has_eventid();
}
inline ::google::protobuf::int32 CSVCMsg_GameEventList_descriptor_t::eventid() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEventList.descriptor_t.eventid)
  return eventid_;
}
inline void CSVCMsg_GameEventList_descriptor_t::set_eventid(::google::protobuf::int32 value) {
  set_has_eventid();
  eventid_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEventList.descriptor_t.eventid)
}

// optional string name = 2;
inline bool CSVCMsg_GameEventList_descriptor_t::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_GameEventList_descriptor_t::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_GameEventList_descriptor_t::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_GameEventList_descriptor_t::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSVCMsg_GameEventList_descriptor_t::name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEventList.descriptor_t.name)
  return *name_;
}
inline void CSVCMsg_GameEventList_descriptor_t::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_GameEventList.descriptor_t.name)
}
inline void CSVCMsg_GameEventList_descriptor_t::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_GameEventList.descriptor_t.name)
}
inline void CSVCMsg_GameEventList_descriptor_t::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_GameEventList.descriptor_t.name)
}
inline ::std::string* CSVCMsg_GameEventList_descriptor_t::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameEventList.descriptor_t.name)
  return name_;
}
inline ::std::string* CSVCMsg_GameEventList_descriptor_t::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_GameEventList_descriptor_t::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_GameEventList.descriptor_t.name)
}

// repeated .CSVCMsg_GameEventList.key_t keys = 3;
inline int CSVCMsg_GameEventList_descriptor_t::keys_size() const {
  return keys_.size();
}
inline void CSVCMsg_GameEventList_descriptor_t::clear_keys() {
  keys_.Clear();
}
inline const ::CSVCMsg_GameEventList_key_t& CSVCMsg_GameEventList_descriptor_t::keys(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEventList.descriptor_t.keys)
  return keys_.Get(index);
}
inline ::CSVCMsg_GameEventList_key_t* CSVCMsg_GameEventList_descriptor_t::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameEventList.descriptor_t.keys)
  return keys_.Mutable(index);
}
inline ::CSVCMsg_GameEventList_key_t* CSVCMsg_GameEventList_descriptor_t::add_keys() {
  // @@protoc_insertion_point(field_add:CSVCMsg_GameEventList.descriptor_t.keys)
  return keys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_key_t >&
CSVCMsg_GameEventList_descriptor_t::keys() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_GameEventList.descriptor_t.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_key_t >*
CSVCMsg_GameEventList_descriptor_t::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_GameEventList.descriptor_t.keys)
  return &keys_;
}

// -------------------------------------------------------------------

// CSVCMsg_GameEventList

// repeated .CSVCMsg_GameEventList.descriptor_t descriptors = 1;
inline int CSVCMsg_GameEventList::descriptors_size() const {
  return descriptors_.size();
}
inline void CSVCMsg_GameEventList::clear_descriptors() {
  descriptors_.Clear();
}
inline const ::CSVCMsg_GameEventList_descriptor_t& CSVCMsg_GameEventList::descriptors(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_GameEventList.descriptors)
  return descriptors_.Get(index);
}
inline ::CSVCMsg_GameEventList_descriptor_t* CSVCMsg_GameEventList::mutable_descriptors(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_GameEventList.descriptors)
  return descriptors_.Mutable(index);
}
inline ::CSVCMsg_GameEventList_descriptor_t* CSVCMsg_GameEventList::add_descriptors() {
  // @@protoc_insertion_point(field_add:CSVCMsg_GameEventList.descriptors)
  return descriptors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_descriptor_t >&
CSVCMsg_GameEventList::descriptors() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_GameEventList.descriptors)
  return descriptors_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSVCMsg_GameEventList_descriptor_t >*
CSVCMsg_GameEventList::mutable_descriptors() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_GameEventList.descriptors)
  return &descriptors_;
}

// -------------------------------------------------------------------

// CSVCMsg_PacketEntities

// optional int32 max_entries = 1;
inline bool CSVCMsg_PacketEntities::has_max_entries() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_max_entries() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_PacketEntities::clear_has_max_entries() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_PacketEntities::clear_max_entries() {
  max_entries_ = 0;
  clear_has_max_entries();
}
inline ::google::protobuf::int32 CSVCMsg_PacketEntities::max_entries() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.max_entries)
  return max_entries_;
}
inline void CSVCMsg_PacketEntities::set_max_entries(::google::protobuf::int32 value) {
  set_has_max_entries();
  max_entries_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.max_entries)
}

// optional int32 updated_entries = 2;
inline bool CSVCMsg_PacketEntities::has_updated_entries() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_updated_entries() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_PacketEntities::clear_has_updated_entries() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_PacketEntities::clear_updated_entries() {
  updated_entries_ = 0;
  clear_has_updated_entries();
}
inline ::google::protobuf::int32 CSVCMsg_PacketEntities::updated_entries() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.updated_entries)
  return updated_entries_;
}
inline void CSVCMsg_PacketEntities::set_updated_entries(::google::protobuf::int32 value) {
  set_has_updated_entries();
  updated_entries_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.updated_entries)
}

// optional bool is_delta = 3;
inline bool CSVCMsg_PacketEntities::has_is_delta() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_is_delta() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_PacketEntities::clear_has_is_delta() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_PacketEntities::clear_is_delta() {
  is_delta_ = false;
  clear_has_is_delta();
}
inline bool CSVCMsg_PacketEntities::is_delta() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.is_delta)
  return is_delta_;
}
inline void CSVCMsg_PacketEntities::set_is_delta(bool value) {
  set_has_is_delta();
  is_delta_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.is_delta)
}

// optional bool update_baseline = 4;
inline bool CSVCMsg_PacketEntities::has_update_baseline() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_update_baseline() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_PacketEntities::clear_has_update_baseline() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_PacketEntities::clear_update_baseline() {
  update_baseline_ = false;
  clear_has_update_baseline();
}
inline bool CSVCMsg_PacketEntities::update_baseline() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.update_baseline)
  return update_baseline_;
}
inline void CSVCMsg_PacketEntities::set_update_baseline(bool value) {
  set_has_update_baseline();
  update_baseline_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.update_baseline)
}

// optional int32 baseline = 5;
inline bool CSVCMsg_PacketEntities::has_baseline() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_baseline() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_PacketEntities::clear_has_baseline() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_PacketEntities::clear_baseline() {
  baseline_ = 0;
  clear_has_baseline();
}
inline ::google::protobuf::int32 CSVCMsg_PacketEntities::baseline() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.baseline)
  return baseline_;
}
inline void CSVCMsg_PacketEntities::set_baseline(::google::protobuf::int32 value) {
  set_has_baseline();
  baseline_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.baseline)
}

// optional int32 delta_from = 6;
inline bool CSVCMsg_PacketEntities::has_delta_from() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_delta_from() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSVCMsg_PacketEntities::clear_has_delta_from() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSVCMsg_PacketEntities::clear_delta_from() {
  delta_from_ = 0;
  clear_has_delta_from();
}
inline ::google::protobuf::int32 CSVCMsg_PacketEntities::delta_from() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.delta_from)
  return delta_from_;
}
inline void CSVCMsg_PacketEntities::set_delta_from(::google::protobuf::int32 value) {
  set_has_delta_from();
  delta_from_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.delta_from)
}

// optional bytes entity_data = 7;
inline bool CSVCMsg_PacketEntities::has_entity_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_entity_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSVCMsg_PacketEntities::clear_has_entity_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSVCMsg_PacketEntities::clear_entity_data() {
  if (entity_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    entity_data_->clear();
  }
  clear_has_entity_data();
}
inline const ::std::string& CSVCMsg_PacketEntities::entity_data() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.entity_data)
  return *entity_data_;
}
inline void CSVCMsg_PacketEntities::set_entity_data(const ::std::string& value) {
  set_has_entity_data();
  if (entity_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    entity_data_ = new ::std::string;
  }
  entity_data_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.entity_data)
}
inline void CSVCMsg_PacketEntities::set_entity_data(const char* value) {
  set_has_entity_data();
  if (entity_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    entity_data_ = new ::std::string;
  }
  entity_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_PacketEntities.entity_data)
}
inline void CSVCMsg_PacketEntities::set_entity_data(const void* value, size_t size) {
  set_has_entity_data();
  if (entity_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    entity_data_ = new ::std::string;
  }
  entity_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_PacketEntities.entity_data)
}
inline ::std::string* CSVCMsg_PacketEntities::mutable_entity_data() {
  set_has_entity_data();
  if (entity_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    entity_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_PacketEntities.entity_data)
  return entity_data_;
}
inline ::std::string* CSVCMsg_PacketEntities::release_entity_data() {
  clear_has_entity_data();
  if (entity_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = entity_data_;
    entity_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_PacketEntities::set_allocated_entity_data(::std::string* entity_data) {
  if (entity_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete entity_data_;
  }
  if (entity_data) {
    set_has_entity_data();
    entity_data_ = entity_data;
  } else {
    clear_has_entity_data();
    entity_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_PacketEntities.entity_data)
}

// optional bool pending_full_frame = 8;
inline bool CSVCMsg_PacketEntities::has_pending_full_frame() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_pending_full_frame() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSVCMsg_PacketEntities::clear_has_pending_full_frame() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSVCMsg_PacketEntities::clear_pending_full_frame() {
  pending_full_frame_ = false;
  clear_has_pending_full_frame();
}
inline bool CSVCMsg_PacketEntities::pending_full_frame() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.pending_full_frame)
  return pending_full_frame_;
}
inline void CSVCMsg_PacketEntities::set_pending_full_frame(bool value) {
  set_has_pending_full_frame();
  pending_full_frame_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.pending_full_frame)
}

// optional uint32 active_spawngroup_handle = 9;
inline bool CSVCMsg_PacketEntities::has_active_spawngroup_handle() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_active_spawngroup_handle() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSVCMsg_PacketEntities::clear_has_active_spawngroup_handle() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSVCMsg_PacketEntities::clear_active_spawngroup_handle() {
  active_spawngroup_handle_ = 0u;
  clear_has_active_spawngroup_handle();
}
inline ::google::protobuf::uint32 CSVCMsg_PacketEntities::active_spawngroup_handle() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.active_spawngroup_handle)
  return active_spawngroup_handle_;
}
inline void CSVCMsg_PacketEntities::set_active_spawngroup_handle(::google::protobuf::uint32 value) {
  set_has_active_spawngroup_handle();
  active_spawngroup_handle_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.active_spawngroup_handle)
}

// optional uint32 max_spawngroup_creationsequence = 10;
inline bool CSVCMsg_PacketEntities::has_max_spawngroup_creationsequence() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSVCMsg_PacketEntities::set_has_max_spawngroup_creationsequence() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSVCMsg_PacketEntities::clear_has_max_spawngroup_creationsequence() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSVCMsg_PacketEntities::clear_max_spawngroup_creationsequence() {
  max_spawngroup_creationsequence_ = 0u;
  clear_has_max_spawngroup_creationsequence();
}
inline ::google::protobuf::uint32 CSVCMsg_PacketEntities::max_spawngroup_creationsequence() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketEntities.max_spawngroup_creationsequence)
  return max_spawngroup_creationsequence_;
}
inline void CSVCMsg_PacketEntities::set_max_spawngroup_creationsequence(::google::protobuf::uint32 value) {
  set_has_max_spawngroup_creationsequence();
  max_spawngroup_creationsequence_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketEntities.max_spawngroup_creationsequence)
}

// -------------------------------------------------------------------

// CSVCMsg_TempEntities

// optional bool reliable = 1;
inline bool CSVCMsg_TempEntities::has_reliable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_TempEntities::set_has_reliable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_TempEntities::clear_has_reliable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_TempEntities::clear_reliable() {
  reliable_ = false;
  clear_has_reliable();
}
inline bool CSVCMsg_TempEntities::reliable() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_TempEntities.reliable)
  return reliable_;
}
inline void CSVCMsg_TempEntities::set_reliable(bool value) {
  set_has_reliable();
  reliable_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_TempEntities.reliable)
}

// optional int32 num_entries = 2;
inline bool CSVCMsg_TempEntities::has_num_entries() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_TempEntities::set_has_num_entries() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_TempEntities::clear_has_num_entries() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_TempEntities::clear_num_entries() {
  num_entries_ = 0;
  clear_has_num_entries();
}
inline ::google::protobuf::int32 CSVCMsg_TempEntities::num_entries() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_TempEntities.num_entries)
  return num_entries_;
}
inline void CSVCMsg_TempEntities::set_num_entries(::google::protobuf::int32 value) {
  set_has_num_entries();
  num_entries_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_TempEntities.num_entries)
}

// optional bytes entity_data = 3;
inline bool CSVCMsg_TempEntities::has_entity_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_TempEntities::set_has_entity_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_TempEntities::clear_has_entity_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_TempEntities::clear_entity_data() {
  if (entity_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    entity_data_->clear();
  }
  clear_has_entity_data();
}
inline const ::std::string& CSVCMsg_TempEntities::entity_data() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_TempEntities.entity_data)
  return *entity_data_;
}
inline void CSVCMsg_TempEntities::set_entity_data(const ::std::string& value) {
  set_has_entity_data();
  if (entity_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    entity_data_ = new ::std::string;
  }
  entity_data_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_TempEntities.entity_data)
}
inline void CSVCMsg_TempEntities::set_entity_data(const char* value) {
  set_has_entity_data();
  if (entity_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    entity_data_ = new ::std::string;
  }
  entity_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_TempEntities.entity_data)
}
inline void CSVCMsg_TempEntities::set_entity_data(const void* value, size_t size) {
  set_has_entity_data();
  if (entity_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    entity_data_ = new ::std::string;
  }
  entity_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_TempEntities.entity_data)
}
inline ::std::string* CSVCMsg_TempEntities::mutable_entity_data() {
  set_has_entity_data();
  if (entity_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    entity_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_TempEntities.entity_data)
  return entity_data_;
}
inline ::std::string* CSVCMsg_TempEntities::release_entity_data() {
  clear_has_entity_data();
  if (entity_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = entity_data_;
    entity_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_TempEntities::set_allocated_entity_data(::std::string* entity_data) {
  if (entity_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete entity_data_;
  }
  if (entity_data) {
    set_has_entity_data();
    entity_data_ = entity_data;
  } else {
    clear_has_entity_data();
    entity_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_TempEntities.entity_data)
}

// -------------------------------------------------------------------

// CSVCMsg_CreateStringTable

// optional string name = 1;
inline bool CSVCMsg_CreateStringTable::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_CreateStringTable::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_CreateStringTable::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSVCMsg_CreateStringTable::name() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.name)
  return *name_;
}
inline void CSVCMsg_CreateStringTable::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.name)
}
inline void CSVCMsg_CreateStringTable::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_CreateStringTable.name)
}
inline void CSVCMsg_CreateStringTable::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_CreateStringTable.name)
}
inline ::std::string* CSVCMsg_CreateStringTable::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_CreateStringTable.name)
  return name_;
}
inline ::std::string* CSVCMsg_CreateStringTable::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_CreateStringTable::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_CreateStringTable.name)
}

// optional int32 num_entries = 2;
inline bool CSVCMsg_CreateStringTable::has_num_entries() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_num_entries() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_CreateStringTable::clear_has_num_entries() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_CreateStringTable::clear_num_entries() {
  num_entries_ = 0;
  clear_has_num_entries();
}
inline ::google::protobuf::int32 CSVCMsg_CreateStringTable::num_entries() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.num_entries)
  return num_entries_;
}
inline void CSVCMsg_CreateStringTable::set_num_entries(::google::protobuf::int32 value) {
  set_has_num_entries();
  num_entries_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.num_entries)
}

// optional bool user_data_fixed_size = 3;
inline bool CSVCMsg_CreateStringTable::has_user_data_fixed_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_user_data_fixed_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_CreateStringTable::clear_has_user_data_fixed_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_CreateStringTable::clear_user_data_fixed_size() {
  user_data_fixed_size_ = false;
  clear_has_user_data_fixed_size();
}
inline bool CSVCMsg_CreateStringTable::user_data_fixed_size() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.user_data_fixed_size)
  return user_data_fixed_size_;
}
inline void CSVCMsg_CreateStringTable::set_user_data_fixed_size(bool value) {
  set_has_user_data_fixed_size();
  user_data_fixed_size_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.user_data_fixed_size)
}

// optional int32 user_data_size = 4;
inline bool CSVCMsg_CreateStringTable::has_user_data_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_user_data_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_CreateStringTable::clear_has_user_data_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_CreateStringTable::clear_user_data_size() {
  user_data_size_ = 0;
  clear_has_user_data_size();
}
inline ::google::protobuf::int32 CSVCMsg_CreateStringTable::user_data_size() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.user_data_size)
  return user_data_size_;
}
inline void CSVCMsg_CreateStringTable::set_user_data_size(::google::protobuf::int32 value) {
  set_has_user_data_size();
  user_data_size_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.user_data_size)
}

// optional int32 user_data_size_bits = 5;
inline bool CSVCMsg_CreateStringTable::has_user_data_size_bits() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_user_data_size_bits() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_CreateStringTable::clear_has_user_data_size_bits() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_CreateStringTable::clear_user_data_size_bits() {
  user_data_size_bits_ = 0;
  clear_has_user_data_size_bits();
}
inline ::google::protobuf::int32 CSVCMsg_CreateStringTable::user_data_size_bits() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.user_data_size_bits)
  return user_data_size_bits_;
}
inline void CSVCMsg_CreateStringTable::set_user_data_size_bits(::google::protobuf::int32 value) {
  set_has_user_data_size_bits();
  user_data_size_bits_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.user_data_size_bits)
}

// optional int32 flags = 6;
inline bool CSVCMsg_CreateStringTable::has_flags() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_flags() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSVCMsg_CreateStringTable::clear_has_flags() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSVCMsg_CreateStringTable::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 CSVCMsg_CreateStringTable::flags() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.flags)
  return flags_;
}
inline void CSVCMsg_CreateStringTable::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.flags)
}

// optional bytes string_data = 7;
inline bool CSVCMsg_CreateStringTable::has_string_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_string_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSVCMsg_CreateStringTable::clear_has_string_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSVCMsg_CreateStringTable::clear_string_data() {
  if (string_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_data_->clear();
  }
  clear_has_string_data();
}
inline const ::std::string& CSVCMsg_CreateStringTable::string_data() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.string_data)
  return *string_data_;
}
inline void CSVCMsg_CreateStringTable::set_string_data(const ::std::string& value) {
  set_has_string_data();
  if (string_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_data_ = new ::std::string;
  }
  string_data_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.string_data)
}
inline void CSVCMsg_CreateStringTable::set_string_data(const char* value) {
  set_has_string_data();
  if (string_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_data_ = new ::std::string;
  }
  string_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_CreateStringTable.string_data)
}
inline void CSVCMsg_CreateStringTable::set_string_data(const void* value, size_t size) {
  set_has_string_data();
  if (string_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_data_ = new ::std::string;
  }
  string_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_CreateStringTable.string_data)
}
inline ::std::string* CSVCMsg_CreateStringTable::mutable_string_data() {
  set_has_string_data();
  if (string_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_CreateStringTable.string_data)
  return string_data_;
}
inline ::std::string* CSVCMsg_CreateStringTable::release_string_data() {
  clear_has_string_data();
  if (string_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = string_data_;
    string_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_CreateStringTable::set_allocated_string_data(::std::string* string_data) {
  if (string_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete string_data_;
  }
  if (string_data) {
    set_has_string_data();
    string_data_ = string_data;
  } else {
    clear_has_string_data();
    string_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_CreateStringTable.string_data)
}

// optional int32 uncompressed_size = 8;
inline bool CSVCMsg_CreateStringTable::has_uncompressed_size() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_uncompressed_size() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSVCMsg_CreateStringTable::clear_has_uncompressed_size() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSVCMsg_CreateStringTable::clear_uncompressed_size() {
  uncompressed_size_ = 0;
  clear_has_uncompressed_size();
}
inline ::google::protobuf::int32 CSVCMsg_CreateStringTable::uncompressed_size() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.uncompressed_size)
  return uncompressed_size_;
}
inline void CSVCMsg_CreateStringTable::set_uncompressed_size(::google::protobuf::int32 value) {
  set_has_uncompressed_size();
  uncompressed_size_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.uncompressed_size)
}

// optional bool data_compressed = 9;
inline bool CSVCMsg_CreateStringTable::has_data_compressed() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSVCMsg_CreateStringTable::set_has_data_compressed() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSVCMsg_CreateStringTable::clear_has_data_compressed() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSVCMsg_CreateStringTable::clear_data_compressed() {
  data_compressed_ = false;
  clear_has_data_compressed();
}
inline bool CSVCMsg_CreateStringTable::data_compressed() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CreateStringTable.data_compressed)
  return data_compressed_;
}
inline void CSVCMsg_CreateStringTable::set_data_compressed(bool value) {
  set_has_data_compressed();
  data_compressed_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_CreateStringTable.data_compressed)
}

// -------------------------------------------------------------------

// CSVCMsg_UpdateStringTable

// optional int32 table_id = 1;
inline bool CSVCMsg_UpdateStringTable::has_table_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_UpdateStringTable::set_has_table_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_UpdateStringTable::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_UpdateStringTable::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 CSVCMsg_UpdateStringTable::table_id() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_UpdateStringTable.table_id)
  return table_id_;
}
inline void CSVCMsg_UpdateStringTable::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_UpdateStringTable.table_id)
}

// optional int32 num_changed_entries = 2;
inline bool CSVCMsg_UpdateStringTable::has_num_changed_entries() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_UpdateStringTable::set_has_num_changed_entries() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_UpdateStringTable::clear_has_num_changed_entries() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_UpdateStringTable::clear_num_changed_entries() {
  num_changed_entries_ = 0;
  clear_has_num_changed_entries();
}
inline ::google::protobuf::int32 CSVCMsg_UpdateStringTable::num_changed_entries() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_UpdateStringTable.num_changed_entries)
  return num_changed_entries_;
}
inline void CSVCMsg_UpdateStringTable::set_num_changed_entries(::google::protobuf::int32 value) {
  set_has_num_changed_entries();
  num_changed_entries_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_UpdateStringTable.num_changed_entries)
}

// optional bytes string_data = 3;
inline bool CSVCMsg_UpdateStringTable::has_string_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_UpdateStringTable::set_has_string_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_UpdateStringTable::clear_has_string_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_UpdateStringTable::clear_string_data() {
  if (string_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_data_->clear();
  }
  clear_has_string_data();
}
inline const ::std::string& CSVCMsg_UpdateStringTable::string_data() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_UpdateStringTable.string_data)
  return *string_data_;
}
inline void CSVCMsg_UpdateStringTable::set_string_data(const ::std::string& value) {
  set_has_string_data();
  if (string_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_data_ = new ::std::string;
  }
  string_data_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_UpdateStringTable.string_data)
}
inline void CSVCMsg_UpdateStringTable::set_string_data(const char* value) {
  set_has_string_data();
  if (string_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_data_ = new ::std::string;
  }
  string_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_UpdateStringTable.string_data)
}
inline void CSVCMsg_UpdateStringTable::set_string_data(const void* value, size_t size) {
  set_has_string_data();
  if (string_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_data_ = new ::std::string;
  }
  string_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_UpdateStringTable.string_data)
}
inline ::std::string* CSVCMsg_UpdateStringTable::mutable_string_data() {
  set_has_string_data();
  if (string_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    string_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_UpdateStringTable.string_data)
  return string_data_;
}
inline ::std::string* CSVCMsg_UpdateStringTable::release_string_data() {
  clear_has_string_data();
  if (string_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = string_data_;
    string_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_UpdateStringTable::set_allocated_string_data(::std::string* string_data) {
  if (string_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete string_data_;
  }
  if (string_data) {
    set_has_string_data();
    string_data_ = string_data;
  } else {
    clear_has_string_data();
    string_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_UpdateStringTable.string_data)
}

// -------------------------------------------------------------------

// CSVCMsg_VoiceData

// optional .CMsgVoiceAudio audio = 1;
inline bool CSVCMsg_VoiceData::has_audio() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_VoiceData::set_has_audio() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_VoiceData::clear_has_audio() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_VoiceData::clear_audio() {
  if (audio_ != NULL) audio_->::CMsgVoiceAudio::Clear();
  clear_has_audio();
}
inline const ::CMsgVoiceAudio& CSVCMsg_VoiceData::audio() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceData.audio)
  return audio_ != NULL ? *audio_ : *default_instance_->audio_;
}
inline ::CMsgVoiceAudio* CSVCMsg_VoiceData::mutable_audio() {
  set_has_audio();
  if (audio_ == NULL) audio_ = new ::CMsgVoiceAudio;
  // @@protoc_insertion_point(field_mutable:CSVCMsg_VoiceData.audio)
  return audio_;
}
inline ::CMsgVoiceAudio* CSVCMsg_VoiceData::release_audio() {
  clear_has_audio();
  ::CMsgVoiceAudio* temp = audio_;
  audio_ = NULL;
  return temp;
}
inline void CSVCMsg_VoiceData::set_allocated_audio(::CMsgVoiceAudio* audio) {
  delete audio_;
  audio_ = audio;
  if (audio) {
    set_has_audio();
  } else {
    clear_has_audio();
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_VoiceData.audio)
}

// optional int32 client = 2;
inline bool CSVCMsg_VoiceData::has_client() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_VoiceData::set_has_client() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_VoiceData::clear_has_client() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_VoiceData::clear_client() {
  client_ = 0;
  clear_has_client();
}
inline ::google::protobuf::int32 CSVCMsg_VoiceData::client() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceData.client)
  return client_;
}
inline void CSVCMsg_VoiceData::set_client(::google::protobuf::int32 value) {
  set_has_client();
  client_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_VoiceData.client)
}

// optional bool proximity = 3;
inline bool CSVCMsg_VoiceData::has_proximity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_VoiceData::set_has_proximity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_VoiceData::clear_has_proximity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_VoiceData::clear_proximity() {
  proximity_ = false;
  clear_has_proximity();
}
inline bool CSVCMsg_VoiceData::proximity() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceData.proximity)
  return proximity_;
}
inline void CSVCMsg_VoiceData::set_proximity(bool value) {
  set_has_proximity();
  proximity_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_VoiceData.proximity)
}

// optional fixed64 xuid = 4;
inline bool CSVCMsg_VoiceData::has_xuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_VoiceData::set_has_xuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_VoiceData::clear_has_xuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_VoiceData::clear_xuid() {
  xuid_ = GOOGLE_ULONGLONG(0);
  clear_has_xuid();
}
inline ::google::protobuf::uint64 CSVCMsg_VoiceData::xuid() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceData.xuid)
  return xuid_;
}
inline void CSVCMsg_VoiceData::set_xuid(::google::protobuf::uint64 value) {
  set_has_xuid();
  xuid_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_VoiceData.xuid)
}

// optional int32 audible_mask = 5;
inline bool CSVCMsg_VoiceData::has_audible_mask() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSVCMsg_VoiceData::set_has_audible_mask() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSVCMsg_VoiceData::clear_has_audible_mask() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSVCMsg_VoiceData::clear_audible_mask() {
  audible_mask_ = 0;
  clear_has_audible_mask();
}
inline ::google::protobuf::int32 CSVCMsg_VoiceData::audible_mask() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceData.audible_mask)
  return audible_mask_;
}
inline void CSVCMsg_VoiceData::set_audible_mask(::google::protobuf::int32 value) {
  set_has_audible_mask();
  audible_mask_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_VoiceData.audible_mask)
}

// optional uint32 tick = 6;
inline bool CSVCMsg_VoiceData::has_tick() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSVCMsg_VoiceData::set_has_tick() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSVCMsg_VoiceData::clear_has_tick() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSVCMsg_VoiceData::clear_tick() {
  tick_ = 0u;
  clear_has_tick();
}
inline ::google::protobuf::uint32 CSVCMsg_VoiceData::tick() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_VoiceData.tick)
  return tick_;
}
inline void CSVCMsg_VoiceData::set_tick(::google::protobuf::uint32 value) {
  set_has_tick();
  tick_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_VoiceData.tick)
}

// -------------------------------------------------------------------

// CSVCMsg_PacketReliable

// optional int32 tick = 1;
inline bool CSVCMsg_PacketReliable::has_tick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_PacketReliable::set_has_tick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_PacketReliable::clear_has_tick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_PacketReliable::clear_tick() {
  tick_ = 0;
  clear_has_tick();
}
inline ::google::protobuf::int32 CSVCMsg_PacketReliable::tick() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketReliable.tick)
  return tick_;
}
inline void CSVCMsg_PacketReliable::set_tick(::google::protobuf::int32 value) {
  set_has_tick();
  tick_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketReliable.tick)
}

// optional int32 messagessize = 2;
inline bool CSVCMsg_PacketReliable::has_messagessize() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_PacketReliable::set_has_messagessize() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_PacketReliable::clear_has_messagessize() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_PacketReliable::clear_messagessize() {
  messagessize_ = 0;
  clear_has_messagessize();
}
inline ::google::protobuf::int32 CSVCMsg_PacketReliable::messagessize() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketReliable.messagessize)
  return messagessize_;
}
inline void CSVCMsg_PacketReliable::set_messagessize(::google::protobuf::int32 value) {
  set_has_messagessize();
  messagessize_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketReliable.messagessize)
}

// optional bool state = 3;
inline bool CSVCMsg_PacketReliable::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_PacketReliable::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_PacketReliable::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_PacketReliable::clear_state() {
  state_ = false;
  clear_has_state();
}
inline bool CSVCMsg_PacketReliable::state() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PacketReliable.state)
  return state_;
}
inline void CSVCMsg_PacketReliable::set_state(bool value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_PacketReliable.state)
}

// -------------------------------------------------------------------

// CSVCMsg_FullFrameSplit

// optional int32 tick = 1;
inline bool CSVCMsg_FullFrameSplit::has_tick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_FullFrameSplit::set_has_tick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_FullFrameSplit::clear_has_tick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_FullFrameSplit::clear_tick() {
  tick_ = 0;
  clear_has_tick();
}
inline ::google::protobuf::int32 CSVCMsg_FullFrameSplit::tick() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_FullFrameSplit.tick)
  return tick_;
}
inline void CSVCMsg_FullFrameSplit::set_tick(::google::protobuf::int32 value) {
  set_has_tick();
  tick_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_FullFrameSplit.tick)
}

// optional int32 section = 2;
inline bool CSVCMsg_FullFrameSplit::has_section() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_FullFrameSplit::set_has_section() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_FullFrameSplit::clear_has_section() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_FullFrameSplit::clear_section() {
  section_ = 0;
  clear_has_section();
}
inline ::google::protobuf::int32 CSVCMsg_FullFrameSplit::section() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_FullFrameSplit.section)
  return section_;
}
inline void CSVCMsg_FullFrameSplit::set_section(::google::protobuf::int32 value) {
  set_has_section();
  section_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_FullFrameSplit.section)
}

// optional int32 total = 3;
inline bool CSVCMsg_FullFrameSplit::has_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSVCMsg_FullFrameSplit::set_has_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSVCMsg_FullFrameSplit::clear_has_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSVCMsg_FullFrameSplit::clear_total() {
  total_ = 0;
  clear_has_total();
}
inline ::google::protobuf::int32 CSVCMsg_FullFrameSplit::total() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_FullFrameSplit.total)
  return total_;
}
inline void CSVCMsg_FullFrameSplit::set_total(::google::protobuf::int32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_FullFrameSplit.total)
}

// optional bytes data = 4;
inline bool CSVCMsg_FullFrameSplit::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSVCMsg_FullFrameSplit::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSVCMsg_FullFrameSplit::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSVCMsg_FullFrameSplit::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& CSVCMsg_FullFrameSplit::data() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_FullFrameSplit.data)
  return *data_;
}
inline void CSVCMsg_FullFrameSplit::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_FullFrameSplit.data)
}
inline void CSVCMsg_FullFrameSplit::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_FullFrameSplit.data)
}
inline void CSVCMsg_FullFrameSplit::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_FullFrameSplit.data)
}
inline ::std::string* CSVCMsg_FullFrameSplit::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_FullFrameSplit.data)
  return data_;
}
inline ::std::string* CSVCMsg_FullFrameSplit::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_FullFrameSplit::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_FullFrameSplit.data)
}

// -------------------------------------------------------------------

// CSVCMsg_CmdKeyValues

// optional bytes data = 1;
inline bool CSVCMsg_CmdKeyValues::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_CmdKeyValues::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_CmdKeyValues::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_CmdKeyValues::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& CSVCMsg_CmdKeyValues::data() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_CmdKeyValues.data)
  return *data_;
}
inline void CSVCMsg_CmdKeyValues::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_CmdKeyValues.data)
}
inline void CSVCMsg_CmdKeyValues::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_CmdKeyValues.data)
}
inline void CSVCMsg_CmdKeyValues::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_CmdKeyValues.data)
}
inline ::std::string* CSVCMsg_CmdKeyValues::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_CmdKeyValues.data)
  return data_;
}
inline ::std::string* CSVCMsg_CmdKeyValues::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_CmdKeyValues::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_CmdKeyValues.data)
}

// -------------------------------------------------------------------

// CMsgIPCAddress

// optional fixed64 computer_guid = 1;
inline bool CMsgIPCAddress::has_computer_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgIPCAddress::set_has_computer_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgIPCAddress::clear_has_computer_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgIPCAddress::clear_computer_guid() {
  computer_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_computer_guid();
}
inline ::google::protobuf::uint64 CMsgIPCAddress::computer_guid() const {
  // @@protoc_insertion_point(field_get:CMsgIPCAddress.computer_guid)
  return computer_guid_;
}
inline void CMsgIPCAddress::set_computer_guid(::google::protobuf::uint64 value) {
  set_has_computer_guid();
  computer_guid_ = value;
  // @@protoc_insertion_point(field_set:CMsgIPCAddress.computer_guid)
}

// optional uint32 process_id = 2;
inline bool CMsgIPCAddress::has_process_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgIPCAddress::set_has_process_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgIPCAddress::clear_has_process_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgIPCAddress::clear_process_id() {
  process_id_ = 0u;
  clear_has_process_id();
}
inline ::google::protobuf::uint32 CMsgIPCAddress::process_id() const {
  // @@protoc_insertion_point(field_get:CMsgIPCAddress.process_id)
  return process_id_;
}
inline void CMsgIPCAddress::set_process_id(::google::protobuf::uint32 value) {
  set_has_process_id();
  process_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgIPCAddress.process_id)
}

// -------------------------------------------------------------------

// CMsgServerPeer

// optional int32 player_slot = 1;
inline bool CMsgServerPeer::has_player_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerPeer::set_has_player_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerPeer::clear_has_player_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerPeer::clear_player_slot() {
  player_slot_ = 0;
  clear_has_player_slot();
}
inline ::google::protobuf::int32 CMsgServerPeer::player_slot() const {
  // @@protoc_insertion_point(field_get:CMsgServerPeer.player_slot)
  return player_slot_;
}
inline void CMsgServerPeer::set_player_slot(::google::protobuf::int32 value) {
  set_has_player_slot();
  player_slot_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerPeer.player_slot)
}

// optional fixed64 steamid = 2;
inline bool CMsgServerPeer::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgServerPeer::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgServerPeer::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgServerPeer::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgServerPeer::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgServerPeer.steamid)
  return steamid_;
}
inline void CMsgServerPeer::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerPeer.steamid)
}

// optional .CMsgIPCAddress ipc = 3;
inline bool CMsgServerPeer::has_ipc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgServerPeer::set_has_ipc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgServerPeer::clear_has_ipc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgServerPeer::clear_ipc() {
  if (ipc_ != NULL) ipc_->::CMsgIPCAddress::Clear();
  clear_has_ipc();
}
inline const ::CMsgIPCAddress& CMsgServerPeer::ipc() const {
  // @@protoc_insertion_point(field_get:CMsgServerPeer.ipc)
  return ipc_ != NULL ? *ipc_ : *default_instance_->ipc_;
}
inline ::CMsgIPCAddress* CMsgServerPeer::mutable_ipc() {
  set_has_ipc();
  if (ipc_ == NULL) ipc_ = new ::CMsgIPCAddress;
  // @@protoc_insertion_point(field_mutable:CMsgServerPeer.ipc)
  return ipc_;
}
inline ::CMsgIPCAddress* CMsgServerPeer::release_ipc() {
  clear_has_ipc();
  ::CMsgIPCAddress* temp = ipc_;
  ipc_ = NULL;
  return temp;
}
inline void CMsgServerPeer::set_allocated_ipc(::CMsgIPCAddress* ipc) {
  delete ipc_;
  ipc_ = ipc;
  if (ipc) {
    set_has_ipc();
  } else {
    clear_has_ipc();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgServerPeer.ipc)
}

// optional bool they_hear_you = 4;
inline bool CMsgServerPeer::has_they_hear_you() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgServerPeer::set_has_they_hear_you() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgServerPeer::clear_has_they_hear_you() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgServerPeer::clear_they_hear_you() {
  they_hear_you_ = false;
  clear_has_they_hear_you();
}
inline bool CMsgServerPeer::they_hear_you() const {
  // @@protoc_insertion_point(field_get:CMsgServerPeer.they_hear_you)
  return they_hear_you_;
}
inline void CMsgServerPeer::set_they_hear_you(bool value) {
  set_has_they_hear_you();
  they_hear_you_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerPeer.they_hear_you)
}

// optional bool you_hear_them = 5;
inline bool CMsgServerPeer::has_you_hear_them() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgServerPeer::set_has_you_hear_them() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgServerPeer::clear_has_you_hear_them() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgServerPeer::clear_you_hear_them() {
  you_hear_them_ = false;
  clear_has_you_hear_them();
}
inline bool CMsgServerPeer::you_hear_them() const {
  // @@protoc_insertion_point(field_get:CMsgServerPeer.you_hear_them)
  return you_hear_them_;
}
inline void CMsgServerPeer::set_you_hear_them(bool value) {
  set_has_you_hear_them();
  you_hear_them_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerPeer.you_hear_them)
}

// optional bool is_listenserver_host = 6;
inline bool CMsgServerPeer::has_is_listenserver_host() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgServerPeer::set_has_is_listenserver_host() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgServerPeer::clear_has_is_listenserver_host() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgServerPeer::clear_is_listenserver_host() {
  is_listenserver_host_ = false;
  clear_has_is_listenserver_host();
}
inline bool CMsgServerPeer::is_listenserver_host() const {
  // @@protoc_insertion_point(field_get:CMsgServerPeer.is_listenserver_host)
  return is_listenserver_host_;
}
inline void CMsgServerPeer::set_is_listenserver_host(bool value) {
  set_has_is_listenserver_host();
  is_listenserver_host_ = value;
  // @@protoc_insertion_point(field_set:CMsgServerPeer.is_listenserver_host)
}

// -------------------------------------------------------------------

// CSVCMsg_PeerList

// repeated .CMsgServerPeer peer = 1;
inline int CSVCMsg_PeerList::peer_size() const {
  return peer_.size();
}
inline void CSVCMsg_PeerList::clear_peer() {
  peer_.Clear();
}
inline const ::CMsgServerPeer& CSVCMsg_PeerList::peer(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_PeerList.peer)
  return peer_.Get(index);
}
inline ::CMsgServerPeer* CSVCMsg_PeerList::mutable_peer(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_PeerList.peer)
  return peer_.Mutable(index);
}
inline ::CMsgServerPeer* CSVCMsg_PeerList::add_peer() {
  // @@protoc_insertion_point(field_add:CSVCMsg_PeerList.peer)
  return peer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgServerPeer >&
CSVCMsg_PeerList::peer() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_PeerList.peer)
  return peer_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgServerPeer >*
CSVCMsg_PeerList::mutable_peer() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_PeerList.peer)
  return &peer_;
}

// -------------------------------------------------------------------

// CSVCMsg_ClearAllStringTables

// optional string mapname = 1;
inline bool CSVCMsg_ClearAllStringTables::has_mapname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_ClearAllStringTables::set_has_mapname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_ClearAllStringTables::clear_has_mapname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_ClearAllStringTables::clear_mapname() {
  if (mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_->clear();
  }
  clear_has_mapname();
}
inline const ::std::string& CSVCMsg_ClearAllStringTables::mapname() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ClearAllStringTables.mapname)
  return *mapname_;
}
inline void CSVCMsg_ClearAllStringTables::set_mapname(const ::std::string& value) {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(value);
  // @@protoc_insertion_point(field_set:CSVCMsg_ClearAllStringTables.mapname)
}
inline void CSVCMsg_ClearAllStringTables::set_mapname(const char* value) {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_ClearAllStringTables.mapname)
}
inline void CSVCMsg_ClearAllStringTables::set_mapname(const char* value, size_t size) {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_ClearAllStringTables.mapname)
}
inline ::std::string* CSVCMsg_ClearAllStringTables::mutable_mapname() {
  set_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSVCMsg_ClearAllStringTables.mapname)
  return mapname_;
}
inline ::std::string* CSVCMsg_ClearAllStringTables::release_mapname() {
  clear_has_mapname();
  if (mapname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mapname_;
    mapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSVCMsg_ClearAllStringTables::set_allocated_mapname(::std::string* mapname) {
  if (mapname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mapname_;
  }
  if (mapname) {
    set_has_mapname();
    mapname_ = mapname;
  } else {
    clear_has_mapname();
    mapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSVCMsg_ClearAllStringTables.mapname)
}

// optional uint32 map_crc = 2;
inline bool CSVCMsg_ClearAllStringTables::has_map_crc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSVCMsg_ClearAllStringTables::set_has_map_crc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSVCMsg_ClearAllStringTables::clear_has_map_crc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSVCMsg_ClearAllStringTables::clear_map_crc() {
  map_crc_ = 0u;
  clear_has_map_crc();
}
inline ::google::protobuf::uint32 CSVCMsg_ClearAllStringTables::map_crc() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_ClearAllStringTables.map_crc)
  return map_crc_;
}
inline void CSVCMsg_ClearAllStringTables::set_map_crc(::google::protobuf::uint32 value) {
  set_has_map_crc();
  map_crc_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_ClearAllStringTables.map_crc)
}

// -------------------------------------------------------------------

// ProtoFlattenedSerializerField_t

// optional int32 var_type_sym = 1;
inline bool ProtoFlattenedSerializerField_t::has_var_type_sym() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoFlattenedSerializerField_t::set_has_var_type_sym() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoFlattenedSerializerField_t::clear_has_var_type_sym() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoFlattenedSerializerField_t::clear_var_type_sym() {
  var_type_sym_ = 0;
  clear_has_var_type_sym();
}
inline ::google::protobuf::int32 ProtoFlattenedSerializerField_t::var_type_sym() const {
  // @@protoc_insertion_point(field_get:ProtoFlattenedSerializerField_t.var_type_sym)
  return var_type_sym_;
}
inline void ProtoFlattenedSerializerField_t::set_var_type_sym(::google::protobuf::int32 value) {
  set_has_var_type_sym();
  var_type_sym_ = value;
  // @@protoc_insertion_point(field_set:ProtoFlattenedSerializerField_t.var_type_sym)
}

// optional int32 var_name_sym = 2;
inline bool ProtoFlattenedSerializerField_t::has_var_name_sym() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoFlattenedSerializerField_t::set_has_var_name_sym() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoFlattenedSerializerField_t::clear_has_var_name_sym() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoFlattenedSerializerField_t::clear_var_name_sym() {
  var_name_sym_ = 0;
  clear_has_var_name_sym();
}
inline ::google::protobuf::int32 ProtoFlattenedSerializerField_t::var_name_sym() const {
  // @@protoc_insertion_point(field_get:ProtoFlattenedSerializerField_t.var_name_sym)
  return var_name_sym_;
}
inline void ProtoFlattenedSerializerField_t::set_var_name_sym(::google::protobuf::int32 value) {
  set_has_var_name_sym();
  var_name_sym_ = value;
  // @@protoc_insertion_point(field_set:ProtoFlattenedSerializerField_t.var_name_sym)
}

// optional int32 bit_count = 3;
inline bool ProtoFlattenedSerializerField_t::has_bit_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoFlattenedSerializerField_t::set_has_bit_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoFlattenedSerializerField_t::clear_has_bit_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoFlattenedSerializerField_t::clear_bit_count() {
  bit_count_ = 0;
  clear_has_bit_count();
}
inline ::google::protobuf::int32 ProtoFlattenedSerializerField_t::bit_count() const {
  // @@protoc_insertion_point(field_get:ProtoFlattenedSerializerField_t.bit_count)
  return bit_count_;
}
inline void ProtoFlattenedSerializerField_t::set_bit_count(::google::protobuf::int32 value) {
  set_has_bit_count();
  bit_count_ = value;
  // @@protoc_insertion_point(field_set:ProtoFlattenedSerializerField_t.bit_count)
}

// optional float low_value = 4;
inline bool ProtoFlattenedSerializerField_t::has_low_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoFlattenedSerializerField_t::set_has_low_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoFlattenedSerializerField_t::clear_has_low_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoFlattenedSerializerField_t::clear_low_value() {
  low_value_ = 0;
  clear_has_low_value();
}
inline float ProtoFlattenedSerializerField_t::low_value() const {
  // @@protoc_insertion_point(field_get:ProtoFlattenedSerializerField_t.low_value)
  return low_value_;
}
inline void ProtoFlattenedSerializerField_t::set_low_value(float value) {
  set_has_low_value();
  low_value_ = value;
  // @@protoc_insertion_point(field_set:ProtoFlattenedSerializerField_t.low_value)
}

// optional float high_value = 5;
inline bool ProtoFlattenedSerializerField_t::has_high_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoFlattenedSerializerField_t::set_has_high_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoFlattenedSerializerField_t::clear_has_high_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoFlattenedSerializerField_t::clear_high_value() {
  high_value_ = 0;
  clear_has_high_value();
}
inline float ProtoFlattenedSerializerField_t::high_value() const {
  // @@protoc_insertion_point(field_get:ProtoFlattenedSerializerField_t.high_value)
  return high_value_;
}
inline void ProtoFlattenedSerializerField_t::set_high_value(float value) {
  set_has_high_value();
  high_value_ = value;
  // @@protoc_insertion_point(field_set:ProtoFlattenedSerializerField_t.high_value)
}

// optional int32 encode_flags = 6;
inline bool ProtoFlattenedSerializerField_t::has_encode_flags() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoFlattenedSerializerField_t::set_has_encode_flags() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoFlattenedSerializerField_t::clear_has_encode_flags() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoFlattenedSerializerField_t::clear_encode_flags() {
  encode_flags_ = 0;
  clear_has_encode_flags();
}
inline ::google::protobuf::int32 ProtoFlattenedSerializerField_t::encode_flags() const {
  // @@protoc_insertion_point(field_get:ProtoFlattenedSerializerField_t.encode_flags)
  return encode_flags_;
}
inline void ProtoFlattenedSerializerField_t::set_encode_flags(::google::protobuf::int32 value) {
  set_has_encode_flags();
  encode_flags_ = value;
  // @@protoc_insertion_point(field_set:ProtoFlattenedSerializerField_t.encode_flags)
}

// optional int32 field_serializer_name_sym = 7;
inline bool ProtoFlattenedSerializerField_t::has_field_serializer_name_sym() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoFlattenedSerializerField_t::set_has_field_serializer_name_sym() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoFlattenedSerializerField_t::clear_has_field_serializer_name_sym() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoFlattenedSerializerField_t::clear_field_serializer_name_sym() {
  field_serializer_name_sym_ = 0;
  clear_has_field_serializer_name_sym();
}
inline ::google::protobuf::int32 ProtoFlattenedSerializerField_t::field_serializer_name_sym() const {
  // @@protoc_insertion_point(field_get:ProtoFlattenedSerializerField_t.field_serializer_name_sym)
  return field_serializer_name_sym_;
}
inline void ProtoFlattenedSerializerField_t::set_field_serializer_name_sym(::google::protobuf::int32 value) {
  set_has_field_serializer_name_sym();
  field_serializer_name_sym_ = value;
  // @@protoc_insertion_point(field_set:ProtoFlattenedSerializerField_t.field_serializer_name_sym)
}

// optional int32 field_serializer_version = 8;
inline bool ProtoFlattenedSerializerField_t::has_field_serializer_version() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoFlattenedSerializerField_t::set_has_field_serializer_version() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoFlattenedSerializerField_t::clear_has_field_serializer_version() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoFlattenedSerializerField_t::clear_field_serializer_version() {
  field_serializer_version_ = 0;
  clear_has_field_serializer_version();
}
inline ::google::protobuf::int32 ProtoFlattenedSerializerField_t::field_serializer_version() const {
  // @@protoc_insertion_point(field_get:ProtoFlattenedSerializerField_t.field_serializer_version)
  return field_serializer_version_;
}
inline void ProtoFlattenedSerializerField_t::set_field_serializer_version(::google::protobuf::int32 value) {
  set_has_field_serializer_version();
  field_serializer_version_ = value;
  // @@protoc_insertion_point(field_set:ProtoFlattenedSerializerField_t.field_serializer_version)
}

// optional int32 send_node_sym = 9;
inline bool ProtoFlattenedSerializerField_t::has_send_node_sym() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProtoFlattenedSerializerField_t::set_has_send_node_sym() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProtoFlattenedSerializerField_t::clear_has_send_node_sym() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProtoFlattenedSerializerField_t::clear_send_node_sym() {
  send_node_sym_ = 0;
  clear_has_send_node_sym();
}
inline ::google::protobuf::int32 ProtoFlattenedSerializerField_t::send_node_sym() const {
  // @@protoc_insertion_point(field_get:ProtoFlattenedSerializerField_t.send_node_sym)
  return send_node_sym_;
}
inline void ProtoFlattenedSerializerField_t::set_send_node_sym(::google::protobuf::int32 value) {
  set_has_send_node_sym();
  send_node_sym_ = value;
  // @@protoc_insertion_point(field_set:ProtoFlattenedSerializerField_t.send_node_sym)
}

// -------------------------------------------------------------------

// ProtoFlattenedSerializer_t

// optional int32 serializer_name_sym = 1;
inline bool ProtoFlattenedSerializer_t::has_serializer_name_sym() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoFlattenedSerializer_t::set_has_serializer_name_sym() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoFlattenedSerializer_t::clear_has_serializer_name_sym() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoFlattenedSerializer_t::clear_serializer_name_sym() {
  serializer_name_sym_ = 0;
  clear_has_serializer_name_sym();
}
inline ::google::protobuf::int32 ProtoFlattenedSerializer_t::serializer_name_sym() const {
  // @@protoc_insertion_point(field_get:ProtoFlattenedSerializer_t.serializer_name_sym)
  return serializer_name_sym_;
}
inline void ProtoFlattenedSerializer_t::set_serializer_name_sym(::google::protobuf::int32 value) {
  set_has_serializer_name_sym();
  serializer_name_sym_ = value;
  // @@protoc_insertion_point(field_set:ProtoFlattenedSerializer_t.serializer_name_sym)
}

// optional int32 serializer_version = 2;
inline bool ProtoFlattenedSerializer_t::has_serializer_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoFlattenedSerializer_t::set_has_serializer_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoFlattenedSerializer_t::clear_has_serializer_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoFlattenedSerializer_t::clear_serializer_version() {
  serializer_version_ = 0;
  clear_has_serializer_version();
}
inline ::google::protobuf::int32 ProtoFlattenedSerializer_t::serializer_version() const {
  // @@protoc_insertion_point(field_get:ProtoFlattenedSerializer_t.serializer_version)
  return serializer_version_;
}
inline void ProtoFlattenedSerializer_t::set_serializer_version(::google::protobuf::int32 value) {
  set_has_serializer_version();
  serializer_version_ = value;
  // @@protoc_insertion_point(field_set:ProtoFlattenedSerializer_t.serializer_version)
}

// repeated int32 fields_index = 3;
inline int ProtoFlattenedSerializer_t::fields_index_size() const {
  return fields_index_.size();
}
inline void ProtoFlattenedSerializer_t::clear_fields_index() {
  fields_index_.Clear();
}
inline ::google::protobuf::int32 ProtoFlattenedSerializer_t::fields_index(int index) const {
  // @@protoc_insertion_point(field_get:ProtoFlattenedSerializer_t.fields_index)
  return fields_index_.Get(index);
}
inline void ProtoFlattenedSerializer_t::set_fields_index(int index, ::google::protobuf::int32 value) {
  fields_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoFlattenedSerializer_t.fields_index)
}
inline void ProtoFlattenedSerializer_t::add_fields_index(::google::protobuf::int32 value) {
  fields_index_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoFlattenedSerializer_t.fields_index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProtoFlattenedSerializer_t::fields_index() const {
  // @@protoc_insertion_point(field_list:ProtoFlattenedSerializer_t.fields_index)
  return fields_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProtoFlattenedSerializer_t::mutable_fields_index() {
  // @@protoc_insertion_point(field_mutable_list:ProtoFlattenedSerializer_t.fields_index)
  return &fields_index_;
}

// -------------------------------------------------------------------

// CSVCMsg_FlattenedSerializer

// repeated .ProtoFlattenedSerializer_t serializers = 1;
inline int CSVCMsg_FlattenedSerializer::serializers_size() const {
  return serializers_.size();
}
inline void CSVCMsg_FlattenedSerializer::clear_serializers() {
  serializers_.Clear();
}
inline const ::ProtoFlattenedSerializer_t& CSVCMsg_FlattenedSerializer::serializers(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_FlattenedSerializer.serializers)
  return serializers_.Get(index);
}
inline ::ProtoFlattenedSerializer_t* CSVCMsg_FlattenedSerializer::mutable_serializers(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_FlattenedSerializer.serializers)
  return serializers_.Mutable(index);
}
inline ::ProtoFlattenedSerializer_t* CSVCMsg_FlattenedSerializer::add_serializers() {
  // @@protoc_insertion_point(field_add:CSVCMsg_FlattenedSerializer.serializers)
  return serializers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoFlattenedSerializer_t >&
CSVCMsg_FlattenedSerializer::serializers() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_FlattenedSerializer.serializers)
  return serializers_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoFlattenedSerializer_t >*
CSVCMsg_FlattenedSerializer::mutable_serializers() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_FlattenedSerializer.serializers)
  return &serializers_;
}

// repeated string symbols = 2;
inline int CSVCMsg_FlattenedSerializer::symbols_size() const {
  return symbols_.size();
}
inline void CSVCMsg_FlattenedSerializer::clear_symbols() {
  symbols_.Clear();
}
inline const ::std::string& CSVCMsg_FlattenedSerializer::symbols(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_FlattenedSerializer.symbols)
  return symbols_.Get(index);
}
inline ::std::string* CSVCMsg_FlattenedSerializer::mutable_symbols(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_FlattenedSerializer.symbols)
  return symbols_.Mutable(index);
}
inline void CSVCMsg_FlattenedSerializer::set_symbols(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CSVCMsg_FlattenedSerializer.symbols)
  symbols_.Mutable(index)->assign(value);
}
inline void CSVCMsg_FlattenedSerializer::set_symbols(int index, const char* value) {
  symbols_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSVCMsg_FlattenedSerializer.symbols)
}
inline void CSVCMsg_FlattenedSerializer::set_symbols(int index, const char* value, size_t size) {
  symbols_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSVCMsg_FlattenedSerializer.symbols)
}
inline ::std::string* CSVCMsg_FlattenedSerializer::add_symbols() {
  return symbols_.Add();
}
inline void CSVCMsg_FlattenedSerializer::add_symbols(const ::std::string& value) {
  symbols_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSVCMsg_FlattenedSerializer.symbols)
}
inline void CSVCMsg_FlattenedSerializer::add_symbols(const char* value) {
  symbols_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSVCMsg_FlattenedSerializer.symbols)
}
inline void CSVCMsg_FlattenedSerializer::add_symbols(const char* value, size_t size) {
  symbols_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSVCMsg_FlattenedSerializer.symbols)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CSVCMsg_FlattenedSerializer::symbols() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_FlattenedSerializer.symbols)
  return symbols_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CSVCMsg_FlattenedSerializer::mutable_symbols() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_FlattenedSerializer.symbols)
  return &symbols_;
}

// repeated .ProtoFlattenedSerializerField_t fields = 3;
inline int CSVCMsg_FlattenedSerializer::fields_size() const {
  return fields_.size();
}
inline void CSVCMsg_FlattenedSerializer::clear_fields() {
  fields_.Clear();
}
inline const ::ProtoFlattenedSerializerField_t& CSVCMsg_FlattenedSerializer::fields(int index) const {
  // @@protoc_insertion_point(field_get:CSVCMsg_FlattenedSerializer.fields)
  return fields_.Get(index);
}
inline ::ProtoFlattenedSerializerField_t* CSVCMsg_FlattenedSerializer::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:CSVCMsg_FlattenedSerializer.fields)
  return fields_.Mutable(index);
}
inline ::ProtoFlattenedSerializerField_t* CSVCMsg_FlattenedSerializer::add_fields() {
  // @@protoc_insertion_point(field_add:CSVCMsg_FlattenedSerializer.fields)
  return fields_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoFlattenedSerializerField_t >&
CSVCMsg_FlattenedSerializer::fields() const {
  // @@protoc_insertion_point(field_list:CSVCMsg_FlattenedSerializer.fields)
  return fields_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoFlattenedSerializerField_t >*
CSVCMsg_FlattenedSerializer::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:CSVCMsg_FlattenedSerializer.fields)
  return &fields_;
}

// -------------------------------------------------------------------

// CSVCMsg_StopSound

// optional fixed32 guid = 1;
inline bool CSVCMsg_StopSound::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSVCMsg_StopSound::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSVCMsg_StopSound::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSVCMsg_StopSound::clear_guid() {
  guid_ = 0u;
  clear_has_guid();
}
inline ::google::protobuf::uint32 CSVCMsg_StopSound::guid() const {
  // @@protoc_insertion_point(field_get:CSVCMsg_StopSound.guid)
  return guid_;
}
inline void CSVCMsg_StopSound::set_guid(::google::protobuf::uint32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:CSVCMsg_StopSound.guid)
}

// -------------------------------------------------------------------

// CBidirMsg_RebroadcastGameEvent

// optional bool posttoserver = 1;
inline bool CBidirMsg_RebroadcastGameEvent::has_posttoserver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CBidirMsg_RebroadcastGameEvent::set_has_posttoserver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CBidirMsg_RebroadcastGameEvent::clear_has_posttoserver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CBidirMsg_RebroadcastGameEvent::clear_posttoserver() {
  posttoserver_ = false;
  clear_has_posttoserver();
}
inline bool CBidirMsg_RebroadcastGameEvent::posttoserver() const {
  // @@protoc_insertion_point(field_get:CBidirMsg_RebroadcastGameEvent.posttoserver)
  return posttoserver_;
}
inline void CBidirMsg_RebroadcastGameEvent::set_posttoserver(bool value) {
  set_has_posttoserver();
  posttoserver_ = value;
  // @@protoc_insertion_point(field_set:CBidirMsg_RebroadcastGameEvent.posttoserver)
}

// optional int32 buftype = 2;
inline bool CBidirMsg_RebroadcastGameEvent::has_buftype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CBidirMsg_RebroadcastGameEvent::set_has_buftype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CBidirMsg_RebroadcastGameEvent::clear_has_buftype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CBidirMsg_RebroadcastGameEvent::clear_buftype() {
  buftype_ = 0;
  clear_has_buftype();
}
inline ::google::protobuf::int32 CBidirMsg_RebroadcastGameEvent::buftype() const {
  // @@protoc_insertion_point(field_get:CBidirMsg_RebroadcastGameEvent.buftype)
  return buftype_;
}
inline void CBidirMsg_RebroadcastGameEvent::set_buftype(::google::protobuf::int32 value) {
  set_has_buftype();
  buftype_ = value;
  // @@protoc_insertion_point(field_set:CBidirMsg_RebroadcastGameEvent.buftype)
}

// optional uint32 clientbitcount = 3;
inline bool CBidirMsg_RebroadcastGameEvent::has_clientbitcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CBidirMsg_RebroadcastGameEvent::set_has_clientbitcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CBidirMsg_RebroadcastGameEvent::clear_has_clientbitcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CBidirMsg_RebroadcastGameEvent::clear_clientbitcount() {
  clientbitcount_ = 0u;
  clear_has_clientbitcount();
}
inline ::google::protobuf::uint32 CBidirMsg_RebroadcastGameEvent::clientbitcount() const {
  // @@protoc_insertion_point(field_get:CBidirMsg_RebroadcastGameEvent.clientbitcount)
  return clientbitcount_;
}
inline void CBidirMsg_RebroadcastGameEvent::set_clientbitcount(::google::protobuf::uint32 value) {
  set_has_clientbitcount();
  clientbitcount_ = value;
  // @@protoc_insertion_point(field_set:CBidirMsg_RebroadcastGameEvent.clientbitcount)
}

// optional uint64 receivingclients = 4;
inline bool CBidirMsg_RebroadcastGameEvent::has_receivingclients() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CBidirMsg_RebroadcastGameEvent::set_has_receivingclients() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CBidirMsg_RebroadcastGameEvent::clear_has_receivingclients() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CBidirMsg_RebroadcastGameEvent::clear_receivingclients() {
  receivingclients_ = GOOGLE_ULONGLONG(0);
  clear_has_receivingclients();
}
inline ::google::protobuf::uint64 CBidirMsg_RebroadcastGameEvent::receivingclients() const {
  // @@protoc_insertion_point(field_get:CBidirMsg_RebroadcastGameEvent.receivingclients)
  return receivingclients_;
}
inline void CBidirMsg_RebroadcastGameEvent::set_receivingclients(::google::protobuf::uint64 value) {
  set_has_receivingclients();
  receivingclients_ = value;
  // @@protoc_insertion_point(field_set:CBidirMsg_RebroadcastGameEvent.receivingclients)
}

// -------------------------------------------------------------------

// CBidirMsg_RebroadcastSource

// optional int32 eventsource = 1;
inline bool CBidirMsg_RebroadcastSource::has_eventsource() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CBidirMsg_RebroadcastSource::set_has_eventsource() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CBidirMsg_RebroadcastSource::clear_has_eventsource() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CBidirMsg_RebroadcastSource::clear_eventsource() {
  eventsource_ = 0;
  clear_has_eventsource();
}
inline ::google::protobuf::int32 CBidirMsg_RebroadcastSource::eventsource() const {
  // @@protoc_insertion_point(field_get:CBidirMsg_RebroadcastSource.eventsource)
  return eventsource_;
}
inline void CBidirMsg_RebroadcastSource::set_eventsource(::google::protobuf::int32 value) {
  set_has_eventsource();
  eventsource_ = value;
  // @@protoc_insertion_point(field_set:CBidirMsg_RebroadcastSource.eventsource)
}

// -------------------------------------------------------------------

// SerializedNetAddress_t

// required bytes serializedAddress = 1;
inline bool SerializedNetAddress_t::has_serializedaddress() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SerializedNetAddress_t::set_has_serializedaddress() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SerializedNetAddress_t::clear_has_serializedaddress() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SerializedNetAddress_t::clear_serializedaddress() {
  if (serializedaddress_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serializedaddress_->clear();
  }
  clear_has_serializedaddress();
}
inline const ::std::string& SerializedNetAddress_t::serializedaddress() const {
  // @@protoc_insertion_point(field_get:SerializedNetAddress_t.serializedAddress)
  return *serializedaddress_;
}
inline void SerializedNetAddress_t::set_serializedaddress(const ::std::string& value) {
  set_has_serializedaddress();
  if (serializedaddress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serializedaddress_ = new ::std::string;
  }
  serializedaddress_->assign(value);
  // @@protoc_insertion_point(field_set:SerializedNetAddress_t.serializedAddress)
}
inline void SerializedNetAddress_t::set_serializedaddress(const char* value) {
  set_has_serializedaddress();
  if (serializedaddress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serializedaddress_ = new ::std::string;
  }
  serializedaddress_->assign(value);
  // @@protoc_insertion_point(field_set_char:SerializedNetAddress_t.serializedAddress)
}
inline void SerializedNetAddress_t::set_serializedaddress(const void* value, size_t size) {
  set_has_serializedaddress();
  if (serializedaddress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serializedaddress_ = new ::std::string;
  }
  serializedaddress_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SerializedNetAddress_t.serializedAddress)
}
inline ::std::string* SerializedNetAddress_t::mutable_serializedaddress() {
  set_has_serializedaddress();
  if (serializedaddress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serializedaddress_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SerializedNetAddress_t.serializedAddress)
  return serializedaddress_;
}
inline ::std::string* SerializedNetAddress_t::release_serializedaddress() {
  clear_has_serializedaddress();
  if (serializedaddress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = serializedaddress_;
    serializedaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SerializedNetAddress_t::set_allocated_serializedaddress(::std::string* serializedaddress) {
  if (serializedaddress_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serializedaddress_;
  }
  if (serializedaddress) {
    set_has_serializedaddress();
    serializedaddress_ = serializedaddress;
  } else {
    clear_has_serializedaddress();
    serializedaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SerializedNetAddress_t.serializedAddress)
}

// -------------------------------------------------------------------

// CBidirMsg_RelayInfo

// required .CBidirMsg_RelayInfo.Operation_t operation = 1 [default = RIO_REQUEST_RELAY];
inline bool CBidirMsg_RelayInfo::has_operation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CBidirMsg_RelayInfo::set_has_operation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CBidirMsg_RelayInfo::clear_has_operation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CBidirMsg_RelayInfo::clear_operation() {
  operation_ = 0;
  clear_has_operation();
}
inline ::CBidirMsg_RelayInfo_Operation_t CBidirMsg_RelayInfo::operation() const {
  // @@protoc_insertion_point(field_get:CBidirMsg_RelayInfo.operation)
  return static_cast< ::CBidirMsg_RelayInfo_Operation_t >(operation_);
}
inline void CBidirMsg_RelayInfo::set_operation(::CBidirMsg_RelayInfo_Operation_t value) {
  assert(::CBidirMsg_RelayInfo_Operation_t_IsValid(value));
  set_has_operation();
  operation_ = value;
  // @@protoc_insertion_point(field_set:CBidirMsg_RelayInfo.operation)
}

// optional .SerializedNetAddress_t serializedTargetAddress = 2;
inline bool CBidirMsg_RelayInfo::has_serializedtargetaddress() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CBidirMsg_RelayInfo::set_has_serializedtargetaddress() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CBidirMsg_RelayInfo::clear_has_serializedtargetaddress() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CBidirMsg_RelayInfo::clear_serializedtargetaddress() {
  if (serializedtargetaddress_ != NULL) serializedtargetaddress_->::SerializedNetAddress_t::Clear();
  clear_has_serializedtargetaddress();
}
inline const ::SerializedNetAddress_t& CBidirMsg_RelayInfo::serializedtargetaddress() const {
  // @@protoc_insertion_point(field_get:CBidirMsg_RelayInfo.serializedTargetAddress)
  return serializedtargetaddress_ != NULL ? *serializedtargetaddress_ : *default_instance_->serializedtargetaddress_;
}
inline ::SerializedNetAddress_t* CBidirMsg_RelayInfo::mutable_serializedtargetaddress() {
  set_has_serializedtargetaddress();
  if (serializedtargetaddress_ == NULL) serializedtargetaddress_ = new ::SerializedNetAddress_t;
  // @@protoc_insertion_point(field_mutable:CBidirMsg_RelayInfo.serializedTargetAddress)
  return serializedtargetaddress_;
}
inline ::SerializedNetAddress_t* CBidirMsg_RelayInfo::release_serializedtargetaddress() {
  clear_has_serializedtargetaddress();
  ::SerializedNetAddress_t* temp = serializedtargetaddress_;
  serializedtargetaddress_ = NULL;
  return temp;
}
inline void CBidirMsg_RelayInfo::set_allocated_serializedtargetaddress(::SerializedNetAddress_t* serializedtargetaddress) {
  delete serializedtargetaddress_;
  serializedtargetaddress_ = serializedtargetaddress;
  if (serializedtargetaddress) {
    set_has_serializedtargetaddress();
  } else {
    clear_has_serializedtargetaddress();
  }
  // @@protoc_insertion_point(field_set_allocated:CBidirMsg_RelayInfo.serializedTargetAddress)
}

// optional uint32 additionalHops = 3;
inline bool CBidirMsg_RelayInfo::has_additionalhops() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CBidirMsg_RelayInfo::set_has_additionalhops() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CBidirMsg_RelayInfo::clear_has_additionalhops() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CBidirMsg_RelayInfo::clear_additionalhops() {
  additionalhops_ = 0u;
  clear_has_additionalhops();
}
inline ::google::protobuf::uint32 CBidirMsg_RelayInfo::additionalhops() const {
  // @@protoc_insertion_point(field_get:CBidirMsg_RelayInfo.additionalHops)
  return additionalhops_;
}
inline void CBidirMsg_RelayInfo::set_additionalhops(::google::protobuf::uint32 value) {
  set_has_additionalhops();
  additionalhops_ = value;
  // @@protoc_insertion_point(field_set:CBidirMsg_RelayInfo.additionalHops)
}

// -------------------------------------------------------------------

// SignedPayload_t

// required bytes payloadData = 1;
inline bool SignedPayload_t::has_payloaddata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignedPayload_t::set_has_payloaddata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SignedPayload_t::clear_has_payloaddata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SignedPayload_t::clear_payloaddata() {
  if (payloaddata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    payloaddata_->clear();
  }
  clear_has_payloaddata();
}
inline const ::std::string& SignedPayload_t::payloaddata() const {
  // @@protoc_insertion_point(field_get:SignedPayload_t.payloadData)
  return *payloaddata_;
}
inline void SignedPayload_t::set_payloaddata(const ::std::string& value) {
  set_has_payloaddata();
  if (payloaddata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    payloaddata_ = new ::std::string;
  }
  payloaddata_->assign(value);
  // @@protoc_insertion_point(field_set:SignedPayload_t.payloadData)
}
inline void SignedPayload_t::set_payloaddata(const char* value) {
  set_has_payloaddata();
  if (payloaddata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    payloaddata_ = new ::std::string;
  }
  payloaddata_->assign(value);
  // @@protoc_insertion_point(field_set_char:SignedPayload_t.payloadData)
}
inline void SignedPayload_t::set_payloaddata(const void* value, size_t size) {
  set_has_payloaddata();
  if (payloaddata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    payloaddata_ = new ::std::string;
  }
  payloaddata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SignedPayload_t.payloadData)
}
inline ::std::string* SignedPayload_t::mutable_payloaddata() {
  set_has_payloaddata();
  if (payloaddata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    payloaddata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SignedPayload_t.payloadData)
  return payloaddata_;
}
inline ::std::string* SignedPayload_t::release_payloaddata() {
  clear_has_payloaddata();
  if (payloaddata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = payloaddata_;
    payloaddata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SignedPayload_t::set_allocated_payloaddata(::std::string* payloaddata) {
  if (payloaddata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete payloaddata_;
  }
  if (payloaddata) {
    set_has_payloaddata();
    payloaddata_ = payloaddata;
  } else {
    clear_has_payloaddata();
    payloaddata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SignedPayload_t.payloadData)
}

// required uint32 signature = 2;
inline bool SignedPayload_t::has_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SignedPayload_t::set_has_signature() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SignedPayload_t::clear_has_signature() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SignedPayload_t::clear_signature() {
  signature_ = 0u;
  clear_has_signature();
}
inline ::google::protobuf::uint32 SignedPayload_t::signature() const {
  // @@protoc_insertion_point(field_get:SignedPayload_t.signature)
  return signature_;
}
inline void SignedPayload_t::set_signature(::google::protobuf::uint32 value) {
  set_has_signature();
  signature_ = value;
  // @@protoc_insertion_point(field_set:SignedPayload_t.signature)
}

// required bool bPayloadEncrypted = 3;
inline bool SignedPayload_t::has_bpayloadencrypted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SignedPayload_t::set_has_bpayloadencrypted() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SignedPayload_t::clear_has_bpayloadencrypted() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SignedPayload_t::clear_bpayloadencrypted() {
  bpayloadencrypted_ = false;
  clear_has_bpayloadencrypted();
}
inline bool SignedPayload_t::bpayloadencrypted() const {
  // @@protoc_insertion_point(field_get:SignedPayload_t.bPayloadEncrypted)
  return bpayloadencrypted_;
}
inline void SignedPayload_t::set_bpayloadencrypted(bool value) {
  set_has_bpayloadencrypted();
  bpayloadencrypted_ = value;
  // @@protoc_insertion_point(field_set:SignedPayload_t.bPayloadEncrypted)
}

// -------------------------------------------------------------------

// CBidirMsg_RelayPacket_SignedDestinationAddress_t

// required .SerializedNetAddress_t serializedAddr = 1;
inline bool CBidirMsg_RelayPacket_SignedDestinationAddress_t::has_serializedaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_has_serializedaddr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::clear_has_serializedaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::clear_serializedaddr() {
  if (serializedaddr_ != NULL) serializedaddr_->::SerializedNetAddress_t::Clear();
  clear_has_serializedaddr();
}
inline const ::SerializedNetAddress_t& CBidirMsg_RelayPacket_SignedDestinationAddress_t::serializedaddr() const {
  // @@protoc_insertion_point(field_get:CBidirMsg_RelayPacket.SignedDestinationAddress_t.serializedAddr)
  return serializedaddr_ != NULL ? *serializedaddr_ : *default_instance_->serializedaddr_;
}
inline ::SerializedNetAddress_t* CBidirMsg_RelayPacket_SignedDestinationAddress_t::mutable_serializedaddr() {
  set_has_serializedaddr();
  if (serializedaddr_ == NULL) serializedaddr_ = new ::SerializedNetAddress_t;
  // @@protoc_insertion_point(field_mutable:CBidirMsg_RelayPacket.SignedDestinationAddress_t.serializedAddr)
  return serializedaddr_;
}
inline ::SerializedNetAddress_t* CBidirMsg_RelayPacket_SignedDestinationAddress_t::release_serializedaddr() {
  clear_has_serializedaddr();
  ::SerializedNetAddress_t* temp = serializedaddr_;
  serializedaddr_ = NULL;
  return temp;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_allocated_serializedaddr(::SerializedNetAddress_t* serializedaddr) {
  delete serializedaddr_;
  serializedaddr_ = serializedaddr;
  if (serializedaddr) {
    set_has_serializedaddr();
  } else {
    clear_has_serializedaddr();
  }
  // @@protoc_insertion_point(field_set_allocated:CBidirMsg_RelayPacket.SignedDestinationAddress_t.serializedAddr)
}

// required uint32 signature = 2;
inline bool CBidirMsg_RelayPacket_SignedDestinationAddress_t::has_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_has_signature() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::clear_has_signature() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::clear_signature() {
  signature_ = 0u;
  clear_has_signature();
}
inline ::google::protobuf::uint32 CBidirMsg_RelayPacket_SignedDestinationAddress_t::signature() const {
  // @@protoc_insertion_point(field_get:CBidirMsg_RelayPacket.SignedDestinationAddress_t.signature)
  return signature_;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_signature(::google::protobuf::uint32 value) {
  set_has_signature();
  signature_ = value;
  // @@protoc_insertion_point(field_set:CBidirMsg_RelayPacket.SignedDestinationAddress_t.signature)
}

// optional bytes encryptedPayloadKey = 3;
inline bool CBidirMsg_RelayPacket_SignedDestinationAddress_t::has_encryptedpayloadkey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_has_encryptedpayloadkey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::clear_has_encryptedpayloadkey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::clear_encryptedpayloadkey() {
  if (encryptedpayloadkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptedpayloadkey_->clear();
  }
  clear_has_encryptedpayloadkey();
}
inline const ::std::string& CBidirMsg_RelayPacket_SignedDestinationAddress_t::encryptedpayloadkey() const {
  // @@protoc_insertion_point(field_get:CBidirMsg_RelayPacket.SignedDestinationAddress_t.encryptedPayloadKey)
  return *encryptedpayloadkey_;
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_encryptedpayloadkey(const ::std::string& value) {
  set_has_encryptedpayloadkey();
  if (encryptedpayloadkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptedpayloadkey_ = new ::std::string;
  }
  encryptedpayloadkey_->assign(value);
  // @@protoc_insertion_point(field_set:CBidirMsg_RelayPacket.SignedDestinationAddress_t.encryptedPayloadKey)
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_encryptedpayloadkey(const char* value) {
  set_has_encryptedpayloadkey();
  if (encryptedpayloadkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptedpayloadkey_ = new ::std::string;
  }
  encryptedpayloadkey_->assign(value);
  // @@protoc_insertion_point(field_set_char:CBidirMsg_RelayPacket.SignedDestinationAddress_t.encryptedPayloadKey)
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_encryptedpayloadkey(const void* value, size_t size) {
  set_has_encryptedpayloadkey();
  if (encryptedpayloadkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptedpayloadkey_ = new ::std::string;
  }
  encryptedpayloadkey_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CBidirMsg_RelayPacket.SignedDestinationAddress_t.encryptedPayloadKey)
}
inline ::std::string* CBidirMsg_RelayPacket_SignedDestinationAddress_t::mutable_encryptedpayloadkey() {
  set_has_encryptedpayloadkey();
  if (encryptedpayloadkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptedpayloadkey_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CBidirMsg_RelayPacket.SignedDestinationAddress_t.encryptedPayloadKey)
  return encryptedpayloadkey_;
}
inline ::std::string* CBidirMsg_RelayPacket_SignedDestinationAddress_t::release_encryptedpayloadkey() {
  clear_has_encryptedpayloadkey();
  if (encryptedpayloadkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = encryptedpayloadkey_;
    encryptedpayloadkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CBidirMsg_RelayPacket_SignedDestinationAddress_t::set_allocated_encryptedpayloadkey(::std::string* encryptedpayloadkey) {
  if (encryptedpayloadkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete encryptedpayloadkey_;
  }
  if (encryptedpayloadkey) {
    set_has_encryptedpayloadkey();
    encryptedpayloadkey_ = encryptedpayloadkey;
  } else {
    clear_has_encryptedpayloadkey();
    encryptedpayloadkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CBidirMsg_RelayPacket.SignedDestinationAddress_t.encryptedPayloadKey)
}

// -------------------------------------------------------------------

// CBidirMsg_RelayPacket

// required uint32 prevhopcount = 1;
inline bool CBidirMsg_RelayPacket::has_prevhopcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CBidirMsg_RelayPacket::set_has_prevhopcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CBidirMsg_RelayPacket::clear_has_prevhopcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CBidirMsg_RelayPacket::clear_prevhopcount() {
  prevhopcount_ = 0u;
  clear_has_prevhopcount();
}
inline ::google::protobuf::uint32 CBidirMsg_RelayPacket::prevhopcount() const {
  // @@protoc_insertion_point(field_get:CBidirMsg_RelayPacket.prevhopcount)
  return prevhopcount_;
}
inline void CBidirMsg_RelayPacket::set_prevhopcount(::google::protobuf::uint32 value) {
  set_has_prevhopcount();
  prevhopcount_ = value;
  // @@protoc_insertion_point(field_set:CBidirMsg_RelayPacket.prevhopcount)
}

// required .SerializedNetAddress_t originalSender = 2;
inline bool CBidirMsg_RelayPacket::has_originalsender() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CBidirMsg_RelayPacket::set_has_originalsender() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CBidirMsg_RelayPacket::clear_has_originalsender() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CBidirMsg_RelayPacket::clear_originalsender() {
  if (originalsender_ != NULL) originalsender_->::SerializedNetAddress_t::Clear();
  clear_has_originalsender();
}
inline const ::SerializedNetAddress_t& CBidirMsg_RelayPacket::originalsender() const {
  // @@protoc_insertion_point(field_get:CBidirMsg_RelayPacket.originalSender)
  return originalsender_ != NULL ? *originalsender_ : *default_instance_->originalsender_;
}
inline ::SerializedNetAddress_t* CBidirMsg_RelayPacket::mutable_originalsender() {
  set_has_originalsender();
  if (originalsender_ == NULL) originalsender_ = new ::SerializedNetAddress_t;
  // @@protoc_insertion_point(field_mutable:CBidirMsg_RelayPacket.originalSender)
  return originalsender_;
}
inline ::SerializedNetAddress_t* CBidirMsg_RelayPacket::release_originalsender() {
  clear_has_originalsender();
  ::SerializedNetAddress_t* temp = originalsender_;
  originalsender_ = NULL;
  return temp;
}
inline void CBidirMsg_RelayPacket::set_allocated_originalsender(::SerializedNetAddress_t* originalsender) {
  delete originalsender_;
  originalsender_ = originalsender;
  if (originalsender) {
    set_has_originalsender();
  } else {
    clear_has_originalsender();
  }
  // @@protoc_insertion_point(field_set_allocated:CBidirMsg_RelayPacket.originalSender)
}

// required .SignedPayload_t signedPayload = 3;
inline bool CBidirMsg_RelayPacket::has_signedpayload() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CBidirMsg_RelayPacket::set_has_signedpayload() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CBidirMsg_RelayPacket::clear_has_signedpayload() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CBidirMsg_RelayPacket::clear_signedpayload() {
  if (signedpayload_ != NULL) signedpayload_->::SignedPayload_t::Clear();
  clear_has_signedpayload();
}
inline const ::SignedPayload_t& CBidirMsg_RelayPacket::signedpayload() const {
  // @@protoc_insertion_point(field_get:CBidirMsg_RelayPacket.signedPayload)
  return signedpayload_ != NULL ? *signedpayload_ : *default_instance_->signedpayload_;
}
inline ::SignedPayload_t* CBidirMsg_RelayPacket::mutable_signedpayload() {
  set_has_signedpayload();
  if (signedpayload_ == NULL) signedpayload_ = new ::SignedPayload_t;
  // @@protoc_insertion_point(field_mutable:CBidirMsg_RelayPacket.signedPayload)
  return signedpayload_;
}
inline ::SignedPayload_t* CBidirMsg_RelayPacket::release_signedpayload() {
  clear_has_signedpayload();
  ::SignedPayload_t* temp = signedpayload_;
  signedpayload_ = NULL;
  return temp;
}
inline void CBidirMsg_RelayPacket::set_allocated_signedpayload(::SignedPayload_t* signedpayload) {
  delete signedpayload_;
  signedpayload_ = signedpayload;
  if (signedpayload) {
    set_has_signedpayload();
  } else {
    clear_has_signedpayload();
  }
  // @@protoc_insertion_point(field_set_allocated:CBidirMsg_RelayPacket.signedPayload)
}

// repeated .CBidirMsg_RelayPacket.SignedDestinationAddress_t recipientList = 4;
inline int CBidirMsg_RelayPacket::recipientlist_size() const {
  return recipientlist_.size();
}
inline void CBidirMsg_RelayPacket::clear_recipientlist() {
  recipientlist_.Clear();
}
inline const ::CBidirMsg_RelayPacket_SignedDestinationAddress_t& CBidirMsg_RelayPacket::recipientlist(int index) const {
  // @@protoc_insertion_point(field_get:CBidirMsg_RelayPacket.recipientList)
  return recipientlist_.Get(index);
}
inline ::CBidirMsg_RelayPacket_SignedDestinationAddress_t* CBidirMsg_RelayPacket::mutable_recipientlist(int index) {
  // @@protoc_insertion_point(field_mutable:CBidirMsg_RelayPacket.recipientList)
  return recipientlist_.Mutable(index);
}
inline ::CBidirMsg_RelayPacket_SignedDestinationAddress_t* CBidirMsg_RelayPacket::add_recipientlist() {
  // @@protoc_insertion_point(field_add:CBidirMsg_RelayPacket.recipientList)
  return recipientlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CBidirMsg_RelayPacket_SignedDestinationAddress_t >&
CBidirMsg_RelayPacket::recipientlist() const {
  // @@protoc_insertion_point(field_list:CBidirMsg_RelayPacket.recipientList)
  return recipientlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::CBidirMsg_RelayPacket_SignedDestinationAddress_t >*
CBidirMsg_RelayPacket::mutable_recipientlist() {
  // @@protoc_insertion_point(field_mutable_list:CBidirMsg_RelayPacket.recipientList)
  return &recipientlist_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CBidirMsg_RelayInfo_Operation_t> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CBidirMsg_RelayInfo_Operation_t>() {
  return ::CBidirMsg_RelayInfo_Operation_t_descriptor();
}
template <> struct is_proto_enum< ::CLC_Messages> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CLC_Messages>() {
  return ::CLC_Messages_descriptor();
}
template <> struct is_proto_enum< ::SVC_Messages> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SVC_Messages>() {
  return ::SVC_Messages_descriptor();
}
template <> struct is_proto_enum< ::VoiceDataFormat_t> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::VoiceDataFormat_t>() {
  return ::VoiceDataFormat_t_descriptor();
}
template <> struct is_proto_enum< ::RequestPause_t> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RequestPause_t>() {
  return ::RequestPause_t_descriptor();
}
template <> struct is_proto_enum< ::PrefetchType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PrefetchType>() {
  return ::PrefetchType_descriptor();
}
template <> struct is_proto_enum< ::ESplitScreenMessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ESplitScreenMessageType>() {
  return ::ESplitScreenMessageType_descriptor();
}
template <> struct is_proto_enum< ::EQueryCvarValueStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EQueryCvarValueStatus>() {
  return ::EQueryCvarValueStatus_descriptor();
}
template <> struct is_proto_enum< ::DIALOG_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DIALOG_TYPE>() {
  return ::DIALOG_TYPE_descriptor();
}
template <> struct is_proto_enum< ::SVC_Messages_LowFrequency> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SVC_Messages_LowFrequency>() {
  return ::SVC_Messages_LowFrequency_descriptor();
}
template <> struct is_proto_enum< ::Bidirectional_Messages> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Bidirectional_Messages>() {
  return ::Bidirectional_Messages_descriptor();
}
template <> struct is_proto_enum< ::Bidirectional_Messages_LowFrequency> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Bidirectional_Messages_LowFrequency>() {
  return ::Bidirectional_Messages_LowFrequency_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_netmessages_2eproto__INCLUDED
